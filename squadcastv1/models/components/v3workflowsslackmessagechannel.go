// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
)

type V3WorkflowsSlackMessageChannelName string

const (
	V3WorkflowsSlackMessageChannelNameSlackMessageChannel V3WorkflowsSlackMessageChannelName = "slack_message_channel"
)

func (e V3WorkflowsSlackMessageChannelName) ToPointer() *V3WorkflowsSlackMessageChannelName {
	return &e
}
func (e *V3WorkflowsSlackMessageChannelName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "slack_message_channel":
		*e = V3WorkflowsSlackMessageChannelName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSlackMessageChannelName: %v", v)
	}
}

type V3WorkflowsSlackMessageChannelData struct {
	ChannelID   string `json:"channel_id"`
	ChannelName string `json:"channel_name"`
	Message     string `json:"message"`
}

func (v V3WorkflowsSlackMessageChannelData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSlackMessageChannelData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"channel_id", "channel_name", "message"}); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsSlackMessageChannelData) GetChannelID() string {
	if o == nil {
		return ""
	}
	return o.ChannelID
}

func (o *V3WorkflowsSlackMessageChannelData) GetChannelName() string {
	if o == nil {
		return ""
	}
	return o.ChannelName
}

func (o *V3WorkflowsSlackMessageChannelData) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

type V3WorkflowsSlackMessageChannel struct {
	Name V3WorkflowsSlackMessageChannelName `json:"name"`
	Data V3WorkflowsSlackMessageChannelData `json:"data"`
}

func (v V3WorkflowsSlackMessageChannel) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSlackMessageChannel) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name", "data"}); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsSlackMessageChannel) GetName() V3WorkflowsSlackMessageChannelName {
	if o == nil {
		return V3WorkflowsSlackMessageChannelName("")
	}
	return o.Name
}

func (o *V3WorkflowsSlackMessageChannel) GetData() V3WorkflowsSlackMessageChannelData {
	if o == nil {
		return V3WorkflowsSlackMessageChannelData{}
	}
	return o.Data
}
