// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V4CreateScheduleRequestOwnerType string

const (
	V4CreateScheduleRequestOwnerTypeUser  V4CreateScheduleRequestOwnerType = "user"
	V4CreateScheduleRequestOwnerTypeSquad V4CreateScheduleRequestOwnerType = "squad"
)

func (e V4CreateScheduleRequestOwnerType) ToPointer() *V4CreateScheduleRequestOwnerType {
	return &e
}
func (e *V4CreateScheduleRequestOwnerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		fallthrough
	case "squad":
		*e = V4CreateScheduleRequestOwnerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V4CreateScheduleRequestOwnerType: %v", v)
	}
}

type V4CreateScheduleRequest struct {
	Name        string                           `json:"name"`
	Description string                           `json:"description"`
	TeamID      string                           `json:"teamID"`
	OwnerID     string                           `json:"ownerID"`
	OwnerType   V4CreateScheduleRequestOwnerType `json:"ownerType"`
	TimeZone    string                           `json:"timeZone"`
	Tags        []V4Tag                          `json:"tags"`
}

func (v *V4CreateScheduleRequest) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V4CreateScheduleRequest) GetDescription() string {
	if v == nil {
		return ""
	}
	return v.Description
}

func (v *V4CreateScheduleRequest) GetTeamID() string {
	if v == nil {
		return ""
	}
	return v.TeamID
}

func (v *V4CreateScheduleRequest) GetOwnerID() string {
	if v == nil {
		return ""
	}
	return v.OwnerID
}

func (v *V4CreateScheduleRequest) GetOwnerType() V4CreateScheduleRequestOwnerType {
	if v == nil {
		return V4CreateScheduleRequestOwnerType("")
	}
	return v.OwnerType
}

func (v *V4CreateScheduleRequest) GetTimeZone() string {
	if v == nil {
		return ""
	}
	return v.TimeZone
}

func (v *V4CreateScheduleRequest) GetTags() []V4Tag {
	if v == nil {
		return []V4Tag{}
	}
	return v.Tags
}
