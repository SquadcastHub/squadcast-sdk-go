// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V3ServicesSuppressionRulesSuppressionRule struct {
	RuleID          string                                      `json:"rule_id"`
	CreatedAt       time.Time                                   `json:"created_at"`
	UpdatedAt       time.Time                                   `json:"updated_at"`
	CreatedBy       string                                      `json:"created_by"`
	UpdatedBy       string                                      `json:"updated_by"`
	Description     string                                      `json:"description"`
	Expression      string                                      `json:"expression"`
	IsBasic         bool                                        `json:"is_basic"`
	IsTimebased     bool                                        `json:"is_timebased"`
	Timeslots       []V3ServicesSuppressionRulesTimeslot        `json:"timeslots"`
	BasicExpression []V3ServicesSuppressionRulesBasicExpression `json:"basic_expression"`
}

func (v V3ServicesSuppressionRulesSuppressionRule) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3ServicesSuppressionRulesSuppressionRule) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"rule_id", "created_at", "updated_at", "created_by", "updated_by", "description", "expression", "is_basic", "is_timebased", "timeslots", "basic_expression"}); err != nil {
		return err
	}
	return nil
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetRuleID() string {
	if o == nil {
		return ""
	}
	return o.RuleID
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetCreatedBy() string {
	if o == nil {
		return ""
	}
	return o.CreatedBy
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetUpdatedBy() string {
	if o == nil {
		return ""
	}
	return o.UpdatedBy
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetExpression() string {
	if o == nil {
		return ""
	}
	return o.Expression
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetIsBasic() bool {
	if o == nil {
		return false
	}
	return o.IsBasic
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetIsTimebased() bool {
	if o == nil {
		return false
	}
	return o.IsTimebased
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetTimeslots() []V3ServicesSuppressionRulesTimeslot {
	if o == nil {
		return nil
	}
	return o.Timeslots
}

func (o *V3ServicesSuppressionRulesSuppressionRule) GetBasicExpression() []V3ServicesSuppressionRulesBasicExpression {
	if o == nil {
		return []V3ServicesSuppressionRulesBasicExpression{}
	}
	return o.BasicExpression
}
