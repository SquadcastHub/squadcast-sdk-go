// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
)

type V3WorkflowsSqTriggerManualWebhookUpdateName string

const (
	V3WorkflowsSqTriggerManualWebhookUpdateNameSqTriggerManualWebhook V3WorkflowsSqTriggerManualWebhookUpdateName = "sq_trigger_manual_webhook"
)

func (e V3WorkflowsSqTriggerManualWebhookUpdateName) ToPointer() *V3WorkflowsSqTriggerManualWebhookUpdateName {
	return &e
}
func (e *V3WorkflowsSqTriggerManualWebhookUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sq_trigger_manual_webhook":
		*e = V3WorkflowsSqTriggerManualWebhookUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSqTriggerManualWebhookUpdateName: %v", v)
	}
}

type V3WorkflowsSqTriggerManualWebhookUpdateData struct {
	ID *string `json:"id,omitempty"`
}

func (v V3WorkflowsSqTriggerManualWebhookUpdateData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqTriggerManualWebhookUpdateData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsSqTriggerManualWebhookUpdateData) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

type V3WorkflowsSqTriggerManualWebhookUpdate struct {
	Name V3WorkflowsSqTriggerManualWebhookUpdateName  `json:"name"`
	Data *V3WorkflowsSqTriggerManualWebhookUpdateData `json:"data,omitempty"`
}

func (v V3WorkflowsSqTriggerManualWebhookUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqTriggerManualWebhookUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsSqTriggerManualWebhookUpdate) GetName() V3WorkflowsSqTriggerManualWebhookUpdateName {
	if o == nil {
		return V3WorkflowsSqTriggerManualWebhookUpdateName("")
	}
	return o.Name
}

func (o *V3WorkflowsSqTriggerManualWebhookUpdate) GetData() *V3WorkflowsSqTriggerManualWebhookUpdateData {
	if o == nil {
		return nil
	}
	return o.Data
}
