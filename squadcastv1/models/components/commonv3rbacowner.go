// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CommonV3RBACOwnerType - The type of the owner.
type CommonV3RBACOwnerType string

const (
	CommonV3RBACOwnerTypeTeam CommonV3RBACOwnerType = "team"
)

func (e CommonV3RBACOwnerType) ToPointer() *CommonV3RBACOwnerType {
	return &e
}
func (e *CommonV3RBACOwnerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "team":
		*e = CommonV3RBACOwnerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommonV3RBACOwnerType: %v", v)
	}
}

// CommonV3RBACOwner - Represents the RBAC owner of an entity.
type CommonV3RBACOwner struct {
	// The ID of the owner.
	ID string `json:"id"`
	// The type of the owner.
	Type CommonV3RBACOwnerType `json:"type"`
}

func (o *CommonV3RBACOwner) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CommonV3RBACOwner) GetType() CommonV3RBACOwnerType {
	if o == nil {
		return CommonV3RBACOwnerType("")
	}
	return o.Type
}
