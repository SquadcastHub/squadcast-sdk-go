// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

// V3IncidentsAdditionalResponderDetails - Details for an additional responder.
type V3IncidentsAdditionalResponderDetails struct {
	ID               string    `json:"id"`
	Type             string    `json:"type"`
	TimeOfAssignment time.Time `json:"timeOfAssignment"`
	Reason           string    `json:"reason"`
	Name             string    `json:"name"`
	LastNotifiedAt   time.Time `json:"last_notified_at"`
}

func (v V3IncidentsAdditionalResponderDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3IncidentsAdditionalResponderDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"id", "type", "timeOfAssignment", "reason", "name", "last_notified_at"}); err != nil {
		return err
	}
	return nil
}

func (o *V3IncidentsAdditionalResponderDetails) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V3IncidentsAdditionalResponderDetails) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *V3IncidentsAdditionalResponderDetails) GetTimeOfAssignment() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.TimeOfAssignment
}

func (o *V3IncidentsAdditionalResponderDetails) GetReason() string {
	if o == nil {
		return ""
	}
	return o.Reason
}

func (o *V3IncidentsAdditionalResponderDetails) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *V3IncidentsAdditionalResponderDetails) GetLastNotifiedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.LastNotifiedAt
}
