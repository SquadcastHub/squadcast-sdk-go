// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

type V3GlobalEventRulesCreatedGlobalEventRuleResponse struct {
	ID          int64                          `json:"id"`
	OwnerID     string                         `json:"owner_id"`
	Name        string                         `json:"name"`
	Description string                         `json:"description"`
	RoutingKey  string                         `json:"routing_key"`
	EntityOwner *V3GlobalEventRulesEntityOwner `json:"entity_owner,omitempty"`
	Rulesets    []V3GlobalEventRulesRuleset    `json:"rulesets,omitempty"`
	CreatedAt   time.Time                      `json:"created_at"`
	CreatedBy   string                         `json:"created_by"`
	UpdatedAt   time.Time                      `json:"updated_at"`
	UpdatedBy   string                         `json:"updated_by"`
}

func (v V3GlobalEventRulesCreatedGlobalEventRuleResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"id", "owner_id", "name", "description", "routing_key", "created_at", "created_by", "updated_at", "updated_by"}); err != nil {
		return err
	}
	return nil
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetID() int64 {
	if v == nil {
		return 0
	}
	return v.ID
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetOwnerID() string {
	if v == nil {
		return ""
	}
	return v.OwnerID
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetDescription() string {
	if v == nil {
		return ""
	}
	return v.Description
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetRoutingKey() string {
	if v == nil {
		return ""
	}
	return v.RoutingKey
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetEntityOwner() *V3GlobalEventRulesEntityOwner {
	if v == nil {
		return nil
	}
	return v.EntityOwner
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetRulesets() []V3GlobalEventRulesRuleset {
	if v == nil {
		return nil
	}
	return v.Rulesets
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetCreatedBy() string {
	if v == nil {
		return ""
	}
	return v.CreatedBy
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetUpdatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.UpdatedAt
}

func (v *V3GlobalEventRulesCreatedGlobalEventRuleResponse) GetUpdatedBy() string {
	if v == nil {
		return ""
	}
	return v.UpdatedBy
}
