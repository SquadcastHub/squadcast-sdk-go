// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

type V3GlobalEventRulesRulesetRuleResponse struct {
	ID                *int64                        `json:"id,omitempty"`
	GlobalEventRuleID *int64                        `json:"global_event_rule_id,omitempty"`
	Description       *string                       `json:"description,omitempty"`
	Expression        *string                       `json:"expression,omitempty"`
	Action            *V3GlobalEventRulesRuleAction `json:"action,omitempty"`
	CreatedAt         *time.Time                    `json:"created_at,omitempty"`
	CreatedBy         *string                       `json:"created_by,omitempty"`
	UpdatedAt         *time.Time                    `json:"updated_at,omitempty"`
	UpdatedBy         *string                       `json:"updated_by,omitempty"`
}

func (v V3GlobalEventRulesRulesetRuleResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3GlobalEventRulesRulesetRuleResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetID() *int64 {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetGlobalEventRuleID() *int64 {
	if v == nil {
		return nil
	}
	return v.GlobalEventRuleID
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetDescription() *string {
	if v == nil {
		return nil
	}
	return v.Description
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetExpression() *string {
	if v == nil {
		return nil
	}
	return v.Expression
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetAction() *V3GlobalEventRulesRuleAction {
	if v == nil {
		return nil
	}
	return v.Action
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetCreatedAt() *time.Time {
	if v == nil {
		return nil
	}
	return v.CreatedAt
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetCreatedBy() *string {
	if v == nil {
		return nil
	}
	return v.CreatedBy
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetUpdatedAt() *time.Time {
	if v == nil {
		return nil
	}
	return v.UpdatedAt
}

func (v *V3GlobalEventRulesRulesetRuleResponse) GetUpdatedBy() *string {
	if v == nil {
		return nil
	}
	return v.UpdatedBy
}
