// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
)

type V3WorkflowsSlackCreateIncidentChannelUpdateName string

const (
	V3WorkflowsSlackCreateIncidentChannelUpdateNameSlackCreateIncidentChannel V3WorkflowsSlackCreateIncidentChannelUpdateName = "slack_create_incident_channel"
)

func (e V3WorkflowsSlackCreateIncidentChannelUpdateName) ToPointer() *V3WorkflowsSlackCreateIncidentChannelUpdateName {
	return &e
}
func (e *V3WorkflowsSlackCreateIncidentChannelUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "slack_create_incident_channel":
		*e = V3WorkflowsSlackCreateIncidentChannelUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSlackCreateIncidentChannelUpdateName: %v", v)
	}
}

type V3WorkflowsSlackCreateIncidentChannelUpdateData struct {
	AutoName    *bool   `json:"auto_name,omitempty"`
	ChannelName *string `json:"channel_name,omitempty"`
}

func (v V3WorkflowsSlackCreateIncidentChannelUpdateData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSlackCreateIncidentChannelUpdateData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSlackCreateIncidentChannelUpdateData) GetAutoName() *bool {
	if v == nil {
		return nil
	}
	return v.AutoName
}

func (v *V3WorkflowsSlackCreateIncidentChannelUpdateData) GetChannelName() *string {
	if v == nil {
		return nil
	}
	return v.ChannelName
}

type V3WorkflowsSlackCreateIncidentChannelUpdate struct {
	Name V3WorkflowsSlackCreateIncidentChannelUpdateName  `json:"name"`
	Data *V3WorkflowsSlackCreateIncidentChannelUpdateData `json:"data,omitempty"`
}

func (v V3WorkflowsSlackCreateIncidentChannelUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSlackCreateIncidentChannelUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSlackCreateIncidentChannelUpdate) GetName() V3WorkflowsSlackCreateIncidentChannelUpdateName {
	if v == nil {
		return V3WorkflowsSlackCreateIncidentChannelUpdateName("")
	}
	return v.Name
}

func (v *V3WorkflowsSlackCreateIncidentChannelUpdate) GetData() *V3WorkflowsSlackCreateIncidentChannelUpdateData {
	if v == nil {
		return nil
	}
	return v.Data
}
