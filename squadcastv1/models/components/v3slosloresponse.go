// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V3SLOSLOResponseTags struct {
}

type V3SLOSLOResponse struct {
	ID                   int64                     `json:"id"`
	Name                 string                    `json:"name"`
	Description          *string                   `json:"description,omitempty"`
	TimeIntervalType     V3SLOTimeIntervalType     `json:"time_interval_type"`
	ServiceIds           []string                  `json:"service_ids"`
	Slis                 []string                  `json:"slis"`
	TargetSlo            float32                   `json:"target_slo"`
	CurrentSlo           *float32                  `json:"current_slo,omitempty"`
	StartTime            time.Time                 `json:"start_time"`
	EndTime              time.Time                 `json:"end_time"`
	IsHealthy            *bool                     `json:"is_healthy,omitempty"`
	RemainingErrorBudget *float32                  `json:"remaining_error_budget,omitempty"`
	AllocatedErrorBudget float32                   `json:"allocated_error_budget"`
	IsActive             bool                      `json:"is_active"`
	Tags                 *V3SLOSLOResponseTags     `json:"tags,omitempty"`
	IncidentCount        *int64                    `json:"incident_count,omitempty"`
	FalsePositiveCount   *int64                    `json:"false_positive_count,omitempty"`
	SloMonitoringChecks  []V3SLOSLOMonitoringCheck `json:"slo_monitoring_checks,omitempty"`
	SloActions           []V3SLOSLOAction          `json:"slo_actions,omitempty"`
	OwnerType            string                    `json:"owner_type"`
	OwnerID              string                    `json:"owner_id"`
	OrgID                string                    `json:"org_id"`
	SloOwnerID           *string                   `json:"slo_owner_id,omitempty"`
	SloOwnerType         *V3SLOSLOOwnerType        `json:"slo_owner_type,omitempty"`
	CreatedAt            *time.Time                `json:"created_at,omitempty"`
	UpdatedAt            *time.Time                `json:"updated_at,omitempty"`
	DeletedAt            *time.Time                `json:"deleted_at,omitempty"`
	DurationInDays       *int64                    `json:"duration_in_days,omitempty"`
}

func (v V3SLOSLOResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3SLOSLOResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"id", "name", "time_interval_type", "service_ids", "slis", "target_slo", "start_time", "end_time", "allocated_error_budget", "is_active", "owner_type", "owner_id", "org_id"}); err != nil {
		return err
	}
	return nil
}

func (o *V3SLOSLOResponse) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *V3SLOSLOResponse) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *V3SLOSLOResponse) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *V3SLOSLOResponse) GetTimeIntervalType() V3SLOTimeIntervalType {
	if o == nil {
		return V3SLOTimeIntervalType("")
	}
	return o.TimeIntervalType
}

func (o *V3SLOSLOResponse) GetServiceIds() []string {
	if o == nil {
		return []string{}
	}
	return o.ServiceIds
}

func (o *V3SLOSLOResponse) GetSlis() []string {
	if o == nil {
		return []string{}
	}
	return o.Slis
}

func (o *V3SLOSLOResponse) GetTargetSlo() float32 {
	if o == nil {
		return 0.0
	}
	return o.TargetSlo
}

func (o *V3SLOSLOResponse) GetCurrentSlo() *float32 {
	if o == nil {
		return nil
	}
	return o.CurrentSlo
}

func (o *V3SLOSLOResponse) GetStartTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartTime
}

func (o *V3SLOSLOResponse) GetEndTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndTime
}

func (o *V3SLOSLOResponse) GetIsHealthy() *bool {
	if o == nil {
		return nil
	}
	return o.IsHealthy
}

func (o *V3SLOSLOResponse) GetRemainingErrorBudget() *float32 {
	if o == nil {
		return nil
	}
	return o.RemainingErrorBudget
}

func (o *V3SLOSLOResponse) GetAllocatedErrorBudget() float32 {
	if o == nil {
		return 0.0
	}
	return o.AllocatedErrorBudget
}

func (o *V3SLOSLOResponse) GetIsActive() bool {
	if o == nil {
		return false
	}
	return o.IsActive
}

func (o *V3SLOSLOResponse) GetTags() *V3SLOSLOResponseTags {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *V3SLOSLOResponse) GetIncidentCount() *int64 {
	if o == nil {
		return nil
	}
	return o.IncidentCount
}

func (o *V3SLOSLOResponse) GetFalsePositiveCount() *int64 {
	if o == nil {
		return nil
	}
	return o.FalsePositiveCount
}

func (o *V3SLOSLOResponse) GetSloMonitoringChecks() []V3SLOSLOMonitoringCheck {
	if o == nil {
		return nil
	}
	return o.SloMonitoringChecks
}

func (o *V3SLOSLOResponse) GetSloActions() []V3SLOSLOAction {
	if o == nil {
		return nil
	}
	return o.SloActions
}

func (o *V3SLOSLOResponse) GetOwnerType() string {
	if o == nil {
		return ""
	}
	return o.OwnerType
}

func (o *V3SLOSLOResponse) GetOwnerID() string {
	if o == nil {
		return ""
	}
	return o.OwnerID
}

func (o *V3SLOSLOResponse) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}

func (o *V3SLOSLOResponse) GetSloOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.SloOwnerID
}

func (o *V3SLOSLOResponse) GetSloOwnerType() *V3SLOSLOOwnerType {
	if o == nil {
		return nil
	}
	return o.SloOwnerType
}

func (o *V3SLOSLOResponse) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *V3SLOSLOResponse) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *V3SLOSLOResponse) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *V3SLOSLOResponse) GetDurationInDays() *int64 {
	if o == nil {
		return nil
	}
	return o.DurationInDays
}
