// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type EscalationPolicies struct {
	CreateEscalationPolicies *bool `json:"create-escalation-policies,omitempty"`
	ReadEscalationPolicies   *bool `json:"read-escalation-policies,omitempty"`
	UpdateEscalationPolicies *bool `json:"update-escalation-policies,omitempty"`
	DeleteEscalationPolicies *bool `json:"delete-escalation-policies,omitempty"`
}

func (o *EscalationPolicies) GetCreateEscalationPolicies() *bool {
	if o == nil {
		return nil
	}
	return o.CreateEscalationPolicies
}

func (o *EscalationPolicies) GetReadEscalationPolicies() *bool {
	if o == nil {
		return nil
	}
	return o.ReadEscalationPolicies
}

func (o *EscalationPolicies) GetUpdateEscalationPolicies() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateEscalationPolicies
}

func (o *EscalationPolicies) GetDeleteEscalationPolicies() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteEscalationPolicies
}

type Schedules struct {
	CreateSchedules *bool `json:"create-schedules,omitempty"`
	ReadSchedules   *bool `json:"read-schedules,omitempty"`
	UpdateSchedules *bool `json:"update-schedules,omitempty"`
	DeleteSchedules *bool `json:"delete-schedules,omitempty"`
}

func (o *Schedules) GetCreateSchedules() *bool {
	if o == nil {
		return nil
	}
	return o.CreateSchedules
}

func (o *Schedules) GetReadSchedules() *bool {
	if o == nil {
		return nil
	}
	return o.ReadSchedules
}

func (o *Schedules) GetUpdateSchedules() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateSchedules
}

func (o *Schedules) GetDeleteSchedules() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteSchedules
}

type Services struct {
	CreateServices *bool `json:"create-services,omitempty"`
	ReadServices   *bool `json:"read-services,omitempty"`
	UpdateServices *bool `json:"update-services,omitempty"`
	DeleteServices *bool `json:"delete-services,omitempty"`
}

func (o *Services) GetCreateServices() *bool {
	if o == nil {
		return nil
	}
	return o.CreateServices
}

func (o *Services) GetReadServices() *bool {
	if o == nil {
		return nil
	}
	return o.ReadServices
}

func (o *Services) GetUpdateServices() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateServices
}

func (o *Services) GetDeleteServices() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteServices
}

type Squads struct {
	CreateSquads *bool `json:"create-squads,omitempty"`
	ReadSquads   *bool `json:"read-squads,omitempty"`
	UpdateSquads *bool `json:"update-squads,omitempty"`
	DeleteSquads *bool `json:"delete-squads,omitempty"`
}

func (o *Squads) GetCreateSquads() *bool {
	if o == nil {
		return nil
	}
	return o.CreateSquads
}

func (o *Squads) GetReadSquads() *bool {
	if o == nil {
		return nil
	}
	return o.ReadSquads
}

func (o *Squads) GetUpdateSquads() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateSquads
}

func (o *Squads) GetDeleteSquads() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteSquads
}

type StakeholderGroups struct {
	CreateStakeholderGroups *bool `json:"create-stakeholder-groups,omitempty"`
	ReadStakeholderGroups   *bool `json:"read-stakeholder-groups,omitempty"`
	UpdateStakeholderGroups *bool `json:"update-stakeholder-groups,omitempty"`
	DeleteStakeholderGroups *bool `json:"delete-stakeholder-groups,omitempty"`
}

func (o *StakeholderGroups) GetCreateStakeholderGroups() *bool {
	if o == nil {
		return nil
	}
	return o.CreateStakeholderGroups
}

func (o *StakeholderGroups) GetReadStakeholderGroups() *bool {
	if o == nil {
		return nil
	}
	return o.ReadStakeholderGroups
}

func (o *StakeholderGroups) GetUpdateStakeholderGroups() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateStakeholderGroups
}

func (o *StakeholderGroups) GetDeleteStakeholderGroups() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteStakeholderGroups
}

type Runbooks struct {
	CreateRunbooks *bool `json:"create-runbooks,omitempty"`
	ReadRunbooks   *bool `json:"read-runbooks,omitempty"`
	UpdateRunbooks *bool `json:"update-runbooks,omitempty"`
	DeleteRunbooks *bool `json:"delete-runbooks,omitempty"`
}

func (o *Runbooks) GetCreateRunbooks() *bool {
	if o == nil {
		return nil
	}
	return o.CreateRunbooks
}

func (o *Runbooks) GetReadRunbooks() *bool {
	if o == nil {
		return nil
	}
	return o.ReadRunbooks
}

func (o *Runbooks) GetUpdateRunbooks() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateRunbooks
}

func (o *Runbooks) GetDeleteRunbooks() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteRunbooks
}

type Postmortems struct {
	CreatePostmortems *bool `json:"create-postmortems,omitempty"`
	ReadPostmortems   *bool `json:"read-postmortems,omitempty"`
	UpdatePostmortems *bool `json:"update-postmortems,omitempty"`
	DeletePostmortems *bool `json:"delete-postmortems,omitempty"`
}

func (o *Postmortems) GetCreatePostmortems() *bool {
	if o == nil {
		return nil
	}
	return o.CreatePostmortems
}

func (o *Postmortems) GetReadPostmortems() *bool {
	if o == nil {
		return nil
	}
	return o.ReadPostmortems
}

func (o *Postmortems) GetUpdatePostmortems() *bool {
	if o == nil {
		return nil
	}
	return o.UpdatePostmortems
}

func (o *Postmortems) GetDeletePostmortems() *bool {
	if o == nil {
		return nil
	}
	return o.DeletePostmortems
}

type StatusPages struct {
	CreateStatusPages *bool `json:"create-status-pages,omitempty"`
	ReadStatusPages   *bool `json:"read-status-pages,omitempty"`
	UpdateStatusPages *bool `json:"update-status-pages,omitempty"`
	DeleteStatusPages *bool `json:"delete-status-pages,omitempty"`
}

func (o *StatusPages) GetCreateStatusPages() *bool {
	if o == nil {
		return nil
	}
	return o.CreateStatusPages
}

func (o *StatusPages) GetReadStatusPages() *bool {
	if o == nil {
		return nil
	}
	return o.ReadStatusPages
}

func (o *StatusPages) GetUpdateStatusPages() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateStatusPages
}

func (o *StatusPages) GetDeleteStatusPages() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteStatusPages
}

type TeamAnalytics struct {
	ReadTeamAnalytics *bool `json:"read-team-analytics,omitempty"`
}

func (o *TeamAnalytics) GetReadTeamAnalytics() *bool {
	if o == nil {
		return nil
	}
	return o.ReadTeamAnalytics
}

type Slos struct {
	CreateSlos *bool `json:"create-slos,omitempty"`
	ReadSlos   *bool `json:"read-slos,omitempty"`
	UpdateSlos *bool `json:"update-slos,omitempty"`
	DeleteSlos *bool `json:"delete-slos,omitempty"`
}

func (o *Slos) GetCreateSlos() *bool {
	if o == nil {
		return nil
	}
	return o.CreateSlos
}

func (o *Slos) GetReadSlos() *bool {
	if o == nil {
		return nil
	}
	return o.ReadSlos
}

func (o *Slos) GetUpdateSlos() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateSlos
}

func (o *Slos) GetDeleteSlos() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteSlos
}

type Webforms struct {
	CreateWebforms *bool `json:"create-webforms,omitempty"`
	ReadWebforms   *bool `json:"read-webforms,omitempty"`
	UpdateWebforms *bool `json:"update-webforms,omitempty"`
	DeleteWebforms *bool `json:"delete-webforms,omitempty"`
}

func (o *Webforms) GetCreateWebforms() *bool {
	if o == nil {
		return nil
	}
	return o.CreateWebforms
}

func (o *Webforms) GetReadWebforms() *bool {
	if o == nil {
		return nil
	}
	return o.ReadWebforms
}

func (o *Webforms) GetUpdateWebforms() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateWebforms
}

func (o *Webforms) GetDeleteWebforms() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteWebforms
}

type Workflows struct {
	CreateWorkflows *bool `json:"create-workflows,omitempty"`
	ReadWorkflows   *bool `json:"read-workflows,omitempty"`
	UpdateWorkflows *bool `json:"update-workflows,omitempty"`
	DeleteWorkflows *bool `json:"delete-workflows,omitempty"`
}

func (o *Workflows) GetCreateWorkflows() *bool {
	if o == nil {
		return nil
	}
	return o.CreateWorkflows
}

func (o *Workflows) GetReadWorkflows() *bool {
	if o == nil {
		return nil
	}
	return o.ReadWorkflows
}

func (o *Workflows) GetUpdateWorkflows() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateWorkflows
}

func (o *Workflows) GetDeleteWorkflows() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteWorkflows
}

type Ger struct {
	CreateGer *bool `json:"create-ger,omitempty"`
	ReadGer   *bool `json:"read-ger,omitempty"`
	UpdateGer *bool `json:"update-ger,omitempty"`
	DeleteGer *bool `json:"delete-ger,omitempty"`
}

func (o *Ger) GetCreateGer() *bool {
	if o == nil {
		return nil
	}
	return o.CreateGer
}

func (o *Ger) GetReadGer() *bool {
	if o == nil {
		return nil
	}
	return o.ReadGer
}

func (o *Ger) GetUpdateGer() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateGer
}

func (o *Ger) GetDeleteGer() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteGer
}

type RoutingNumbers struct {
	CreateRoutingNumbers *bool `json:"create-routing-numbers,omitempty"`
	ReadRoutingNumbers   *bool `json:"read-routing-numbers,omitempty"`
	UpdateRoutingNumbers *bool `json:"update-routing-numbers,omitempty"`
	DeleteRoutingNumbers *bool `json:"delete-routing-numbers,omitempty"`
}

func (o *RoutingNumbers) GetCreateRoutingNumbers() *bool {
	if o == nil {
		return nil
	}
	return o.CreateRoutingNumbers
}

func (o *RoutingNumbers) GetReadRoutingNumbers() *bool {
	if o == nil {
		return nil
	}
	return o.ReadRoutingNumbers
}

func (o *RoutingNumbers) GetUpdateRoutingNumbers() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateRoutingNumbers
}

func (o *RoutingNumbers) GetDeleteRoutingNumbers() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteRoutingNumbers
}

type GlobalOncallReminderRules struct {
	CreateGlobalOncallReminderRules *bool `json:"create-global-oncall-reminder-rules,omitempty"`
	ReadGlobalOncallReminderRules   *bool `json:"read-global-oncall-reminder-rules,omitempty"`
	UpdateGlobalOncallReminderRules *bool `json:"update-global-oncall-reminder-rules,omitempty"`
	DeleteGlobalOncallReminderRules *bool `json:"delete-global-oncall-reminder-rules,omitempty"`
}

func (o *GlobalOncallReminderRules) GetCreateGlobalOncallReminderRules() *bool {
	if o == nil {
		return nil
	}
	return o.CreateGlobalOncallReminderRules
}

func (o *GlobalOncallReminderRules) GetReadGlobalOncallReminderRules() *bool {
	if o == nil {
		return nil
	}
	return o.ReadGlobalOncallReminderRules
}

func (o *GlobalOncallReminderRules) GetUpdateGlobalOncallReminderRules() *bool {
	if o == nil {
		return nil
	}
	return o.UpdateGlobalOncallReminderRules
}

func (o *GlobalOncallReminderRules) GetDeleteGlobalOncallReminderRules() *bool {
	if o == nil {
		return nil
	}
	return o.DeleteGlobalOncallReminderRules
}

type V3TeamsAbilities struct {
	EscalationPolicies        *EscalationPolicies        `json:"escalation_policies,omitempty"`
	Schedules                 *Schedules                 `json:"schedules,omitempty"`
	Services                  *Services                  `json:"services,omitempty"`
	Squads                    *Squads                    `json:"squads,omitempty"`
	StakeholderGroups         *StakeholderGroups         `json:"stakeholder_groups,omitempty"`
	Runbooks                  *Runbooks                  `json:"runbooks,omitempty"`
	Postmortems               *Postmortems               `json:"postmortems,omitempty"`
	StatusPages               *StatusPages               `json:"status_pages,omitempty"`
	TeamAnalytics             *TeamAnalytics             `json:"team_analytics,omitempty"`
	Slos                      *Slos                      `json:"slos,omitempty"`
	Webforms                  *Webforms                  `json:"webforms,omitempty"`
	Workflows                 *Workflows                 `json:"workflows,omitempty"`
	Ger                       *Ger                       `json:"ger,omitempty"`
	RoutingNumbers            *RoutingNumbers            `json:"routing_numbers,omitempty"`
	GlobalOncallReminderRules *GlobalOncallReminderRules `json:"global_oncall_reminder_rules,omitempty"`
}

func (o *V3TeamsAbilities) GetEscalationPolicies() *EscalationPolicies {
	if o == nil {
		return nil
	}
	return o.EscalationPolicies
}

func (o *V3TeamsAbilities) GetSchedules() *Schedules {
	if o == nil {
		return nil
	}
	return o.Schedules
}

func (o *V3TeamsAbilities) GetServices() *Services {
	if o == nil {
		return nil
	}
	return o.Services
}

func (o *V3TeamsAbilities) GetSquads() *Squads {
	if o == nil {
		return nil
	}
	return o.Squads
}

func (o *V3TeamsAbilities) GetStakeholderGroups() *StakeholderGroups {
	if o == nil {
		return nil
	}
	return o.StakeholderGroups
}

func (o *V3TeamsAbilities) GetRunbooks() *Runbooks {
	if o == nil {
		return nil
	}
	return o.Runbooks
}

func (o *V3TeamsAbilities) GetPostmortems() *Postmortems {
	if o == nil {
		return nil
	}
	return o.Postmortems
}

func (o *V3TeamsAbilities) GetStatusPages() *StatusPages {
	if o == nil {
		return nil
	}
	return o.StatusPages
}

func (o *V3TeamsAbilities) GetTeamAnalytics() *TeamAnalytics {
	if o == nil {
		return nil
	}
	return o.TeamAnalytics
}

func (o *V3TeamsAbilities) GetSlos() *Slos {
	if o == nil {
		return nil
	}
	return o.Slos
}

func (o *V3TeamsAbilities) GetWebforms() *Webforms {
	if o == nil {
		return nil
	}
	return o.Webforms
}

func (o *V3TeamsAbilities) GetWorkflows() *Workflows {
	if o == nil {
		return nil
	}
	return o.Workflows
}

func (o *V3TeamsAbilities) GetGer() *Ger {
	if o == nil {
		return nil
	}
	return o.Ger
}

func (o *V3TeamsAbilities) GetRoutingNumbers() *RoutingNumbers {
	if o == nil {
		return nil
	}
	return o.RoutingNumbers
}

func (o *V3TeamsAbilities) GetGlobalOncallReminderRules() *GlobalOncallReminderRules {
	if o == nil {
		return nil
	}
	return o.GlobalOncallReminderRules
}
