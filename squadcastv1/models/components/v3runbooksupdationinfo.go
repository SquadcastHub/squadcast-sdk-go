// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

// V3RunbooksUpdationInfo - Represents information about the creation or updation of an entity.
type V3RunbooksUpdationInfo struct {
	// The full name of the user who performed the action.
	UserName string `json:"user_name"`
	// The display name of the user who performed the action.
	UsernameForDisplay string `json:"username_for_display"`
	// The ID of the user who performed the action.
	UserID string `json:"user_id"`
	// The timestamp of the action.
	At time.Time `json:"at"`
	// The owner of the entity at the time of the action.
	EntityOwner *CommonV3EntityOwner `json:"entity_owner,omitempty"`
}

func (v V3RunbooksUpdationInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3RunbooksUpdationInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"user_name", "username_for_display", "user_id", "at"}); err != nil {
		return err
	}
	return nil
}

func (o *V3RunbooksUpdationInfo) GetUserName() string {
	if o == nil {
		return ""
	}
	return o.UserName
}

func (o *V3RunbooksUpdationInfo) GetUsernameForDisplay() string {
	if o == nil {
		return ""
	}
	return o.UsernameForDisplay
}

func (o *V3RunbooksUpdationInfo) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *V3RunbooksUpdationInfo) GetAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.At
}

func (o *V3RunbooksUpdationInfo) GetEntityOwner() *CommonV3EntityOwner {
	if o == nil {
		return nil
	}
	return o.EntityOwner
}
