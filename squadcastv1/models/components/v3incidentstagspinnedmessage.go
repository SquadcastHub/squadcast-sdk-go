// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

// V3IncidentsTagsPinnedMessage - Represents a pinned message in the warroom.
type V3IncidentsTagsPinnedMessage struct {
	Message           string    `json:"message"`
	MessageSenderID   string    `json:"message_sender_id"`
	Time              time.Time `json:"time"`
	TimeOfPinning     time.Time `json:"time_of_pinning"`
	MessageID         string    `json:"message_id"`
	MessagePinnedBy   string    `json:"message_pinned_by"`
	MessageSenderName string    `json:"message_sender_name"`
}

func (v V3IncidentsTagsPinnedMessage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3IncidentsTagsPinnedMessage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"message", "message_sender_id", "time", "time_of_pinning", "message_id", "message_pinned_by", "message_sender_name"}); err != nil {
		return err
	}
	return nil
}

func (o *V3IncidentsTagsPinnedMessage) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *V3IncidentsTagsPinnedMessage) GetMessageSenderID() string {
	if o == nil {
		return ""
	}
	return o.MessageSenderID
}

func (o *V3IncidentsTagsPinnedMessage) GetTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Time
}

func (o *V3IncidentsTagsPinnedMessage) GetTimeOfPinning() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.TimeOfPinning
}

func (o *V3IncidentsTagsPinnedMessage) GetMessageID() string {
	if o == nil {
		return ""
	}
	return o.MessageID
}

func (o *V3IncidentsTagsPinnedMessage) GetMessagePinnedBy() string {
	if o == nil {
		return ""
	}
	return o.MessagePinnedBy
}

func (o *V3IncidentsTagsPinnedMessage) GetMessageSenderName() string {
	if o == nil {
		return ""
	}
	return o.MessageSenderName
}
