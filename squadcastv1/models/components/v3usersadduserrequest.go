// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V3UsersAddUserRequestRole string

const (
	V3UsersAddUserRequestRoleAccountOwner V3UsersAddUserRequestRole = "account_owner"
	V3UsersAddUserRequestRoleUser         V3UsersAddUserRequestRole = "user"
	V3UsersAddUserRequestRoleStakeholder  V3UsersAddUserRequestRole = "stakeholder"
)

func (e V3UsersAddUserRequestRole) ToPointer() *V3UsersAddUserRequestRole {
	return &e
}
func (e *V3UsersAddUserRequestRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_owner":
		fallthrough
	case "user":
		fallthrough
	case "stakeholder":
		*e = V3UsersAddUserRequestRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3UsersAddUserRequestRole: %v", v)
	}
}

type V3UsersAddUserRequest struct {
	Email     string                    `json:"email"`
	Role      V3UsersAddUserRequestRole `json:"role"`
	FirstName string                    `json:"first_name"`
	LastName  string                    `json:"last_name"`
}

func (o *V3UsersAddUserRequest) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *V3UsersAddUserRequest) GetRole() V3UsersAddUserRequestRole {
	if o == nil {
		return V3UsersAddUserRequestRole("")
	}
	return o.Role
}

func (o *V3UsersAddUserRequest) GetFirstName() string {
	if o == nil {
		return ""
	}
	return o.FirstName
}

func (o *V3UsersAddUserRequest) GetLastName() string {
	if o == nil {
		return ""
	}
	return o.LastName
}
