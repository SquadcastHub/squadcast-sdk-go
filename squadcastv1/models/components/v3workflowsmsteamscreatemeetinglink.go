// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
)

type V3WorkflowsMsTeamsCreateMeetingLinkName string

const (
	V3WorkflowsMsTeamsCreateMeetingLinkNameMsteamsCreateMeetingLink V3WorkflowsMsTeamsCreateMeetingLinkName = "msteams_create_meeting_link"
)

func (e V3WorkflowsMsTeamsCreateMeetingLinkName) ToPointer() *V3WorkflowsMsTeamsCreateMeetingLinkName {
	return &e
}
func (e *V3WorkflowsMsTeamsCreateMeetingLinkName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "msteams_create_meeting_link":
		*e = V3WorkflowsMsTeamsCreateMeetingLinkName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsMsTeamsCreateMeetingLinkName: %v", v)
	}
}

type V3WorkflowsMsTeamsCreateMeetingLink struct {
	Name V3WorkflowsMsTeamsCreateMeetingLinkName `json:"name"`
}

func (v V3WorkflowsMsTeamsCreateMeetingLink) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsMsTeamsCreateMeetingLink) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsMsTeamsCreateMeetingLink) GetName() V3WorkflowsMsTeamsCreateMeetingLinkName {
	if o == nil {
		return V3WorkflowsMsTeamsCreateMeetingLinkName("")
	}
	return o.Name
}
