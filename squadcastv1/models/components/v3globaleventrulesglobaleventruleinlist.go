// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

type V3GlobalEventRulesGlobalEventRuleInList struct {
	ID          *int64                         `json:"id,omitempty"`
	OrgID       *string                        `json:"org_id,omitempty"`
	TeamID      *string                        `json:"team_id,omitempty"`
	Name        *string                        `json:"name,omitempty"`
	Description *string                        `json:"description,omitempty"`
	RoutingKey  *string                        `json:"routing_key,omitempty"`
	EntityOwner *V3GlobalEventRulesEntityOwner `json:"entity_owner,omitempty"`
	Rulesets    []V3GlobalEventRulesRuleset    `json:"rulesets,omitempty"`
	CreatedAt   *time.Time                     `json:"created_at,omitempty"`
	CreatedBy   *string                        `json:"created_by,omitempty"`
	UpdatedAt   *time.Time                     `json:"updated_at,omitempty"`
	UpdatedBy   *string                        `json:"updated_by,omitempty"`
}

func (v V3GlobalEventRulesGlobalEventRuleInList) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3GlobalEventRulesGlobalEventRuleInList) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetOrgID() *string {
	if o == nil {
		return nil
	}
	return o.OrgID
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetTeamID() *string {
	if o == nil {
		return nil
	}
	return o.TeamID
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetRoutingKey() *string {
	if o == nil {
		return nil
	}
	return o.RoutingKey
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetEntityOwner() *V3GlobalEventRulesEntityOwner {
	if o == nil {
		return nil
	}
	return o.EntityOwner
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetRulesets() []V3GlobalEventRulesRuleset {
	if o == nil {
		return nil
	}
	return o.Rulesets
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *V3GlobalEventRulesGlobalEventRuleInList) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}
