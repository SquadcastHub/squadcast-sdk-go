// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type URLObj struct {
	URL    *string `json:"url,omitempty"`
	Method *string `json:"method,omitempty"`
}

func (u *URLObj) GetURL() *string {
	if u == nil {
		return nil
	}
	return u.URL
}

func (u *URLObj) GetMethod() *string {
	if u == nil {
		return nil
	}
	return u.Method
}

type V3IncidentsIncidentActionsWebhookActionResponseHeader struct {
	ContentType string `json:"Content-Type"`
}

func (v *V3IncidentsIncidentActionsWebhookActionResponseHeader) GetContentType() string {
	if v == nil {
		return ""
	}
	return v.ContentType
}

// V3IncidentsIncidentActionsWebhookActionResponse - Represents the response structure for triggering a webhook manually.
type V3IncidentsIncidentActionsWebhookActionResponse struct {
	ID                        string                                                `json:"id"`
	CreatedAt                 string                                                `json:"created_at"`
	UpdatedAt                 string                                                `json:"updated_at"`
	Version                   string                                                `json:"version"`
	OrganizationID            string                                                `json:"organization_id"`
	AuthorID                  string                                                `json:"author_id"`
	Name                      string                                                `json:"name"`
	Slug                      string                                                `json:"slug"`
	Description               string                                                `json:"description"`
	Triggers                  []string                                              `json:"triggers"`
	Urls                      []URLObj                                              `json:"urls"`
	Teams                     []string                                              `json:"teams"`
	IsAllTeamsConfigured      bool                                                  `json:"is_all_teams_configured"`
	CustomPayloadTemplateSlug string                                                `json:"custom_payload_template_slug"`
	Header                    V3IncidentsIncidentActionsWebhookActionResponseHeader `json:"header"`
	Filters                   any                                                   `json:"filters"`
	TriggerType               string                                                `json:"trigger_type"`
	Language                  string                                                `json:"language"`
	MaxRetry                  int64                                                 `json:"max_retry"`
	MailIds                   []string                                              `json:"mail_ids"`
	PayloadType               string                                                `json:"payload_type"`
	CustomPayload             string                                                `json:"custom_payload"`
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetCreatedAt() string {
	if v == nil {
		return ""
	}
	return v.CreatedAt
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetUpdatedAt() string {
	if v == nil {
		return ""
	}
	return v.UpdatedAt
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetVersion() string {
	if v == nil {
		return ""
	}
	return v.Version
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetOrganizationID() string {
	if v == nil {
		return ""
	}
	return v.OrganizationID
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetAuthorID() string {
	if v == nil {
		return ""
	}
	return v.AuthorID
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetSlug() string {
	if v == nil {
		return ""
	}
	return v.Slug
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetDescription() string {
	if v == nil {
		return ""
	}
	return v.Description
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetTriggers() []string {
	if v == nil {
		return []string{}
	}
	return v.Triggers
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetUrls() []URLObj {
	if v == nil {
		return []URLObj{}
	}
	return v.Urls
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetTeams() []string {
	if v == nil {
		return []string{}
	}
	return v.Teams
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetIsAllTeamsConfigured() bool {
	if v == nil {
		return false
	}
	return v.IsAllTeamsConfigured
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetCustomPayloadTemplateSlug() string {
	if v == nil {
		return ""
	}
	return v.CustomPayloadTemplateSlug
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetHeader() V3IncidentsIncidentActionsWebhookActionResponseHeader {
	if v == nil {
		return V3IncidentsIncidentActionsWebhookActionResponseHeader{}
	}
	return v.Header
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetFilters() any {
	if v == nil {
		return nil
	}
	return v.Filters
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetTriggerType() string {
	if v == nil {
		return ""
	}
	return v.TriggerType
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetLanguage() string {
	if v == nil {
		return ""
	}
	return v.Language
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetMaxRetry() int64 {
	if v == nil {
		return 0
	}
	return v.MaxRetry
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetMailIds() []string {
	if v == nil {
		return []string{}
	}
	return v.MailIds
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetPayloadType() string {
	if v == nil {
		return ""
	}
	return v.PayloadType
}

func (v *V3IncidentsIncidentActionsWebhookActionResponse) GetCustomPayload() string {
	if v == nil {
		return ""
	}
	return v.CustomPayload
}
