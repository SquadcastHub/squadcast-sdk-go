// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V3SLOSLOAction struct {
	ID        *int64             `json:"id,omitempty"`
	SloID     *int64             `json:"slo_id,omitempty"`
	Type      V3SLOSLOActionType `json:"type"`
	UserID    *string            `json:"user_id,omitempty"`
	SquadID   *string            `json:"squad_id,omitempty"`
	ServiceID *string            `json:"service_id,omitempty"`
	OwnerType *string            `json:"owner_type,omitempty"`
	OwnerID   *string            `json:"owner_id,omitempty"`
	CreatedAt *time.Time         `json:"created_at,omitempty"`
	UpdatedAt *time.Time         `json:"updated_at,omitempty"`
	DeletedAt *time.Time         `json:"deleted_at,omitempty"`
}

func (v V3SLOSLOAction) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3SLOSLOAction) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"type"}); err != nil {
		return err
	}
	return nil
}

func (o *V3SLOSLOAction) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *V3SLOSLOAction) GetSloID() *int64 {
	if o == nil {
		return nil
	}
	return o.SloID
}

func (o *V3SLOSLOAction) GetType() V3SLOSLOActionType {
	if o == nil {
		return V3SLOSLOActionType("")
	}
	return o.Type
}

func (o *V3SLOSLOAction) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *V3SLOSLOAction) GetSquadID() *string {
	if o == nil {
		return nil
	}
	return o.SquadID
}

func (o *V3SLOSLOAction) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

func (o *V3SLOSLOAction) GetOwnerType() *string {
	if o == nil {
		return nil
	}
	return o.OwnerType
}

func (o *V3SLOSLOAction) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *V3SLOSLOAction) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *V3SLOSLOAction) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *V3SLOSLOAction) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}
