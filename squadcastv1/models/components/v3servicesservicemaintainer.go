// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V3ServicesServiceMaintainerType string

const (
	V3ServicesServiceMaintainerTypeUser  V3ServicesServiceMaintainerType = "user"
	V3ServicesServiceMaintainerTypeSquad V3ServicesServiceMaintainerType = "squad"
)

func (e V3ServicesServiceMaintainerType) ToPointer() *V3ServicesServiceMaintainerType {
	return &e
}
func (e *V3ServicesServiceMaintainerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		fallthrough
	case "squad":
		*e = V3ServicesServiceMaintainerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3ServicesServiceMaintainerType: %v", v)
	}
}

type V3ServicesServiceMaintainer struct {
	ID   string                          `json:"id"`
	Type V3ServicesServiceMaintainerType `json:"type"`
}

func (o *V3ServicesServiceMaintainer) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V3ServicesServiceMaintainer) GetType() V3ServicesServiceMaintainerType {
	if o == nil {
		return V3ServicesServiceMaintainerType("")
	}
	return o.Type
}
