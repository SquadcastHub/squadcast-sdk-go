// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type V3IncidentsPostmortemsPostmortemListResultIncident struct {
	Message        string `json:"message"`
	TimeOfCreation string `json:"time_of_creation"`
}

func (o *V3IncidentsPostmortemsPostmortemListResultIncident) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *V3IncidentsPostmortemsPostmortemListResultIncident) GetTimeOfCreation() string {
	if o == nil {
		return ""
	}
	return o.TimeOfCreation
}

// V3IncidentsPostmortemsPostmortemListResult - Represents a single result in the postmortem list response.
type V3IncidentsPostmortemsPostmortemListResult struct {
	ID             string                                     `json:"id"`
	OrganizationID string                                     `json:"organization_id"`
	IncidentID     string                                     `json:"incident_id"`
	Postmortem     string                                     `json:"postmortem"`
	FollowUps      []V3IncidentsPostmortemsPostmortemFollowUp `json:"follow_ups"`
	CreatedAt      string                                     `json:"created_at"`
	Title          string                                     `json:"title"`
	// Represents the status of a postmortem.
	Status V3IncidentsPostmortemsPostmortemStatus `json:"status"`
	// Represents the RBAC owner of an entity.
	Owner                  CommonV3RBACOwner                                   `json:"owner"`
	AccessControl          []CommonV3RBACEntityPermission                      `json:"access_control"`
	Attachments            []string                                            `json:"attachments,omitempty"`
	Incident               *V3IncidentsPostmortemsPostmortemListResultIncident `json:"incident,omitempty"`
	IncidentMessage        string                                              `json:"incident_message"`
	IncidentTimeOfCreation string                                              `json:"incident_time_of_creation"`
	ServiceName            string                                              `json:"service_name"`
	ServiceID              string                                              `json:"service_id"`
	AlertSource            string                                              `json:"alert_source"`
	ActiveFollowUpsCount   int64                                               `json:"active_follow_ups_count"`
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetPostmortem() string {
	if o == nil {
		return ""
	}
	return o.Postmortem
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetFollowUps() []V3IncidentsPostmortemsPostmortemFollowUp {
	if o == nil {
		return nil
	}
	return o.FollowUps
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetCreatedAt() string {
	if o == nil {
		return ""
	}
	return o.CreatedAt
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetStatus() V3IncidentsPostmortemsPostmortemStatus {
	if o == nil {
		return V3IncidentsPostmortemsPostmortemStatus("")
	}
	return o.Status
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetOwner() CommonV3RBACOwner {
	if o == nil {
		return CommonV3RBACOwner{}
	}
	return o.Owner
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetAccessControl() []CommonV3RBACEntityPermission {
	if o == nil {
		return []CommonV3RBACEntityPermission{}
	}
	return o.AccessControl
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetAttachments() []string {
	if o == nil {
		return nil
	}
	return o.Attachments
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetIncident() *V3IncidentsPostmortemsPostmortemListResultIncident {
	if o == nil {
		return nil
	}
	return o.Incident
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetIncidentMessage() string {
	if o == nil {
		return ""
	}
	return o.IncidentMessage
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetIncidentTimeOfCreation() string {
	if o == nil {
		return ""
	}
	return o.IncidentTimeOfCreation
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetServiceName() string {
	if o == nil {
		return ""
	}
	return o.ServiceName
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetAlertSource() string {
	if o == nil {
		return ""
	}
	return o.AlertSource
}

func (o *V3IncidentsPostmortemsPostmortemListResult) GetActiveFollowUpsCount() int64 {
	if o == nil {
		return 0
	}
	return o.ActiveFollowUpsCount
}
