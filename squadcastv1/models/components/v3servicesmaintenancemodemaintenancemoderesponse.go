// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

type V3ServicesMaintenanceModeMaintenanceModeResponse struct {
	ServiceID             string    `json:"service_id"`
	MaintenanceFrom       time.Time `json:"maintenance_from"`
	MaintenanceTill       time.Time `json:"maintenance_till"`
	RepetitionDaily       bool      `json:"repetition_daily"`
	RepetitionWeekly      bool      `json:"repetition_weekly"`
	RepetitionTwoWeekly   bool      `json:"repetition_two_weekly"`
	RepetitionThreeWeekly bool      `json:"repetition_three_weekly"`
	RepetitionMonthly     bool      `json:"repetition_monthly"`
	Deleted               bool      `json:"deleted"`
	RepeatTill            time.Time `json:"repeat_till"`
}

func (v V3ServicesMaintenanceModeMaintenanceModeResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"service_id", "maintenance_from", "maintenance_till", "repetition_daily", "repetition_weekly", "repetition_two_weekly", "repetition_three_weekly", "repetition_monthly", "deleted", "repeat_till"}); err != nil {
		return err
	}
	return nil
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetServiceID() string {
	if v == nil {
		return ""
	}
	return v.ServiceID
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetMaintenanceFrom() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.MaintenanceFrom
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetMaintenanceTill() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.MaintenanceTill
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetRepetitionDaily() bool {
	if v == nil {
		return false
	}
	return v.RepetitionDaily
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetRepetitionWeekly() bool {
	if v == nil {
		return false
	}
	return v.RepetitionWeekly
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetRepetitionTwoWeekly() bool {
	if v == nil {
		return false
	}
	return v.RepetitionTwoWeekly
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetRepetitionThreeWeekly() bool {
	if v == nil {
		return false
	}
	return v.RepetitionThreeWeekly
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetRepetitionMonthly() bool {
	if v == nil {
		return false
	}
	return v.RepetitionMonthly
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetDeleted() bool {
	if v == nil {
		return false
	}
	return v.Deleted
}

func (v *V3ServicesMaintenanceModeMaintenanceModeResponse) GetRepeatTill() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.RepeatTill
}
