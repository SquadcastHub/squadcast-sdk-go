// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V3GlobalEventRulesRulesetResponse struct {
	ID                   *int64                        `json:"id,omitempty"`
	GlobalEventRuleID    *int64                        `json:"global_event_rule_id,omitempty"`
	AlertSourceShortname *string                       `json:"alert_source_shortname,omitempty"`
	AlertSourceVersion   *string                       `json:"alert_source_version,omitempty"`
	Ordering             []int64                       `json:"ordering,omitempty"`
	CatchAllAction       *V3GlobalEventRulesRuleAction `json:"catch_all_action,omitempty"`
	CreatedAt            *time.Time                    `json:"created_at,omitempty"`
	CreatedBy            *string                       `json:"created_by,omitempty"`
	UpdatedAt            *time.Time                    `json:"updated_at,omitempty"`
	UpdatedBy            *string                       `json:"updated_by,omitempty"`
}

func (v V3GlobalEventRulesRulesetResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3GlobalEventRulesRulesetResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *V3GlobalEventRulesRulesetResponse) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *V3GlobalEventRulesRulesetResponse) GetGlobalEventRuleID() *int64 {
	if o == nil {
		return nil
	}
	return o.GlobalEventRuleID
}

func (o *V3GlobalEventRulesRulesetResponse) GetAlertSourceShortname() *string {
	if o == nil {
		return nil
	}
	return o.AlertSourceShortname
}

func (o *V3GlobalEventRulesRulesetResponse) GetAlertSourceVersion() *string {
	if o == nil {
		return nil
	}
	return o.AlertSourceVersion
}

func (o *V3GlobalEventRulesRulesetResponse) GetOrdering() []int64 {
	if o == nil {
		return nil
	}
	return o.Ordering
}

func (o *V3GlobalEventRulesRulesetResponse) GetCatchAllAction() *V3GlobalEventRulesRuleAction {
	if o == nil {
		return nil
	}
	return o.CatchAllAction
}

func (o *V3GlobalEventRulesRulesetResponse) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *V3GlobalEventRulesRulesetResponse) GetCreatedBy() *string {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *V3GlobalEventRulesRulesetResponse) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *V3GlobalEventRulesRulesetResponse) GetUpdatedBy() *string {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}
