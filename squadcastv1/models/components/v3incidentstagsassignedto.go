// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

type V3IncidentsTagsAssignedTo struct {
	ID               string    `json:"id"`
	Type             string    `json:"type"`
	TimeOfAssignment time.Time `json:"timeOfAssignment"`
	Reason           string    `json:"reason"`
}

func (v V3IncidentsTagsAssignedTo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3IncidentsTagsAssignedTo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"id", "type", "timeOfAssignment", "reason"}); err != nil {
		return err
	}
	return nil
}

func (v *V3IncidentsTagsAssignedTo) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V3IncidentsTagsAssignedTo) GetType() string {
	if v == nil {
		return ""
	}
	return v.Type
}

func (v *V3IncidentsTagsAssignedTo) GetTimeOfAssignment() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.TimeOfAssignment
}

func (v *V3IncidentsTagsAssignedTo) GetReason() string {
	if v == nil {
		return ""
	}
	return v.Reason
}
