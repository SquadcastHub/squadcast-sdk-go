// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
)

type V3WorkflowsSqAddCommunicationChannelUpdateName string

const (
	V3WorkflowsSqAddCommunicationChannelUpdateNameSqAddCommunicationChannel V3WorkflowsSqAddCommunicationChannelUpdateName = "sq_add_communication_channel"
)

func (e V3WorkflowsSqAddCommunicationChannelUpdateName) ToPointer() *V3WorkflowsSqAddCommunicationChannelUpdateName {
	return &e
}
func (e *V3WorkflowsSqAddCommunicationChannelUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sq_add_communication_channel":
		*e = V3WorkflowsSqAddCommunicationChannelUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSqAddCommunicationChannelUpdateName: %v", v)
	}
}

type V3WorkflowsSqAddCommunicationChannelUpdateData struct {
	Channels []V3WorkflowsCommunicationChannel `json:"channels,omitempty"`
}

func (v V3WorkflowsSqAddCommunicationChannelUpdateData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqAddCommunicationChannelUpdateData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsSqAddCommunicationChannelUpdateData) GetChannels() []V3WorkflowsCommunicationChannel {
	if o == nil {
		return nil
	}
	return o.Channels
}

type V3WorkflowsSqAddCommunicationChannelUpdate struct {
	Name V3WorkflowsSqAddCommunicationChannelUpdateName  `json:"name"`
	Data *V3WorkflowsSqAddCommunicationChannelUpdateData `json:"data,omitempty"`
}

func (v V3WorkflowsSqAddCommunicationChannelUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqAddCommunicationChannelUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (o *V3WorkflowsSqAddCommunicationChannelUpdate) GetName() V3WorkflowsSqAddCommunicationChannelUpdateName {
	if o == nil {
		return V3WorkflowsSqAddCommunicationChannelUpdateName("")
	}
	return o.Name
}

func (o *V3WorkflowsSqAddCommunicationChannelUpdate) GetData() *V3WorkflowsSqAddCommunicationChannelUpdateData {
	if o == nil {
		return nil
	}
	return o.Data
}
