// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V3SLOSLOViolatingIncidentResponse struct {
	ID               int64      `json:"id"`
	OwnerType        string     `json:"owner_type"`
	OwnerID          string     `json:"owner_id"`
	OrgID            string     `json:"org_id"`
	SloID            int64      `json:"slo_id"`
	IncidentID       string     `json:"incident_id"`
	Slis             []string   `json:"slis"`
	ErrorBudgetSpent float32    `json:"error_budget_spent"`
	IsFalsePositive  bool       `json:"is_false_positive"`
	StartTime        time.Time  `json:"start_time"`
	EndTime          time.Time  `json:"end_time"`
	CreatedAt        time.Time  `json:"created_at"`
	UpdatedAt        time.Time  `json:"updated_at"`
	DeletedAt        *time.Time `json:"deleted_at"`
}

func (v V3SLOSLOViolatingIncidentResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3SLOSLOViolatingIncidentResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"id", "owner_type", "owner_id", "org_id", "slo_id", "incident_id", "slis", "error_budget_spent", "is_false_positive", "start_time", "end_time", "created_at", "updated_at", "deleted_at"}); err != nil {
		return err
	}
	return nil
}

func (o *V3SLOSLOViolatingIncidentResponse) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *V3SLOSLOViolatingIncidentResponse) GetOwnerType() string {
	if o == nil {
		return ""
	}
	return o.OwnerType
}

func (o *V3SLOSLOViolatingIncidentResponse) GetOwnerID() string {
	if o == nil {
		return ""
	}
	return o.OwnerID
}

func (o *V3SLOSLOViolatingIncidentResponse) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}

func (o *V3SLOSLOViolatingIncidentResponse) GetSloID() int64 {
	if o == nil {
		return 0
	}
	return o.SloID
}

func (o *V3SLOSLOViolatingIncidentResponse) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *V3SLOSLOViolatingIncidentResponse) GetSlis() []string {
	if o == nil {
		return []string{}
	}
	return o.Slis
}

func (o *V3SLOSLOViolatingIncidentResponse) GetErrorBudgetSpent() float32 {
	if o == nil {
		return 0.0
	}
	return o.ErrorBudgetSpent
}

func (o *V3SLOSLOViolatingIncidentResponse) GetIsFalsePositive() bool {
	if o == nil {
		return false
	}
	return o.IsFalsePositive
}

func (o *V3SLOSLOViolatingIncidentResponse) GetStartTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartTime
}

func (o *V3SLOSLOViolatingIncidentResponse) GetEndTime() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.EndTime
}

func (o *V3SLOSLOViolatingIncidentResponse) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *V3SLOSLOViolatingIncidentResponse) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *V3SLOSLOViolatingIncidentResponse) GetDeletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}
