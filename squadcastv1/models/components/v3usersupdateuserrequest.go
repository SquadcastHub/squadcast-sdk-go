// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V3UsersUpdateUserRequestRole string

const (
	V3UsersUpdateUserRequestRoleAccountOwner V3UsersUpdateUserRequestRole = "account_owner"
	V3UsersUpdateUserRequestRoleUser         V3UsersUpdateUserRequestRole = "user"
	V3UsersUpdateUserRequestRoleStakeholder  V3UsersUpdateUserRequestRole = "stakeholder"
)

func (e V3UsersUpdateUserRequestRole) ToPointer() *V3UsersUpdateUserRequestRole {
	return &e
}
func (e *V3UsersUpdateUserRequestRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_owner":
		fallthrough
	case "user":
		fallthrough
	case "stakeholder":
		*e = V3UsersUpdateUserRequestRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3UsersUpdateUserRequestRole: %v", v)
	}
}

type V3UsersUpdateUserRequest struct {
	Role V3UsersUpdateUserRequestRole `json:"role"`
}

func (v *V3UsersUpdateUserRequest) GetRole() V3UsersUpdateUserRequestRole {
	if v == nil {
		return V3UsersUpdateUserRequestRole("")
	}
	return v.Role
}
