// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/internal/utils"
	"time"
)

// V3IncidentsTagsResponseNote - Represents a response note in an incident.
type V3IncidentsTagsResponseNote struct {
	TimeOfNote time.Time `json:"timeOfNote"`
	Note       string    `json:"note"`
	UserID     string    `json:"userId"`
}

func (v V3IncidentsTagsResponseNote) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3IncidentsTagsResponseNote) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"timeOfNote", "note", "userId"}); err != nil {
		return err
	}
	return nil
}

func (o *V3IncidentsTagsResponseNote) GetTimeOfNote() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.TimeOfNote
}

func (o *V3IncidentsTagsResponseNote) GetNote() string {
	if o == nil {
		return ""
	}
	return o.Note
}

func (o *V3IncidentsTagsResponseNote) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}
