// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type GlobalEventRulesListGlobalEventRulesRequest struct {
	OwnerID        string   `queryParam:"style=form,explode=true,name=owner_id"`
	PageSize       *string  `queryParam:"style=form,explode=true,name=page_size"`
	PageNumber     *string  `queryParam:"style=form,explode=true,name=page_number"`
	FiltersOwnerID []string `queryParam:"style=form,explode=true,name=filters.owner_id[]"`
	FiltersSearch  *string  `queryParam:"style=form,explode=true,name=filters.search"`
}

func (o *GlobalEventRulesListGlobalEventRulesRequest) GetOwnerID() string {
	if o == nil {
		return ""
	}
	return o.OwnerID
}

func (o *GlobalEventRulesListGlobalEventRulesRequest) GetPageSize() *string {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *GlobalEventRulesListGlobalEventRulesRequest) GetPageNumber() *string {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *GlobalEventRulesListGlobalEventRulesRequest) GetFiltersOwnerID() []string {
	if o == nil {
		return nil
	}
	return o.FiltersOwnerID
}

func (o *GlobalEventRulesListGlobalEventRulesRequest) GetFiltersSearch() *string {
	if o == nil {
		return nil
	}
	return o.FiltersSearch
}

type GlobalEventRulesListGlobalEventRulesMeta struct {
	TotalCount int64 `json:"total_count"`
}

func (o *GlobalEventRulesListGlobalEventRulesMeta) GetTotalCount() int64 {
	if o == nil {
		return 0
	}
	return o.TotalCount
}

// GlobalEventRulesListGlobalEventRulesResponseBody - The request has succeeded.
type GlobalEventRulesListGlobalEventRulesResponseBody struct {
	Data []components.V3GlobalEventRulesGlobalEventRuleInList `json:"data"`
	Meta GlobalEventRulesListGlobalEventRulesMeta             `json:"meta"`
}

func (o *GlobalEventRulesListGlobalEventRulesResponseBody) GetData() []components.V3GlobalEventRulesGlobalEventRuleInList {
	if o == nil {
		return []components.V3GlobalEventRulesGlobalEventRuleInList{}
	}
	return o.Data
}

func (o *GlobalEventRulesListGlobalEventRulesResponseBody) GetMeta() GlobalEventRulesListGlobalEventRulesMeta {
	if o == nil {
		return GlobalEventRulesListGlobalEventRulesMeta{}
	}
	return o.Meta
}

type GlobalEventRulesListGlobalEventRulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesListGlobalEventRulesResponseBody
}

func (o *GlobalEventRulesListGlobalEventRulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GlobalEventRulesListGlobalEventRulesResponse) GetObject() *GlobalEventRulesListGlobalEventRulesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
