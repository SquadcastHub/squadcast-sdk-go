// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type DependenciesCreateOrUpdateDependenciesRequest struct {
	ServiceID                                               string                                                             `pathParam:"style=simple,explode=false,name=serviceID"`
	V3ServicesDependenciesCreateOrUpdateDependenciesRequest components.V3ServicesDependenciesCreateOrUpdateDependenciesRequest `request:"mediaType=application/json"`
}

func (o *DependenciesCreateOrUpdateDependenciesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *DependenciesCreateOrUpdateDependenciesRequest) GetV3ServicesDependenciesCreateOrUpdateDependenciesRequest() components.V3ServicesDependenciesCreateOrUpdateDependenciesRequest {
	if o == nil {
		return components.V3ServicesDependenciesCreateOrUpdateDependenciesRequest{}
	}
	return o.V3ServicesDependenciesCreateOrUpdateDependenciesRequest
}

type DependenciesCreateOrUpdateDependenciesData struct {
	Ok bool `json:"ok"`
}

func (o *DependenciesCreateOrUpdateDependenciesData) GetOk() bool {
	if o == nil {
		return false
	}
	return o.Ok
}

// DependenciesCreateOrUpdateDependenciesResponseBody - The request has succeeded and a new resource has been created as a result.
type DependenciesCreateOrUpdateDependenciesResponseBody struct {
	Data DependenciesCreateOrUpdateDependenciesData `json:"data"`
}

func (o *DependenciesCreateOrUpdateDependenciesResponseBody) GetData() DependenciesCreateOrUpdateDependenciesData {
	if o == nil {
		return DependenciesCreateOrUpdateDependenciesData{}
	}
	return o.Data
}

type DependenciesCreateOrUpdateDependenciesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded and a new resource has been created as a result.
	Object *DependenciesCreateOrUpdateDependenciesResponseBody
}

func (o *DependenciesCreateOrUpdateDependenciesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DependenciesCreateOrUpdateDependenciesResponse) GetObject() *DependenciesCreateOrUpdateDependenciesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
