// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type GlobalEventRulesListRulesetRulesRequest struct {
	GerID                int64   `pathParam:"style=simple,explode=false,name=ger_id"`
	AlertSourceVersion   string  `pathParam:"style=simple,explode=false,name=alert_source_version"`
	AlertSourceShortname string  `pathParam:"style=simple,explode=false,name=alert_source_shortname"`
	PageSize             *string `queryParam:"style=form,explode=true,name=page_size"`
	PageNumber           *string `queryParam:"style=form,explode=true,name=page_number"`
	FiltersSearch        *string `queryParam:"style=form,explode=true,name=filters.search"`
}

func (g *GlobalEventRulesListRulesetRulesRequest) GetGerID() int64 {
	if g == nil {
		return 0
	}
	return g.GerID
}

func (g *GlobalEventRulesListRulesetRulesRequest) GetAlertSourceVersion() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceVersion
}

func (g *GlobalEventRulesListRulesetRulesRequest) GetAlertSourceShortname() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceShortname
}

func (g *GlobalEventRulesListRulesetRulesRequest) GetPageSize() *string {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GlobalEventRulesListRulesetRulesRequest) GetPageNumber() *string {
	if g == nil {
		return nil
	}
	return g.PageNumber
}

func (g *GlobalEventRulesListRulesetRulesRequest) GetFiltersSearch() *string {
	if g == nil {
		return nil
	}
	return g.FiltersSearch
}

type GlobalEventRulesListRulesetRulesMeta struct {
	TotalCount int64 `json:"total_count"`
}

func (g *GlobalEventRulesListRulesetRulesMeta) GetTotalCount() int64 {
	if g == nil {
		return 0
	}
	return g.TotalCount
}

// GlobalEventRulesListRulesetRulesResponseBody - The request has succeeded.
type GlobalEventRulesListRulesetRulesResponseBody struct {
	Data []components.V3GlobalEventRulesRulesetRuleResponse `json:"data"`
	Meta GlobalEventRulesListRulesetRulesMeta               `json:"meta"`
}

func (g *GlobalEventRulesListRulesetRulesResponseBody) GetData() []components.V3GlobalEventRulesRulesetRuleResponse {
	if g == nil {
		return []components.V3GlobalEventRulesRulesetRuleResponse{}
	}
	return g.Data
}

func (g *GlobalEventRulesListRulesetRulesResponseBody) GetMeta() GlobalEventRulesListRulesetRulesMeta {
	if g == nil {
		return GlobalEventRulesListRulesetRulesMeta{}
	}
	return g.Meta
}

type GlobalEventRulesListRulesetRulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesListRulesetRulesResponseBody
}

func (g *GlobalEventRulesListRulesetRulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GlobalEventRulesListRulesetRulesResponse) GetObject() *GlobalEventRulesListRulesetRulesResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
