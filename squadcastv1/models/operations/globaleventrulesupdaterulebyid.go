// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type GlobalEventRulesUpdateRuleByIDRequest struct {
	GerID                               int64                                          `pathParam:"style=simple,explode=false,name=ger_id"`
	AlertSourceVersion                  string                                         `pathParam:"style=simple,explode=false,name=alert_source_version"`
	AlertSourceShortname                string                                         `pathParam:"style=simple,explode=false,name=alert_source_shortname"`
	RuleID                              string                                         `pathParam:"style=simple,explode=false,name=rule_id"`
	V3GlobalEventRulesUpdateRuleRequest components.V3GlobalEventRulesUpdateRuleRequest `request:"mediaType=application/json"`
}

func (o *GlobalEventRulesUpdateRuleByIDRequest) GetGerID() int64 {
	if o == nil {
		return 0
	}
	return o.GerID
}

func (o *GlobalEventRulesUpdateRuleByIDRequest) GetAlertSourceVersion() string {
	if o == nil {
		return ""
	}
	return o.AlertSourceVersion
}

func (o *GlobalEventRulesUpdateRuleByIDRequest) GetAlertSourceShortname() string {
	if o == nil {
		return ""
	}
	return o.AlertSourceShortname
}

func (o *GlobalEventRulesUpdateRuleByIDRequest) GetRuleID() string {
	if o == nil {
		return ""
	}
	return o.RuleID
}

func (o *GlobalEventRulesUpdateRuleByIDRequest) GetV3GlobalEventRulesUpdateRuleRequest() components.V3GlobalEventRulesUpdateRuleRequest {
	if o == nil {
		return components.V3GlobalEventRulesUpdateRuleRequest{}
	}
	return o.V3GlobalEventRulesUpdateRuleRequest
}

// GlobalEventRulesUpdateRuleByIDResponseBody - The request has succeeded.
type GlobalEventRulesUpdateRuleByIDResponseBody struct {
	Data components.V3GlobalEventRulesRulesetRuleResponse `json:"data"`
}

func (o *GlobalEventRulesUpdateRuleByIDResponseBody) GetData() components.V3GlobalEventRulesRulesetRuleResponse {
	if o == nil {
		return components.V3GlobalEventRulesRulesetRuleResponse{}
	}
	return o.Data
}

type GlobalEventRulesUpdateRuleByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesUpdateRuleByIDResponseBody
}

func (o *GlobalEventRulesUpdateRuleByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GlobalEventRulesUpdateRuleByIDResponse) GetObject() *GlobalEventRulesUpdateRuleByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
