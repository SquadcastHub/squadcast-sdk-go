// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type AnalyticsGetTeamAnalyticsRequest struct {
	OwnerID   string  `queryParam:"style=form,explode=false,name=owner_id"`
	From      string  `queryParam:"style=form,explode=false,name=from"`
	To        string  `queryParam:"style=form,explode=false,name=to"`
	UserID    *string `queryParam:"style=form,explode=false,name=user_id"`
	ServiceID *string `queryParam:"style=form,explode=false,name=service_id"`
}

func (o *AnalyticsGetTeamAnalyticsRequest) GetOwnerID() string {
	if o == nil {
		return ""
	}
	return o.OwnerID
}

func (o *AnalyticsGetTeamAnalyticsRequest) GetFrom() string {
	if o == nil {
		return ""
	}
	return o.From
}

func (o *AnalyticsGetTeamAnalyticsRequest) GetTo() string {
	if o == nil {
		return ""
	}
	return o.To
}

func (o *AnalyticsGetTeamAnalyticsRequest) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *AnalyticsGetTeamAnalyticsRequest) GetServiceID() *string {
	if o == nil {
		return nil
	}
	return o.ServiceID
}

// AnalyticsGetTeamAnalyticsResponseBody - The request has succeeded.
type AnalyticsGetTeamAnalyticsResponseBody struct {
	Data components.V3AnalyticsAnalyticsResponse `json:"data"`
}

func (o *AnalyticsGetTeamAnalyticsResponseBody) GetData() components.V3AnalyticsAnalyticsResponse {
	if o == nil {
		return components.V3AnalyticsAnalyticsResponse{}
	}
	return o.Data
}

type AnalyticsGetTeamAnalyticsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *AnalyticsGetTeamAnalyticsResponseBody
}

func (o *AnalyticsGetTeamAnalyticsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AnalyticsGetTeamAnalyticsResponse) GetObject() *AnalyticsGetTeamAnalyticsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
