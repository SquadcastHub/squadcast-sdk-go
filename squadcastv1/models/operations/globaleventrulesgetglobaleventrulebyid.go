// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type GlobalEventRulesGetGlobalEventRuleByIDRequest struct {
	GerID int64 `pathParam:"style=simple,explode=false,name=ger_id"`
}

func (o *GlobalEventRulesGetGlobalEventRuleByIDRequest) GetGerID() int64 {
	if o == nil {
		return 0
	}
	return o.GerID
}

// GlobalEventRulesGetGlobalEventRuleByIDResponseBody - The request has succeeded.
type GlobalEventRulesGetGlobalEventRuleByIDResponseBody struct {
	Data components.V3GlobalEventRulesGlobalEventRuleResponse `json:"data"`
}

func (o *GlobalEventRulesGetGlobalEventRuleByIDResponseBody) GetData() components.V3GlobalEventRulesGlobalEventRuleResponse {
	if o == nil {
		return components.V3GlobalEventRulesGlobalEventRuleResponse{}
	}
	return o.Data
}

type GlobalEventRulesGetGlobalEventRuleByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesGetGlobalEventRuleByIDResponseBody
}

func (o *GlobalEventRulesGetGlobalEventRuleByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GlobalEventRulesGetGlobalEventRuleByIDResponse) GetObject() *GlobalEventRulesGetGlobalEventRuleByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
