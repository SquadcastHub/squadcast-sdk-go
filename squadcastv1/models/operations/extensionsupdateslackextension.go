// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type ExtensionsUpdateSlackExtensionRequest struct {
	ServiceID                                       string                                                     `pathParam:"style=simple,explode=false,name=serviceID"`
	V3ServicesExtensionsUpdateSlackExtensionRequest components.V3ServicesExtensionsUpdateSlackExtensionRequest `request:"mediaType=application/json"`
}

func (o *ExtensionsUpdateSlackExtensionRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *ExtensionsUpdateSlackExtensionRequest) GetV3ServicesExtensionsUpdateSlackExtensionRequest() components.V3ServicesExtensionsUpdateSlackExtensionRequest {
	if o == nil {
		return components.V3ServicesExtensionsUpdateSlackExtensionRequest{}
	}
	return o.V3ServicesExtensionsUpdateSlackExtensionRequest
}

// ExtensionsUpdateSlackExtensionResponseBody - The request has succeeded.
type ExtensionsUpdateSlackExtensionResponseBody struct {
	Data components.V3ServicesExtensionsSlackExtensionResponse `json:"data"`
}

func (o *ExtensionsUpdateSlackExtensionResponseBody) GetData() components.V3ServicesExtensionsSlackExtensionResponse {
	if o == nil {
		return components.V3ServicesExtensionsSlackExtensionResponse{}
	}
	return o.Data
}

type ExtensionsUpdateSlackExtensionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *ExtensionsUpdateSlackExtensionResponseBody
}

func (o *ExtensionsUpdateSlackExtensionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ExtensionsUpdateSlackExtensionResponse) GetObject() *ExtensionsUpdateSlackExtensionResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
