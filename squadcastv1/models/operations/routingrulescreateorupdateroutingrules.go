// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type RoutingRulesCreateOrUpdateRoutingRulesRequest struct {
	ServiceID                                               string                                                             `pathParam:"style=simple,explode=false,name=serviceID"`
	V3ServicesRoutingRulesCreateOrUpdateRoutingRulesRequest components.V3ServicesRoutingRulesCreateOrUpdateRoutingRulesRequest `request:"mediaType=application/json"`
}

func (o *RoutingRulesCreateOrUpdateRoutingRulesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

func (o *RoutingRulesCreateOrUpdateRoutingRulesRequest) GetV3ServicesRoutingRulesCreateOrUpdateRoutingRulesRequest() components.V3ServicesRoutingRulesCreateOrUpdateRoutingRulesRequest {
	if o == nil {
		return components.V3ServicesRoutingRulesCreateOrUpdateRoutingRulesRequest{}
	}
	return o.V3ServicesRoutingRulesCreateOrUpdateRoutingRulesRequest
}

type RoutingRulesCreateOrUpdateRoutingRulesData struct {
	Rules []components.V3ServicesRoutingRulesRoutingRuleResponse `json:"rules"`
}

func (o *RoutingRulesCreateOrUpdateRoutingRulesData) GetRules() []components.V3ServicesRoutingRulesRoutingRuleResponse {
	if o == nil {
		return []components.V3ServicesRoutingRulesRoutingRuleResponse{}
	}
	return o.Rules
}

// RoutingRulesCreateOrUpdateRoutingRulesResponseBody - The request has succeeded and a new resource has been created as a result.
type RoutingRulesCreateOrUpdateRoutingRulesResponseBody struct {
	Data RoutingRulesCreateOrUpdateRoutingRulesData `json:"data"`
}

func (o *RoutingRulesCreateOrUpdateRoutingRulesResponseBody) GetData() RoutingRulesCreateOrUpdateRoutingRulesData {
	if o == nil {
		return RoutingRulesCreateOrUpdateRoutingRulesData{}
	}
	return o.Data
}

type RoutingRulesCreateOrUpdateRoutingRulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded and a new resource has been created as a result.
	Object *RoutingRulesCreateOrUpdateRoutingRulesResponseBody
}

func (o *RoutingRulesCreateOrUpdateRoutingRulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RoutingRulesCreateOrUpdateRoutingRulesResponse) GetObject() *RoutingRulesCreateOrUpdateRoutingRulesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
