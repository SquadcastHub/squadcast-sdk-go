// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type GlobalEventRulesGetRuleByIDRequest struct {
	GerID                int64  `pathParam:"style=simple,explode=false,name=ger_id"`
	AlertSourceVersion   string `pathParam:"style=simple,explode=false,name=alert_source_version"`
	AlertSourceShortname string `pathParam:"style=simple,explode=false,name=alert_source_shortname"`
	RuleID               string `pathParam:"style=simple,explode=false,name=rule_id"`
}

func (o *GlobalEventRulesGetRuleByIDRequest) GetGerID() int64 {
	if o == nil {
		return 0
	}
	return o.GerID
}

func (o *GlobalEventRulesGetRuleByIDRequest) GetAlertSourceVersion() string {
	if o == nil {
		return ""
	}
	return o.AlertSourceVersion
}

func (o *GlobalEventRulesGetRuleByIDRequest) GetAlertSourceShortname() string {
	if o == nil {
		return ""
	}
	return o.AlertSourceShortname
}

func (o *GlobalEventRulesGetRuleByIDRequest) GetRuleID() string {
	if o == nil {
		return ""
	}
	return o.RuleID
}

// GlobalEventRulesGetRuleByIDResponseBody - The request has succeeded.
type GlobalEventRulesGetRuleByIDResponseBody struct {
	Data components.V3GlobalEventRulesRulesetRuleResponse `json:"data"`
}

func (o *GlobalEventRulesGetRuleByIDResponseBody) GetData() components.V3GlobalEventRulesRulesetRuleResponse {
	if o == nil {
		return components.V3GlobalEventRulesRulesetRuleResponse{}
	}
	return o.Data
}

type GlobalEventRulesGetRuleByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesGetRuleByIDResponseBody
}

func (o *GlobalEventRulesGetRuleByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GlobalEventRulesGetRuleByIDResponse) GetObject() *GlobalEventRulesGetRuleByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
