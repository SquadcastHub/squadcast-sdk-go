// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type GlobalEventRulesCreateRulesetRequest struct {
	GerID                                  int64                                             `pathParam:"style=simple,explode=false,name=ger_id"`
	V3GlobalEventRulesCreateRulesetRequest components.V3GlobalEventRulesCreateRulesetRequest `request:"mediaType=application/json"`
}

func (o *GlobalEventRulesCreateRulesetRequest) GetGerID() int64 {
	if o == nil {
		return 0
	}
	return o.GerID
}

func (o *GlobalEventRulesCreateRulesetRequest) GetV3GlobalEventRulesCreateRulesetRequest() components.V3GlobalEventRulesCreateRulesetRequest {
	if o == nil {
		return components.V3GlobalEventRulesCreateRulesetRequest{}
	}
	return o.V3GlobalEventRulesCreateRulesetRequest
}

// GlobalEventRulesCreateRulesetResponseBody - The request has succeeded and a new resource has been created as a result.
type GlobalEventRulesCreateRulesetResponseBody struct {
	Data components.V3GlobalEventRulesRulesetResponse `json:"data"`
}

func (o *GlobalEventRulesCreateRulesetResponseBody) GetData() components.V3GlobalEventRulesRulesetResponse {
	if o == nil {
		return components.V3GlobalEventRulesRulesetResponse{}
	}
	return o.Data
}

type GlobalEventRulesCreateRulesetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded and a new resource has been created as a result.
	Object *GlobalEventRulesCreateRulesetResponseBody
}

func (o *GlobalEventRulesCreateRulesetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GlobalEventRulesCreateRulesetResponse) GetObject() *GlobalEventRulesCreateRulesetResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
