// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type TaggingRulesGetTaggingRulesRequest struct {
	ServiceID string `pathParam:"style=simple,explode=false,name=serviceID"`
}

func (o *TaggingRulesGetTaggingRulesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

type TaggingRulesGetTaggingRulesData struct {
	Rules []components.V3ServicesTaggingRulesTaggingRuleResponse `json:"rules"`
}

func (o *TaggingRulesGetTaggingRulesData) GetRules() []components.V3ServicesTaggingRulesTaggingRuleResponse {
	if o == nil {
		return []components.V3ServicesTaggingRulesTaggingRuleResponse{}
	}
	return o.Rules
}

// TaggingRulesGetTaggingRulesResponseBody - The request has succeeded.
type TaggingRulesGetTaggingRulesResponseBody struct {
	Data TaggingRulesGetTaggingRulesData `json:"data"`
}

func (o *TaggingRulesGetTaggingRulesResponseBody) GetData() TaggingRulesGetTaggingRulesData {
	if o == nil {
		return TaggingRulesGetTaggingRulesData{}
	}
	return o.Data
}

type TaggingRulesGetTaggingRulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *TaggingRulesGetTaggingRulesResponseBody
}

func (o *TaggingRulesGetTaggingRulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *TaggingRulesGetTaggingRulesResponse) GetObject() *TaggingRulesGetTaggingRulesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
