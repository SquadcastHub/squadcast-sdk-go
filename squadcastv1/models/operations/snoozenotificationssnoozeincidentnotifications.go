// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type SnoozeNotificationsSnoozeIncidentNotificationsRequest struct {
	IncidentID                                          string                                                         `pathParam:"style=simple,explode=false,name=incidentID"`
	V3IncidentsSnoozeNotificationsSnoozeIncidentRequest components.V3IncidentsSnoozeNotificationsSnoozeIncidentRequest `request:"mediaType=application/json"`
}

func (s *SnoozeNotificationsSnoozeIncidentNotificationsRequest) GetIncidentID() string {
	if s == nil {
		return ""
	}
	return s.IncidentID
}

func (s *SnoozeNotificationsSnoozeIncidentNotificationsRequest) GetV3IncidentsSnoozeNotificationsSnoozeIncidentRequest() components.V3IncidentsSnoozeNotificationsSnoozeIncidentRequest {
	if s == nil {
		return components.V3IncidentsSnoozeNotificationsSnoozeIncidentRequest{}
	}
	return s.V3IncidentsSnoozeNotificationsSnoozeIncidentRequest
}

// SnoozeNotificationsSnoozeIncidentNotificationsResponseBody - The request has succeeded.
type SnoozeNotificationsSnoozeIncidentNotificationsResponseBody struct {
	Data components.V3IncidentsSnoozeNotificationsSnoozeIncidentResponse `json:"data"`
}

func (s *SnoozeNotificationsSnoozeIncidentNotificationsResponseBody) GetData() components.V3IncidentsSnoozeNotificationsSnoozeIncidentResponse {
	if s == nil {
		return components.V3IncidentsSnoozeNotificationsSnoozeIncidentResponse{}
	}
	return s.Data
}

type SnoozeNotificationsSnoozeIncidentNotificationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *SnoozeNotificationsSnoozeIncidentNotificationsResponseBody
}

func (s *SnoozeNotificationsSnoozeIncidentNotificationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *SnoozeNotificationsSnoozeIncidentNotificationsResponse) GetObject() *SnoozeNotificationsSnoozeIncidentNotificationsResponseBody {
	if s == nil {
		return nil
	}
	return s.Object
}
