// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IncidentsIncidentExportAsyncBody - The body type of the operation request or response.
type IncidentsIncidentExportAsyncBody struct {
	Data components.V3IncidentsIncidentExportAsyncResponse
}

func (o *IncidentsIncidentExportAsyncBody) GetData() components.V3IncidentsIncidentExportAsyncResponse {
	if o == nil {
		return components.V3IncidentsIncidentExportAsyncResponse{}
	}
	return o.Data
}

// IncidentsIncidentExportAsyncResponseBody - The request has been accepted for processing, but processing has not yet completed.
type IncidentsIncidentExportAsyncResponseBody struct {
	// The body type of the operation request or response.
	Body IncidentsIncidentExportAsyncBody
}

func (o *IncidentsIncidentExportAsyncResponseBody) GetBody() IncidentsIncidentExportAsyncBody {
	if o == nil {
		return IncidentsIncidentExportAsyncBody{}
	}
	return o.Body
}

type IncidentsIncidentExportAsyncResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Body     []byte
}

func (o *IncidentsIncidentExportAsyncResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *IncidentsIncidentExportAsyncResponse) GetBody() []byte {
	if o == nil {
		return nil
	}
	return o.Body
}
