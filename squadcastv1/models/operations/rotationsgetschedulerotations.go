// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type RotationsGetScheduleRotationsRequest struct {
	ScheduleID string `pathParam:"style=simple,explode=false,name=scheduleID"`
}

func (o *RotationsGetScheduleRotationsRequest) GetScheduleID() string {
	if o == nil {
		return ""
	}
	return o.ScheduleID
}

// RotationsGetScheduleRotationsResponseBody - The request has succeeded.
type RotationsGetScheduleRotationsResponseBody struct {
	Data     []components.V4RotationResponse `json:"data"`
	PageInfo components.CommonV4PageInfo     `json:"pageInfo"`
}

func (o *RotationsGetScheduleRotationsResponseBody) GetData() []components.V4RotationResponse {
	if o == nil {
		return []components.V4RotationResponse{}
	}
	return o.Data
}

func (o *RotationsGetScheduleRotationsResponseBody) GetPageInfo() components.CommonV4PageInfo {
	if o == nil {
		return components.CommonV4PageInfo{}
	}
	return o.PageInfo
}

type RotationsGetScheduleRotationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *RotationsGetScheduleRotationsResponseBody
}

func (o *RotationsGetScheduleRotationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RotationsGetScheduleRotationsResponse) GetObject() *RotationsGetScheduleRotationsResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
