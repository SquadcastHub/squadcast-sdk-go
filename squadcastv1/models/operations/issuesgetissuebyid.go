// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type IssuesGetIssueByIDRequest struct {
	StatuspageID string `pathParam:"style=simple,explode=false,name=statuspageID"`
	IssueID      string `pathParam:"style=simple,explode=false,name=issue_id"`
}

func (o *IssuesGetIssueByIDRequest) GetStatuspageID() string {
	if o == nil {
		return ""
	}
	return o.StatuspageID
}

func (o *IssuesGetIssueByIDRequest) GetIssueID() string {
	if o == nil {
		return ""
	}
	return o.IssueID
}

// IssuesGetIssueByIDResponseBody - The request has succeeded.
type IssuesGetIssueByIDResponseBody struct {
	Data components.V4StatusPagesIssuesGetIssueByIDResponse `json:"data"`
}

func (o *IssuesGetIssueByIDResponseBody) GetData() components.V4StatusPagesIssuesGetIssueByIDResponse {
	if o == nil {
		return components.V4StatusPagesIssuesGetIssueByIDResponse{}
	}
	return o.Data
}

type IssuesGetIssueByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *IssuesGetIssueByIDResponseBody
}

func (o *IssuesGetIssueByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *IssuesGetIssueByIDResponse) GetObject() *IssuesGetIssueByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
