// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type NotesCreateNotesRequest struct {
	// Required
	IncidentID                        string                                       `pathParam:"style=simple,explode=false,name=IncidentId"`
	V3IncidentsNotesCreateNoteRequest components.V3IncidentsNotesCreateNoteRequest `request:"mediaType=application/json"`
}

func (n *NotesCreateNotesRequest) GetIncidentID() string {
	if n == nil {
		return ""
	}
	return n.IncidentID
}

func (n *NotesCreateNotesRequest) GetV3IncidentsNotesCreateNoteRequest() components.V3IncidentsNotesCreateNoteRequest {
	if n == nil {
		return components.V3IncidentsNotesCreateNoteRequest{}
	}
	return n.V3IncidentsNotesCreateNoteRequest
}

// NotesCreateNotesBody - The body type of the operation request or response.
type NotesCreateNotesBody struct {
	Data components.V3IncidentsNotesNoteResponse `json:"data"`
}

func (n *NotesCreateNotesBody) GetData() components.V3IncidentsNotesNoteResponse {
	if n == nil {
		return components.V3IncidentsNotesNoteResponse{}
	}
	return n.Data
}

// NotesCreateNotesResponseBody - The request has succeeded and a new resource has been created as a result.
type NotesCreateNotesResponseBody struct {
	// The body type of the operation request or response.
	Body NotesCreateNotesBody `json:"body"`
}

func (n *NotesCreateNotesResponseBody) GetBody() NotesCreateNotesBody {
	if n == nil {
		return NotesCreateNotesBody{}
	}
	return n.Body
}

type NotesCreateNotesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded and a new resource has been created as a result.
	Object *NotesCreateNotesResponseBody
}

func (n *NotesCreateNotesResponse) GetHTTPMeta() components.HTTPMetadata {
	if n == nil {
		return components.HTTPMetadata{}
	}
	return n.HTTPMeta
}

func (n *NotesCreateNotesResponse) GetObject() *NotesCreateNotesResponseBody {
	if n == nil {
		return nil
	}
	return n.Object
}
