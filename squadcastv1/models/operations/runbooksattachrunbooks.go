// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type RunbooksAttachRunbooksRequest struct {
	IncidentID                               string                                              `pathParam:"style=simple,explode=false,name=IncidentId"`
	V3IncidentsRunbooksAttachRunbooksRequest components.V3IncidentsRunbooksAttachRunbooksRequest `request:"mediaType=application/json"`
}

func (o *RunbooksAttachRunbooksRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *RunbooksAttachRunbooksRequest) GetV3IncidentsRunbooksAttachRunbooksRequest() components.V3IncidentsRunbooksAttachRunbooksRequest {
	if o == nil {
		return components.V3IncidentsRunbooksAttachRunbooksRequest{}
	}
	return o.V3IncidentsRunbooksAttachRunbooksRequest
}

// RunbooksAttachRunbooksResponseBody - The request has succeeded and a new resource has been created as a result.
type RunbooksAttachRunbooksResponseBody struct {
	Data []components.V3IncidentsRunbooksRunbookResponse `json:"data"`
}

func (o *RunbooksAttachRunbooksResponseBody) GetData() []components.V3IncidentsRunbooksRunbookResponse {
	if o == nil {
		return []components.V3IncidentsRunbooksRunbookResponse{}
	}
	return o.Data
}

type RunbooksAttachRunbooksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded and a new resource has been created as a result.
	Object *RunbooksAttachRunbooksResponseBody
}

func (o *RunbooksAttachRunbooksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RunbooksAttachRunbooksResponse) GetObject() *RunbooksAttachRunbooksResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
