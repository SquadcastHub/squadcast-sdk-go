// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type RoutingRulesGetRoutingRulesRequest struct {
	ServiceID string `pathParam:"style=simple,explode=false,name=serviceID"`
}

func (o *RoutingRulesGetRoutingRulesRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

type RoutingRulesGetRoutingRulesData struct {
	Rules []components.V3ServicesRoutingRulesRoutingRuleResponse `json:"rules"`
}

func (o *RoutingRulesGetRoutingRulesData) GetRules() []components.V3ServicesRoutingRulesRoutingRuleResponse {
	if o == nil {
		return []components.V3ServicesRoutingRulesRoutingRuleResponse{}
	}
	return o.Rules
}

// RoutingRulesGetRoutingRulesResponseBody - The request has succeeded.
type RoutingRulesGetRoutingRulesResponseBody struct {
	Data RoutingRulesGetRoutingRulesData `json:"data"`
}

func (o *RoutingRulesGetRoutingRulesResponseBody) GetData() RoutingRulesGetRoutingRulesData {
	if o == nil {
		return RoutingRulesGetRoutingRulesData{}
	}
	return o.Data
}

type RoutingRulesGetRoutingRulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *RoutingRulesGetRoutingRulesResponseBody
}

func (o *RoutingRulesGetRoutingRulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *RoutingRulesGetRoutingRulesResponse) GetObject() *RoutingRulesGetRoutingRulesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
