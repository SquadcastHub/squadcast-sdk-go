// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

type WorkflowsUpdateWorkflowActionRequest struct {
	WorkflowID                     string                                    `pathParam:"style=simple,explode=false,name=workflowID"`
	ActionID                       string                                    `pathParam:"style=simple,explode=false,name=actionID"`
	V3WorkflowsActionRequestUpdate components.V3WorkflowsActionRequestUpdate `request:"mediaType=application/json"`
}

func (w *WorkflowsUpdateWorkflowActionRequest) GetWorkflowID() string {
	if w == nil {
		return ""
	}
	return w.WorkflowID
}

func (w *WorkflowsUpdateWorkflowActionRequest) GetActionID() string {
	if w == nil {
		return ""
	}
	return w.ActionID
}

func (w *WorkflowsUpdateWorkflowActionRequest) GetV3WorkflowsActionRequestUpdate() components.V3WorkflowsActionRequestUpdate {
	if w == nil {
		return components.V3WorkflowsActionRequestUpdate{}
	}
	return w.V3WorkflowsActionRequestUpdate
}

type WorkflowsUpdateWorkflowActionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	V3WorkflowsActionResponse *components.V3WorkflowsActionResponse
}

func (w *WorkflowsUpdateWorkflowActionResponse) GetHTTPMeta() components.HTTPMetadata {
	if w == nil {
		return components.HTTPMetadata{}
	}
	return w.HTTPMeta
}

func (w *WorkflowsUpdateWorkflowActionResponse) GetV3WorkflowsActionResponse() *components.V3WorkflowsActionResponse {
	if w == nil {
		return nil
	}
	return w.V3WorkflowsActionResponse
}
