// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// UsersUpdateUserByIDGatewayTimeoutError - Server error
type UsersUpdateUserByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDGatewayTimeoutError{}

func (e *UsersUpdateUserByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDServiceUnavailableError - Service unavailable.
type UsersUpdateUserByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDServiceUnavailableError{}

func (e *UsersUpdateUserByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDBadGatewayError - Server error
type UsersUpdateUserByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDBadGatewayError{}

func (e *UsersUpdateUserByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDInternalServerError - Server error
type UsersUpdateUserByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDInternalServerError{}

func (e *UsersUpdateUserByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDUnprocessableEntityError - Client error
type UsersUpdateUserByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDUnprocessableEntityError{}

func (e *UsersUpdateUserByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDConflictError - The request conflicts with the current state of the server.
type UsersUpdateUserByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDConflictError{}

func (e *UsersUpdateUserByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDNotFoundError - The server cannot find the requested resource.
type UsersUpdateUserByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDNotFoundError{}

func (e *UsersUpdateUserByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDForbiddenError - Access is forbidden.
type UsersUpdateUserByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDForbiddenError{}

func (e *UsersUpdateUserByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDPaymentRequiredError - Client error
type UsersUpdateUserByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDPaymentRequiredError{}

func (e *UsersUpdateUserByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDUnauthorizedError - Access is unauthorized.
type UsersUpdateUserByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDUnauthorizedError{}

func (e *UsersUpdateUserByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersUpdateUserByIDBadRequestError - The server could not understand the request due to invalid syntax.
type UsersUpdateUserByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersUpdateUserByIDBadRequestError{}

func (e *UsersUpdateUserByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
