// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// GlobalEventRulesUpdateRuleByIDGatewayTimeoutError - Server error
type GlobalEventRulesUpdateRuleByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDGatewayTimeoutError{}

func (e *GlobalEventRulesUpdateRuleByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDServiceUnavailableError - Service unavailable.
type GlobalEventRulesUpdateRuleByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDServiceUnavailableError{}

func (e *GlobalEventRulesUpdateRuleByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDBadGatewayError - Server error
type GlobalEventRulesUpdateRuleByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDBadGatewayError{}

func (e *GlobalEventRulesUpdateRuleByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDInternalServerError - Server error
type GlobalEventRulesUpdateRuleByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDInternalServerError{}

func (e *GlobalEventRulesUpdateRuleByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDUnprocessableEntityError - Client error
type GlobalEventRulesUpdateRuleByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDUnprocessableEntityError{}

func (e *GlobalEventRulesUpdateRuleByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesUpdateRuleByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDConflictError{}

func (e *GlobalEventRulesUpdateRuleByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesUpdateRuleByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDNotFoundError{}

func (e *GlobalEventRulesUpdateRuleByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDForbiddenError - Access is forbidden.
type GlobalEventRulesUpdateRuleByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDForbiddenError{}

func (e *GlobalEventRulesUpdateRuleByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDPaymentRequiredError - Client error
type GlobalEventRulesUpdateRuleByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDPaymentRequiredError{}

func (e *GlobalEventRulesUpdateRuleByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDUnauthorizedError - Access is unauthorized.
type GlobalEventRulesUpdateRuleByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDUnauthorizedError{}

func (e *GlobalEventRulesUpdateRuleByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRuleByIDBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesUpdateRuleByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRuleByIDBadRequestError{}

func (e *GlobalEventRulesUpdateRuleByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
