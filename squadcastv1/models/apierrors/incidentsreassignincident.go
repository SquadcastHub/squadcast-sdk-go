// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IncidentsReassignIncidentGatewayTimeoutError - Server error
type IncidentsReassignIncidentGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentGatewayTimeoutError{}

func (e *IncidentsReassignIncidentGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentServiceUnavailableError - Service unavailable.
type IncidentsReassignIncidentServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentServiceUnavailableError{}

func (e *IncidentsReassignIncidentServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentBadGatewayError - Server error
type IncidentsReassignIncidentBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentBadGatewayError{}

func (e *IncidentsReassignIncidentBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentInternalServerError - Server error
type IncidentsReassignIncidentInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentInternalServerError{}

func (e *IncidentsReassignIncidentInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentUnprocessableEntityError - Client error
type IncidentsReassignIncidentUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentUnprocessableEntityError{}

func (e *IncidentsReassignIncidentUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentConflictError - The request conflicts with the current state of the server.
type IncidentsReassignIncidentConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentConflictError{}

func (e *IncidentsReassignIncidentConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentNotFoundError - The server cannot find the requested resource.
type IncidentsReassignIncidentNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentNotFoundError{}

func (e *IncidentsReassignIncidentNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentForbiddenError - Access is forbidden.
type IncidentsReassignIncidentForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentForbiddenError{}

func (e *IncidentsReassignIncidentForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentPaymentRequiredError - Client error
type IncidentsReassignIncidentPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentPaymentRequiredError{}

func (e *IncidentsReassignIncidentPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentUnauthorizedError - Access is unauthorized.
type IncidentsReassignIncidentUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentUnauthorizedError{}

func (e *IncidentsReassignIncidentUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsReassignIncidentBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsReassignIncidentBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsReassignIncidentBadRequestError{}

func (e *IncidentsReassignIncidentBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
