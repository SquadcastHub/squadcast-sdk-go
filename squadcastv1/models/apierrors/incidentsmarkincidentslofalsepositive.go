// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IncidentsMarkIncidentSloFalsePositiveGatewayTimeoutError - Server error
type IncidentsMarkIncidentSloFalsePositiveGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveGatewayTimeoutError{}

func (e *IncidentsMarkIncidentSloFalsePositiveGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveServiceUnavailableError - Service unavailable.
type IncidentsMarkIncidentSloFalsePositiveServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveServiceUnavailableError{}

func (e *IncidentsMarkIncidentSloFalsePositiveServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveBadGatewayError - Server error
type IncidentsMarkIncidentSloFalsePositiveBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveBadGatewayError{}

func (e *IncidentsMarkIncidentSloFalsePositiveBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveInternalServerError - Server error
type IncidentsMarkIncidentSloFalsePositiveInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveInternalServerError{}

func (e *IncidentsMarkIncidentSloFalsePositiveInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveUnprocessableEntityError - Client error
type IncidentsMarkIncidentSloFalsePositiveUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveUnprocessableEntityError{}

func (e *IncidentsMarkIncidentSloFalsePositiveUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveConflictError - The request conflicts with the current state of the server.
type IncidentsMarkIncidentSloFalsePositiveConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveConflictError{}

func (e *IncidentsMarkIncidentSloFalsePositiveConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveNotFoundError - The server cannot find the requested resource.
type IncidentsMarkIncidentSloFalsePositiveNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveNotFoundError{}

func (e *IncidentsMarkIncidentSloFalsePositiveNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveForbiddenError - Access is forbidden.
type IncidentsMarkIncidentSloFalsePositiveForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveForbiddenError{}

func (e *IncidentsMarkIncidentSloFalsePositiveForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositivePaymentRequiredError - Client error
type IncidentsMarkIncidentSloFalsePositivePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositivePaymentRequiredError{}

func (e *IncidentsMarkIncidentSloFalsePositivePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveUnauthorizedError - Access is unauthorized.
type IncidentsMarkIncidentSloFalsePositiveUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveUnauthorizedError{}

func (e *IncidentsMarkIncidentSloFalsePositiveUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsMarkIncidentSloFalsePositiveBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsMarkIncidentSloFalsePositiveBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsMarkIncidentSloFalsePositiveBadRequestError{}

func (e *IncidentsMarkIncidentSloFalsePositiveBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
