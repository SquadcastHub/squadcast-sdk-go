// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// WorkflowsGetWorkflowByIDGatewayTimeoutError - Server error
type WorkflowsGetWorkflowByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDGatewayTimeoutError{}

func (e *WorkflowsGetWorkflowByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDServiceUnavailableError - Service unavailable.
type WorkflowsGetWorkflowByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDServiceUnavailableError{}

func (e *WorkflowsGetWorkflowByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDBadGatewayError - Server error
type WorkflowsGetWorkflowByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDBadGatewayError{}

func (e *WorkflowsGetWorkflowByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDInternalServerError - Server error
type WorkflowsGetWorkflowByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDInternalServerError{}

func (e *WorkflowsGetWorkflowByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDUnprocessableEntityError - Client error
type WorkflowsGetWorkflowByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDUnprocessableEntityError{}

func (e *WorkflowsGetWorkflowByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDConflictError - The request conflicts with the current state of the server.
type WorkflowsGetWorkflowByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDConflictError{}

func (e *WorkflowsGetWorkflowByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDNotFoundError - The server cannot find the requested resource.
type WorkflowsGetWorkflowByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDNotFoundError{}

func (e *WorkflowsGetWorkflowByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDForbiddenError - Access is forbidden.
type WorkflowsGetWorkflowByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDForbiddenError{}

func (e *WorkflowsGetWorkflowByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDPaymentRequiredError - Client error
type WorkflowsGetWorkflowByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDPaymentRequiredError{}

func (e *WorkflowsGetWorkflowByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDUnauthorizedError - Access is unauthorized.
type WorkflowsGetWorkflowByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDUnauthorizedError{}

func (e *WorkflowsGetWorkflowByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowByIDBadRequestError - The server could not understand the request due to invalid syntax.
type WorkflowsGetWorkflowByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowByIDBadRequestError{}

func (e *WorkflowsGetWorkflowByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
