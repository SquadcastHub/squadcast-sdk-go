// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// CommunicationCardsDeleteCommunicationCardGatewayTimeoutError - Server error
type CommunicationCardsDeleteCommunicationCardGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardGatewayTimeoutError{}

func (e *CommunicationCardsDeleteCommunicationCardGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardServiceUnavailableError - Service unavailable.
type CommunicationCardsDeleteCommunicationCardServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardServiceUnavailableError{}

func (e *CommunicationCardsDeleteCommunicationCardServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardBadGatewayError - Server error
type CommunicationCardsDeleteCommunicationCardBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardBadGatewayError{}

func (e *CommunicationCardsDeleteCommunicationCardBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardInternalServerError - Server error
type CommunicationCardsDeleteCommunicationCardInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardInternalServerError{}

func (e *CommunicationCardsDeleteCommunicationCardInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardUnprocessableEntityError - Client error
type CommunicationCardsDeleteCommunicationCardUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardUnprocessableEntityError{}

func (e *CommunicationCardsDeleteCommunicationCardUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardConflictError - The request conflicts with the current state of the server.
type CommunicationCardsDeleteCommunicationCardConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardConflictError{}

func (e *CommunicationCardsDeleteCommunicationCardConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardNotFoundError - The server cannot find the requested resource.
type CommunicationCardsDeleteCommunicationCardNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardNotFoundError{}

func (e *CommunicationCardsDeleteCommunicationCardNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardForbiddenError - Access is forbidden.
type CommunicationCardsDeleteCommunicationCardForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardForbiddenError{}

func (e *CommunicationCardsDeleteCommunicationCardForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardPaymentRequiredError - Client error
type CommunicationCardsDeleteCommunicationCardPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardPaymentRequiredError{}

func (e *CommunicationCardsDeleteCommunicationCardPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardUnauthorizedError - Access is unauthorized.
type CommunicationCardsDeleteCommunicationCardUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardUnauthorizedError{}

func (e *CommunicationCardsDeleteCommunicationCardUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsDeleteCommunicationCardBadRequestError - The server could not understand the request due to invalid syntax.
type CommunicationCardsDeleteCommunicationCardBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsDeleteCommunicationCardBadRequestError{}

func (e *CommunicationCardsDeleteCommunicationCardBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
