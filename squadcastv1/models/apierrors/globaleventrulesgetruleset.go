// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// GlobalEventRulesGetRulesetGatewayTimeoutError - Server error
type GlobalEventRulesGetRulesetGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetGatewayTimeoutError{}

func (e *GlobalEventRulesGetRulesetGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetServiceUnavailableError - Service unavailable.
type GlobalEventRulesGetRulesetServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetServiceUnavailableError{}

func (e *GlobalEventRulesGetRulesetServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetBadGatewayError - Server error
type GlobalEventRulesGetRulesetBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetBadGatewayError{}

func (e *GlobalEventRulesGetRulesetBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetInternalServerError - Server error
type GlobalEventRulesGetRulesetInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetInternalServerError{}

func (e *GlobalEventRulesGetRulesetInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetUnprocessableEntityError - Client error
type GlobalEventRulesGetRulesetUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetUnprocessableEntityError{}

func (e *GlobalEventRulesGetRulesetUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesGetRulesetConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetConflictError{}

func (e *GlobalEventRulesGetRulesetConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesGetRulesetNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetNotFoundError{}

func (e *GlobalEventRulesGetRulesetNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetForbiddenError - Access is forbidden.
type GlobalEventRulesGetRulesetForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetForbiddenError{}

func (e *GlobalEventRulesGetRulesetForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetPaymentRequiredError - Client error
type GlobalEventRulesGetRulesetPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetPaymentRequiredError{}

func (e *GlobalEventRulesGetRulesetPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetUnauthorizedError - Access is unauthorized.
type GlobalEventRulesGetRulesetUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetUnauthorizedError{}

func (e *GlobalEventRulesGetRulesetUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRulesetBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesGetRulesetBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRulesetBadRequestError{}

func (e *GlobalEventRulesGetRulesetBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
