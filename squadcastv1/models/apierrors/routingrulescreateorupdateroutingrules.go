// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// RoutingRulesCreateOrUpdateRoutingRulesGatewayTimeoutError - Server error
type RoutingRulesCreateOrUpdateRoutingRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesGatewayTimeoutError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesServiceUnavailableError - Service unavailable.
type RoutingRulesCreateOrUpdateRoutingRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesServiceUnavailableError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesBadGatewayError - Server error
type RoutingRulesCreateOrUpdateRoutingRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesBadGatewayError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesInternalServerError - Server error
type RoutingRulesCreateOrUpdateRoutingRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesInternalServerError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesUnprocessableEntityError - Client error
type RoutingRulesCreateOrUpdateRoutingRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesUnprocessableEntityError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesConflictError - The request conflicts with the current state of the server.
type RoutingRulesCreateOrUpdateRoutingRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesConflictError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesNotFoundError - The server cannot find the requested resource.
type RoutingRulesCreateOrUpdateRoutingRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesNotFoundError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesForbiddenError - Access is forbidden.
type RoutingRulesCreateOrUpdateRoutingRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesForbiddenError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesPaymentRequiredError - Client error
type RoutingRulesCreateOrUpdateRoutingRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesPaymentRequiredError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesUnauthorizedError - Access is unauthorized.
type RoutingRulesCreateOrUpdateRoutingRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesUnauthorizedError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesCreateOrUpdateRoutingRulesBadRequestError - The server could not understand the request due to invalid syntax.
type RoutingRulesCreateOrUpdateRoutingRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesCreateOrUpdateRoutingRulesBadRequestError{}

func (e *RoutingRulesCreateOrUpdateRoutingRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
