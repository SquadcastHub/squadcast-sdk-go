// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// SLOMarkSLOFalsePositiveGatewayTimeoutError - Server error
type SLOMarkSLOFalsePositiveGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveGatewayTimeoutError{}

func (e *SLOMarkSLOFalsePositiveGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveServiceUnavailableError - Service unavailable.
type SLOMarkSLOFalsePositiveServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveServiceUnavailableError{}

func (e *SLOMarkSLOFalsePositiveServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveBadGatewayError - Server error
type SLOMarkSLOFalsePositiveBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveBadGatewayError{}

func (e *SLOMarkSLOFalsePositiveBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveInternalServerError - Server error
type SLOMarkSLOFalsePositiveInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveInternalServerError{}

func (e *SLOMarkSLOFalsePositiveInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveUnprocessableEntityError - Client error
type SLOMarkSLOFalsePositiveUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveUnprocessableEntityError{}

func (e *SLOMarkSLOFalsePositiveUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveConflictError - The request conflicts with the current state of the server.
type SLOMarkSLOFalsePositiveConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveConflictError{}

func (e *SLOMarkSLOFalsePositiveConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveNotFoundError - The server cannot find the requested resource.
type SLOMarkSLOFalsePositiveNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveNotFoundError{}

func (e *SLOMarkSLOFalsePositiveNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveForbiddenError - Access is forbidden.
type SLOMarkSLOFalsePositiveForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveForbiddenError{}

func (e *SLOMarkSLOFalsePositiveForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositivePaymentRequiredError - Client error
type SLOMarkSLOFalsePositivePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositivePaymentRequiredError{}

func (e *SLOMarkSLOFalsePositivePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveUnauthorizedError - Access is unauthorized.
type SLOMarkSLOFalsePositiveUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveUnauthorizedError{}

func (e *SLOMarkSLOFalsePositiveUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SLOMarkSLOFalsePositiveBadRequestError - The server could not understand the request due to invalid syntax.
type SLOMarkSLOFalsePositiveBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SLOMarkSLOFalsePositiveBadRequestError{}

func (e *SLOMarkSLOFalsePositiveBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
