// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IncidentsGetIncidentByIDGatewayTimeoutError - Server error
type IncidentsGetIncidentByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDGatewayTimeoutError{}

func (e *IncidentsGetIncidentByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDServiceUnavailableError - Service unavailable.
type IncidentsGetIncidentByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDServiceUnavailableError{}

func (e *IncidentsGetIncidentByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDBadGatewayError - Server error
type IncidentsGetIncidentByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDBadGatewayError{}

func (e *IncidentsGetIncidentByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDInternalServerError - Server error
type IncidentsGetIncidentByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDInternalServerError{}

func (e *IncidentsGetIncidentByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDUnprocessableEntityError - Client error
type IncidentsGetIncidentByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDUnprocessableEntityError{}

func (e *IncidentsGetIncidentByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDConflictError - The request conflicts with the current state of the server.
type IncidentsGetIncidentByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDConflictError{}

func (e *IncidentsGetIncidentByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDNotFoundError - The server cannot find the requested resource.
type IncidentsGetIncidentByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDNotFoundError{}

func (e *IncidentsGetIncidentByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDForbiddenError - Access is forbidden.
type IncidentsGetIncidentByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDForbiddenError{}

func (e *IncidentsGetIncidentByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDPaymentRequiredError - Client error
type IncidentsGetIncidentByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDPaymentRequiredError{}

func (e *IncidentsGetIncidentByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDUnauthorizedError - Access is unauthorized.
type IncidentsGetIncidentByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDUnauthorizedError{}

func (e *IncidentsGetIncidentByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentByIDBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsGetIncidentByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentByIDBadRequestError{}

func (e *IncidentsGetIncidentByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
