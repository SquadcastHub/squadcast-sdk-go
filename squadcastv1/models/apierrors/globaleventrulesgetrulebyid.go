// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// GlobalEventRulesGetRuleByIDGatewayTimeoutError - Server error
type GlobalEventRulesGetRuleByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDGatewayTimeoutError{}

func (e *GlobalEventRulesGetRuleByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDServiceUnavailableError - Service unavailable.
type GlobalEventRulesGetRuleByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDServiceUnavailableError{}

func (e *GlobalEventRulesGetRuleByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDBadGatewayError - Server error
type GlobalEventRulesGetRuleByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDBadGatewayError{}

func (e *GlobalEventRulesGetRuleByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDInternalServerError - Server error
type GlobalEventRulesGetRuleByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDInternalServerError{}

func (e *GlobalEventRulesGetRuleByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDUnprocessableEntityError - Client error
type GlobalEventRulesGetRuleByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDUnprocessableEntityError{}

func (e *GlobalEventRulesGetRuleByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesGetRuleByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDConflictError{}

func (e *GlobalEventRulesGetRuleByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesGetRuleByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDNotFoundError{}

func (e *GlobalEventRulesGetRuleByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDForbiddenError - Access is forbidden.
type GlobalEventRulesGetRuleByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDForbiddenError{}

func (e *GlobalEventRulesGetRuleByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDPaymentRequiredError - Client error
type GlobalEventRulesGetRuleByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDPaymentRequiredError{}

func (e *GlobalEventRulesGetRuleByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDUnauthorizedError - Access is unauthorized.
type GlobalEventRulesGetRuleByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDUnauthorizedError{}

func (e *GlobalEventRulesGetRuleByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesGetRuleByIDBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesGetRuleByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesGetRuleByIDBadRequestError{}

func (e *GlobalEventRulesGetRuleByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
