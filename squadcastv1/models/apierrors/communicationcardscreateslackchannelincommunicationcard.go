// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// CommunicationCardsCreateSlackChannelInCommunicationCardGatewayTimeoutError - Server error
type CommunicationCardsCreateSlackChannelInCommunicationCardGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardGatewayTimeoutError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardServiceUnavailableError - Service unavailable.
type CommunicationCardsCreateSlackChannelInCommunicationCardServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardServiceUnavailableError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardBadGatewayError - Server error
type CommunicationCardsCreateSlackChannelInCommunicationCardBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardBadGatewayError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardInternalServerError - Server error
type CommunicationCardsCreateSlackChannelInCommunicationCardInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardInternalServerError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardUnprocessableEntityError - Client error
type CommunicationCardsCreateSlackChannelInCommunicationCardUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardUnprocessableEntityError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardConflictError - The request conflicts with the current state of the server.
type CommunicationCardsCreateSlackChannelInCommunicationCardConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardConflictError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardNotFoundError - The server cannot find the requested resource.
type CommunicationCardsCreateSlackChannelInCommunicationCardNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardNotFoundError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardForbiddenError - Access is forbidden.
type CommunicationCardsCreateSlackChannelInCommunicationCardForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardForbiddenError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardPaymentRequiredError - Client error
type CommunicationCardsCreateSlackChannelInCommunicationCardPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardPaymentRequiredError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardUnauthorizedError - Access is unauthorized.
type CommunicationCardsCreateSlackChannelInCommunicationCardUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardUnauthorizedError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateSlackChannelInCommunicationCardBadRequestError - The server could not understand the request due to invalid syntax.
type CommunicationCardsCreateSlackChannelInCommunicationCardBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateSlackChannelInCommunicationCardBadRequestError{}

func (e *CommunicationCardsCreateSlackChannelInCommunicationCardBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
