// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IncidentsIncidentExportGatewayTimeoutError - Server error
type IncidentsIncidentExportGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportGatewayTimeoutError{}

func (e *IncidentsIncidentExportGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportServiceUnavailableError - Service unavailable.
type IncidentsIncidentExportServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportServiceUnavailableError{}

func (e *IncidentsIncidentExportServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportBadGatewayError - Server error
type IncidentsIncidentExportBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportBadGatewayError{}

func (e *IncidentsIncidentExportBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportInternalServerError - Server error
type IncidentsIncidentExportInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportInternalServerError{}

func (e *IncidentsIncidentExportInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportUnprocessableEntityError - Client error
type IncidentsIncidentExportUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportUnprocessableEntityError{}

func (e *IncidentsIncidentExportUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportConflictError - The request conflicts with the current state of the server.
type IncidentsIncidentExportConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportConflictError{}

func (e *IncidentsIncidentExportConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportNotFoundError - The server cannot find the requested resource.
type IncidentsIncidentExportNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportNotFoundError{}

func (e *IncidentsIncidentExportNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportForbiddenError - Access is forbidden.
type IncidentsIncidentExportForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportForbiddenError{}

func (e *IncidentsIncidentExportForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsIncidentExportPaymentRequiredError - Client error
type IncidentsIncidentExportPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsIncidentExportPaymentRequiredError{}

func (e *IncidentsIncidentExportPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
