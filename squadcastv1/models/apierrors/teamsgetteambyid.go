// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// TeamsGetTeamByIDGatewayTimeoutError - Server error
type TeamsGetTeamByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDGatewayTimeoutError{}

func (e *TeamsGetTeamByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDServiceUnavailableError - Service unavailable.
type TeamsGetTeamByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDServiceUnavailableError{}

func (e *TeamsGetTeamByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDBadGatewayError - Server error
type TeamsGetTeamByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDBadGatewayError{}

func (e *TeamsGetTeamByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDInternalServerError - Server error
type TeamsGetTeamByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDInternalServerError{}

func (e *TeamsGetTeamByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDUnprocessableEntityError - Client error
type TeamsGetTeamByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDUnprocessableEntityError{}

func (e *TeamsGetTeamByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDConflictError - The request conflicts with the current state of the server.
type TeamsGetTeamByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDConflictError{}

func (e *TeamsGetTeamByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDNotFoundError - The server cannot find the requested resource.
type TeamsGetTeamByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDNotFoundError{}

func (e *TeamsGetTeamByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDForbiddenError - Access is forbidden.
type TeamsGetTeamByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDForbiddenError{}

func (e *TeamsGetTeamByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDPaymentRequiredError - Client error
type TeamsGetTeamByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDPaymentRequiredError{}

func (e *TeamsGetTeamByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDUnauthorizedError - Access is unauthorized.
type TeamsGetTeamByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDUnauthorizedError{}

func (e *TeamsGetTeamByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetTeamByIDBadRequestError - The server could not understand the request due to invalid syntax.
type TeamsGetTeamByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetTeamByIDBadRequestError{}

func (e *TeamsGetTeamByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
