// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// SnoozeNotificationsUnsnoozeIncidentNotificationsGatewayTimeoutError - Server error
type SnoozeNotificationsUnsnoozeIncidentNotificationsGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsGatewayTimeoutError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsServiceUnavailableError - Service unavailable.
type SnoozeNotificationsUnsnoozeIncidentNotificationsServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsServiceUnavailableError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsBadGatewayError - Server error
type SnoozeNotificationsUnsnoozeIncidentNotificationsBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsBadGatewayError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsInternalServerError - Server error
type SnoozeNotificationsUnsnoozeIncidentNotificationsInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsInternalServerError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsUnprocessableEntityError - Client error
type SnoozeNotificationsUnsnoozeIncidentNotificationsUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsUnprocessableEntityError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsConflictError - The request conflicts with the current state of the server.
type SnoozeNotificationsUnsnoozeIncidentNotificationsConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsConflictError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsNotFoundError - The server cannot find the requested resource.
type SnoozeNotificationsUnsnoozeIncidentNotificationsNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsNotFoundError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsForbiddenError - Access is forbidden.
type SnoozeNotificationsUnsnoozeIncidentNotificationsForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsForbiddenError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsPaymentRequiredError - Client error
type SnoozeNotificationsUnsnoozeIncidentNotificationsPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsPaymentRequiredError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsUnauthorizedError - Access is unauthorized.
type SnoozeNotificationsUnsnoozeIncidentNotificationsUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsUnauthorizedError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsBadRequestError - The server could not understand the request due to invalid syntax.
type SnoozeNotificationsUnsnoozeIncidentNotificationsBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SnoozeNotificationsUnsnoozeIncidentNotificationsBadRequestError{}

func (e *SnoozeNotificationsUnsnoozeIncidentNotificationsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
