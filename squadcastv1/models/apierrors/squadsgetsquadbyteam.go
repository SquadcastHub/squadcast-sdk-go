// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// SquadsGetSquadByTeamGatewayTimeoutError - Server error
type SquadsGetSquadByTeamGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamGatewayTimeoutError{}

func (e *SquadsGetSquadByTeamGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamServiceUnavailableError - Service unavailable.
type SquadsGetSquadByTeamServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamServiceUnavailableError{}

func (e *SquadsGetSquadByTeamServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamBadGatewayError - Server error
type SquadsGetSquadByTeamBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamBadGatewayError{}

func (e *SquadsGetSquadByTeamBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamInternalServerError - Server error
type SquadsGetSquadByTeamInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamInternalServerError{}

func (e *SquadsGetSquadByTeamInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamUnprocessableEntityError - Client error
type SquadsGetSquadByTeamUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamUnprocessableEntityError{}

func (e *SquadsGetSquadByTeamUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamConflictError - The request conflicts with the current state of the server.
type SquadsGetSquadByTeamConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamConflictError{}

func (e *SquadsGetSquadByTeamConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamNotFoundError - The server cannot find the requested resource.
type SquadsGetSquadByTeamNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamNotFoundError{}

func (e *SquadsGetSquadByTeamNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamForbiddenError - Access is forbidden.
type SquadsGetSquadByTeamForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamForbiddenError{}

func (e *SquadsGetSquadByTeamForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamPaymentRequiredError - Client error
type SquadsGetSquadByTeamPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamPaymentRequiredError{}

func (e *SquadsGetSquadByTeamPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamUnauthorizedError - Access is unauthorized.
type SquadsGetSquadByTeamUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamUnauthorizedError{}

func (e *SquadsGetSquadByTeamUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByTeamBadRequestError - The server could not understand the request due to invalid syntax.
type SquadsGetSquadByTeamBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByTeamBadRequestError{}

func (e *SquadsGetSquadByTeamBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
