// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// GlobalEventRulesCreateGlobalEventRuleGatewayTimeoutError - Server error
type GlobalEventRulesCreateGlobalEventRuleGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleGatewayTimeoutError{}

func (e *GlobalEventRulesCreateGlobalEventRuleGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleServiceUnavailableError - Service unavailable.
type GlobalEventRulesCreateGlobalEventRuleServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleServiceUnavailableError{}

func (e *GlobalEventRulesCreateGlobalEventRuleServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleBadGatewayError - Server error
type GlobalEventRulesCreateGlobalEventRuleBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleBadGatewayError{}

func (e *GlobalEventRulesCreateGlobalEventRuleBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleInternalServerError - Server error
type GlobalEventRulesCreateGlobalEventRuleInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleInternalServerError{}

func (e *GlobalEventRulesCreateGlobalEventRuleInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleUnprocessableEntityError - Client error
type GlobalEventRulesCreateGlobalEventRuleUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleUnprocessableEntityError{}

func (e *GlobalEventRulesCreateGlobalEventRuleUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesCreateGlobalEventRuleConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleConflictError{}

func (e *GlobalEventRulesCreateGlobalEventRuleConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesCreateGlobalEventRuleNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleNotFoundError{}

func (e *GlobalEventRulesCreateGlobalEventRuleNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleForbiddenError - Access is forbidden.
type GlobalEventRulesCreateGlobalEventRuleForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleForbiddenError{}

func (e *GlobalEventRulesCreateGlobalEventRuleForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRulePaymentRequiredError - Client error
type GlobalEventRulesCreateGlobalEventRulePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRulePaymentRequiredError{}

func (e *GlobalEventRulesCreateGlobalEventRulePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleUnauthorizedError - Access is unauthorized.
type GlobalEventRulesCreateGlobalEventRuleUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleUnauthorizedError{}

func (e *GlobalEventRulesCreateGlobalEventRuleUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateGlobalEventRuleBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesCreateGlobalEventRuleBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateGlobalEventRuleBadRequestError{}

func (e *GlobalEventRulesCreateGlobalEventRuleBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
