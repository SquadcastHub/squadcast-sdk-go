// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// RoutingRulesGetRoutingRulesGatewayTimeoutError - Server error
type RoutingRulesGetRoutingRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesGatewayTimeoutError{}

func (e *RoutingRulesGetRoutingRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesServiceUnavailableError - Service unavailable.
type RoutingRulesGetRoutingRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesServiceUnavailableError{}

func (e *RoutingRulesGetRoutingRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesBadGatewayError - Server error
type RoutingRulesGetRoutingRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesBadGatewayError{}

func (e *RoutingRulesGetRoutingRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesInternalServerError - Server error
type RoutingRulesGetRoutingRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesInternalServerError{}

func (e *RoutingRulesGetRoutingRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesUnprocessableEntityError - Client error
type RoutingRulesGetRoutingRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesUnprocessableEntityError{}

func (e *RoutingRulesGetRoutingRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesConflictError - The request conflicts with the current state of the server.
type RoutingRulesGetRoutingRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesConflictError{}

func (e *RoutingRulesGetRoutingRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesNotFoundError - The server cannot find the requested resource.
type RoutingRulesGetRoutingRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesNotFoundError{}

func (e *RoutingRulesGetRoutingRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesForbiddenError - Access is forbidden.
type RoutingRulesGetRoutingRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesForbiddenError{}

func (e *RoutingRulesGetRoutingRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesPaymentRequiredError - Client error
type RoutingRulesGetRoutingRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesPaymentRequiredError{}

func (e *RoutingRulesGetRoutingRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesUnauthorizedError - Access is unauthorized.
type RoutingRulesGetRoutingRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesUnauthorizedError{}

func (e *RoutingRulesGetRoutingRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RoutingRulesGetRoutingRulesBadRequestError - The server could not understand the request due to invalid syntax.
type RoutingRulesGetRoutingRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RoutingRulesGetRoutingRulesBadRequestError{}

func (e *RoutingRulesGetRoutingRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
