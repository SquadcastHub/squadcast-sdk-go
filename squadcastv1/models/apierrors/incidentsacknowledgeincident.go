// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IncidentsAcknowledgeIncidentGatewayTimeoutError - Server error
type IncidentsAcknowledgeIncidentGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentGatewayTimeoutError{}

func (e *IncidentsAcknowledgeIncidentGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentServiceUnavailableError - Service unavailable.
type IncidentsAcknowledgeIncidentServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentServiceUnavailableError{}

func (e *IncidentsAcknowledgeIncidentServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentBadGatewayError - Server error
type IncidentsAcknowledgeIncidentBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentBadGatewayError{}

func (e *IncidentsAcknowledgeIncidentBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentInternalServerError - Server error
type IncidentsAcknowledgeIncidentInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentInternalServerError{}

func (e *IncidentsAcknowledgeIncidentInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentUnprocessableEntityError - Client error
type IncidentsAcknowledgeIncidentUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentUnprocessableEntityError{}

func (e *IncidentsAcknowledgeIncidentUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentConflictError - The request conflicts with the current state of the server.
type IncidentsAcknowledgeIncidentConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentConflictError{}

func (e *IncidentsAcknowledgeIncidentConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentNotFoundError - The server cannot find the requested resource.
type IncidentsAcknowledgeIncidentNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentNotFoundError{}

func (e *IncidentsAcknowledgeIncidentNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentForbiddenError - Access is forbidden.
type IncidentsAcknowledgeIncidentForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentForbiddenError{}

func (e *IncidentsAcknowledgeIncidentForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentPaymentRequiredError - Client error
type IncidentsAcknowledgeIncidentPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentPaymentRequiredError{}

func (e *IncidentsAcknowledgeIncidentPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentUnauthorizedError - Access is unauthorized.
type IncidentsAcknowledgeIncidentUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentUnauthorizedError{}

func (e *IncidentsAcknowledgeIncidentUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsAcknowledgeIncidentBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsAcknowledgeIncidentBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsAcknowledgeIncidentBadRequestError{}

func (e *IncidentsAcknowledgeIncidentBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
