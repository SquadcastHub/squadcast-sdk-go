// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// ServicesGetServicesGatewayTimeoutError - Server error
type ServicesGetServicesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesGatewayTimeoutError{}

func (e *ServicesGetServicesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesServiceUnavailableError - Service unavailable.
type ServicesGetServicesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesServiceUnavailableError{}

func (e *ServicesGetServicesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesBadGatewayError - Server error
type ServicesGetServicesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesBadGatewayError{}

func (e *ServicesGetServicesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesInternalServerError - Server error
type ServicesGetServicesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesInternalServerError{}

func (e *ServicesGetServicesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesUnprocessableEntityError - Client error
type ServicesGetServicesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesUnprocessableEntityError{}

func (e *ServicesGetServicesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesConflictError - The request conflicts with the current state of the server.
type ServicesGetServicesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesConflictError{}

func (e *ServicesGetServicesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesNotFoundError - The server cannot find the requested resource.
type ServicesGetServicesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesNotFoundError{}

func (e *ServicesGetServicesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesForbiddenError - Access is forbidden.
type ServicesGetServicesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesForbiddenError{}

func (e *ServicesGetServicesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesPaymentRequiredError - Client error
type ServicesGetServicesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesPaymentRequiredError{}

func (e *ServicesGetServicesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesUnauthorizedError - Access is unauthorized.
type ServicesGetServicesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesUnauthorizedError{}

func (e *ServicesGetServicesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesBadRequestError - The server could not understand the request due to invalid syntax.
type ServicesGetServicesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesBadRequestError{}

func (e *ServicesGetServicesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
