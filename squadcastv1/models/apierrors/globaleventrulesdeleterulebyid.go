// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// GlobalEventRulesDeleteRuleByIDGatewayTimeoutError - Server error
type GlobalEventRulesDeleteRuleByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDGatewayTimeoutError{}

func (e *GlobalEventRulesDeleteRuleByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDServiceUnavailableError - Service unavailable.
type GlobalEventRulesDeleteRuleByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDServiceUnavailableError{}

func (e *GlobalEventRulesDeleteRuleByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDBadGatewayError - Server error
type GlobalEventRulesDeleteRuleByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDBadGatewayError{}

func (e *GlobalEventRulesDeleteRuleByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDInternalServerError - Server error
type GlobalEventRulesDeleteRuleByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDInternalServerError{}

func (e *GlobalEventRulesDeleteRuleByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDUnprocessableEntityError - Client error
type GlobalEventRulesDeleteRuleByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDUnprocessableEntityError{}

func (e *GlobalEventRulesDeleteRuleByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesDeleteRuleByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDConflictError{}

func (e *GlobalEventRulesDeleteRuleByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesDeleteRuleByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDNotFoundError{}

func (e *GlobalEventRulesDeleteRuleByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDForbiddenError - Access is forbidden.
type GlobalEventRulesDeleteRuleByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDForbiddenError{}

func (e *GlobalEventRulesDeleteRuleByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDPaymentRequiredError - Client error
type GlobalEventRulesDeleteRuleByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDPaymentRequiredError{}

func (e *GlobalEventRulesDeleteRuleByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDUnauthorizedError - Access is unauthorized.
type GlobalEventRulesDeleteRuleByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDUnauthorizedError{}

func (e *GlobalEventRulesDeleteRuleByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesDeleteRuleByIDBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesDeleteRuleByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesDeleteRuleByIDBadRequestError{}

func (e *GlobalEventRulesDeleteRuleByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
