// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// WorkflowsGetWorkflowLogsGatewayTimeoutError - Server error
type WorkflowsGetWorkflowLogsGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsGatewayTimeoutError{}

func (e *WorkflowsGetWorkflowLogsGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsServiceUnavailableError - Service unavailable.
type WorkflowsGetWorkflowLogsServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsServiceUnavailableError{}

func (e *WorkflowsGetWorkflowLogsServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsBadGatewayError - Server error
type WorkflowsGetWorkflowLogsBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsBadGatewayError{}

func (e *WorkflowsGetWorkflowLogsBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsInternalServerError - Server error
type WorkflowsGetWorkflowLogsInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsInternalServerError{}

func (e *WorkflowsGetWorkflowLogsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsUnprocessableEntityError - Client error
type WorkflowsGetWorkflowLogsUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsUnprocessableEntityError{}

func (e *WorkflowsGetWorkflowLogsUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsConflictError - The request conflicts with the current state of the server.
type WorkflowsGetWorkflowLogsConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsConflictError{}

func (e *WorkflowsGetWorkflowLogsConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsNotFoundError - The server cannot find the requested resource.
type WorkflowsGetWorkflowLogsNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsNotFoundError{}

func (e *WorkflowsGetWorkflowLogsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsForbiddenError - Access is forbidden.
type WorkflowsGetWorkflowLogsForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsForbiddenError{}

func (e *WorkflowsGetWorkflowLogsForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsPaymentRequiredError - Client error
type WorkflowsGetWorkflowLogsPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsPaymentRequiredError{}

func (e *WorkflowsGetWorkflowLogsPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsUnauthorizedError - Access is unauthorized.
type WorkflowsGetWorkflowLogsUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsUnauthorizedError{}

func (e *WorkflowsGetWorkflowLogsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WorkflowsGetWorkflowLogsBadRequestError - The server could not understand the request due to invalid syntax.
type WorkflowsGetWorkflowLogsBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WorkflowsGetWorkflowLogsBadRequestError{}

func (e *WorkflowsGetWorkflowLogsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
