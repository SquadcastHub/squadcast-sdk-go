// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IssuesListIssuesGatewayTimeoutError - Server error
type IssuesListIssuesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesGatewayTimeoutError{}

func (e *IssuesListIssuesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesServiceUnavailableError - Service unavailable.
type IssuesListIssuesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesServiceUnavailableError{}

func (e *IssuesListIssuesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesBadGatewayError - Server error
type IssuesListIssuesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesBadGatewayError{}

func (e *IssuesListIssuesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesInternalServerError - Server error
type IssuesListIssuesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesInternalServerError{}

func (e *IssuesListIssuesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesUnprocessableEntityError - Client error
type IssuesListIssuesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesUnprocessableEntityError{}

func (e *IssuesListIssuesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesConflictError - The request conflicts with the current state of the server.
type IssuesListIssuesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesConflictError{}

func (e *IssuesListIssuesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesNotFoundError - The server cannot find the requested resource.
type IssuesListIssuesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesNotFoundError{}

func (e *IssuesListIssuesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesForbiddenError - Access is forbidden.
type IssuesListIssuesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesForbiddenError{}

func (e *IssuesListIssuesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesPaymentRequiredError - Client error
type IssuesListIssuesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesPaymentRequiredError{}

func (e *IssuesListIssuesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesUnauthorizedError - Access is unauthorized.
type IssuesListIssuesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesUnauthorizedError{}

func (e *IssuesListIssuesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesListIssuesBadRequestError - The server could not understand the request due to invalid syntax.
type IssuesListIssuesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesListIssuesBadRequestError{}

func (e *IssuesListIssuesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
