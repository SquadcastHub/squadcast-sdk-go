// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// UsersGetAllTokensGatewayTimeoutError - Server error
type UsersGetAllTokensGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensGatewayTimeoutError{}

func (e *UsersGetAllTokensGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensServiceUnavailableError - Service unavailable.
type UsersGetAllTokensServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensServiceUnavailableError{}

func (e *UsersGetAllTokensServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensBadGatewayError - Server error
type UsersGetAllTokensBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensBadGatewayError{}

func (e *UsersGetAllTokensBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensInternalServerError - Server error
type UsersGetAllTokensInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensInternalServerError{}

func (e *UsersGetAllTokensInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensUnprocessableEntityError - Client error
type UsersGetAllTokensUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensUnprocessableEntityError{}

func (e *UsersGetAllTokensUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensConflictError - The request conflicts with the current state of the server.
type UsersGetAllTokensConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensConflictError{}

func (e *UsersGetAllTokensConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensNotFoundError - The server cannot find the requested resource.
type UsersGetAllTokensNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensNotFoundError{}

func (e *UsersGetAllTokensNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensForbiddenError - Access is forbidden.
type UsersGetAllTokensForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensForbiddenError{}

func (e *UsersGetAllTokensForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensPaymentRequiredError - Client error
type UsersGetAllTokensPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensPaymentRequiredError{}

func (e *UsersGetAllTokensPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensUnauthorizedError - Access is unauthorized.
type UsersGetAllTokensUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensUnauthorizedError{}

func (e *UsersGetAllTokensUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetAllTokensBadRequestError - The server could not understand the request due to invalid syntax.
type UsersGetAllTokensBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetAllTokensBadRequestError{}

func (e *UsersGetAllTokensBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
