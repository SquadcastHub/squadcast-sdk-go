// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IncidentsGetIncidentEventsGatewayTimeoutError - Server error
type IncidentsGetIncidentEventsGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsGatewayTimeoutError{}

func (e *IncidentsGetIncidentEventsGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsServiceUnavailableError - Service unavailable.
type IncidentsGetIncidentEventsServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsServiceUnavailableError{}

func (e *IncidentsGetIncidentEventsServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsBadGatewayError - Server error
type IncidentsGetIncidentEventsBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsBadGatewayError{}

func (e *IncidentsGetIncidentEventsBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsInternalServerError - Server error
type IncidentsGetIncidentEventsInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsInternalServerError{}

func (e *IncidentsGetIncidentEventsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsUnprocessableEntityError - Client error
type IncidentsGetIncidentEventsUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsUnprocessableEntityError{}

func (e *IncidentsGetIncidentEventsUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsConflictError - The request conflicts with the current state of the server.
type IncidentsGetIncidentEventsConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsConflictError{}

func (e *IncidentsGetIncidentEventsConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsNotFoundError - The server cannot find the requested resource.
type IncidentsGetIncidentEventsNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsNotFoundError{}

func (e *IncidentsGetIncidentEventsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsForbiddenError - Access is forbidden.
type IncidentsGetIncidentEventsForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsForbiddenError{}

func (e *IncidentsGetIncidentEventsForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsPaymentRequiredError - Client error
type IncidentsGetIncidentEventsPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsPaymentRequiredError{}

func (e *IncidentsGetIncidentEventsPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsUnauthorizedError - Access is unauthorized.
type IncidentsGetIncidentEventsUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsUnauthorizedError{}

func (e *IncidentsGetIncidentEventsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentEventsBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsGetIncidentEventsBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentEventsBadRequestError{}

func (e *IncidentsGetIncidentEventsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
