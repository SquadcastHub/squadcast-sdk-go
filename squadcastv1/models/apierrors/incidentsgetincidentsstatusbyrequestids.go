// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IncidentsGetIncidentsStatusByRequestidsGatewayTimeoutError - Server error
type IncidentsGetIncidentsStatusByRequestidsGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsGatewayTimeoutError{}

func (e *IncidentsGetIncidentsStatusByRequestidsGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsServiceUnavailableError - Service unavailable.
type IncidentsGetIncidentsStatusByRequestidsServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsServiceUnavailableError{}

func (e *IncidentsGetIncidentsStatusByRequestidsServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsBadGatewayError - Server error
type IncidentsGetIncidentsStatusByRequestidsBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsBadGatewayError{}

func (e *IncidentsGetIncidentsStatusByRequestidsBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsInternalServerError - Server error
type IncidentsGetIncidentsStatusByRequestidsInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsInternalServerError{}

func (e *IncidentsGetIncidentsStatusByRequestidsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsUnprocessableEntityError - Client error
type IncidentsGetIncidentsStatusByRequestidsUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsUnprocessableEntityError{}

func (e *IncidentsGetIncidentsStatusByRequestidsUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsConflictError - The request conflicts with the current state of the server.
type IncidentsGetIncidentsStatusByRequestidsConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsConflictError{}

func (e *IncidentsGetIncidentsStatusByRequestidsConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsNotFoundError - The server cannot find the requested resource.
type IncidentsGetIncidentsStatusByRequestidsNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsNotFoundError{}

func (e *IncidentsGetIncidentsStatusByRequestidsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsForbiddenError - Access is forbidden.
type IncidentsGetIncidentsStatusByRequestidsForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsForbiddenError{}

func (e *IncidentsGetIncidentsStatusByRequestidsForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsPaymentRequiredError - Client error
type IncidentsGetIncidentsStatusByRequestidsPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsPaymentRequiredError{}

func (e *IncidentsGetIncidentsStatusByRequestidsPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsUnauthorizedError - Access is unauthorized.
type IncidentsGetIncidentsStatusByRequestidsUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsUnauthorizedError{}

func (e *IncidentsGetIncidentsStatusByRequestidsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsGetIncidentsStatusByRequestidsBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsGetIncidentsStatusByRequestidsBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsGetIncidentsStatusByRequestidsBadRequestError{}

func (e *IncidentsGetIncidentsStatusByRequestidsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
