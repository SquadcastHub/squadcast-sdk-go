// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// SuppressionRulesCreateOrUpdateSuppressionRulesGatewayTimeoutError - Server error
type SuppressionRulesCreateOrUpdateSuppressionRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesGatewayTimeoutError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesServiceUnavailableError - Service unavailable.
type SuppressionRulesCreateOrUpdateSuppressionRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesServiceUnavailableError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesBadGatewayError - Server error
type SuppressionRulesCreateOrUpdateSuppressionRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesBadGatewayError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesInternalServerError - Server error
type SuppressionRulesCreateOrUpdateSuppressionRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesInternalServerError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesUnprocessableEntityError - Client error
type SuppressionRulesCreateOrUpdateSuppressionRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesUnprocessableEntityError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesConflictError - The request conflicts with the current state of the server.
type SuppressionRulesCreateOrUpdateSuppressionRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesConflictError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesNotFoundError - The server cannot find the requested resource.
type SuppressionRulesCreateOrUpdateSuppressionRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesNotFoundError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesForbiddenError - Access is forbidden.
type SuppressionRulesCreateOrUpdateSuppressionRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesForbiddenError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesPaymentRequiredError - Client error
type SuppressionRulesCreateOrUpdateSuppressionRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesPaymentRequiredError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesUnauthorizedError - Access is unauthorized.
type SuppressionRulesCreateOrUpdateSuppressionRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesUnauthorizedError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SuppressionRulesCreateOrUpdateSuppressionRulesBadRequestError - The server could not understand the request due to invalid syntax.
type SuppressionRulesCreateOrUpdateSuppressionRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SuppressionRulesCreateOrUpdateSuppressionRulesBadRequestError{}

func (e *SuppressionRulesCreateOrUpdateSuppressionRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
