// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IssuesGetIssueByIDGatewayTimeoutError - Server error
type IssuesGetIssueByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDGatewayTimeoutError{}

func (e *IssuesGetIssueByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDServiceUnavailableError - Service unavailable.
type IssuesGetIssueByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDServiceUnavailableError{}

func (e *IssuesGetIssueByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDBadGatewayError - Server error
type IssuesGetIssueByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDBadGatewayError{}

func (e *IssuesGetIssueByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDInternalServerError - Server error
type IssuesGetIssueByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDInternalServerError{}

func (e *IssuesGetIssueByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDUnprocessableEntityError - Client error
type IssuesGetIssueByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDUnprocessableEntityError{}

func (e *IssuesGetIssueByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDConflictError - The request conflicts with the current state of the server.
type IssuesGetIssueByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDConflictError{}

func (e *IssuesGetIssueByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDNotFoundError - The server cannot find the requested resource.
type IssuesGetIssueByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDNotFoundError{}

func (e *IssuesGetIssueByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDForbiddenError - Access is forbidden.
type IssuesGetIssueByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDForbiddenError{}

func (e *IssuesGetIssueByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDPaymentRequiredError - Client error
type IssuesGetIssueByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDPaymentRequiredError{}

func (e *IssuesGetIssueByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDUnauthorizedError - Access is unauthorized.
type IssuesGetIssueByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDUnauthorizedError{}

func (e *IssuesGetIssueByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesGetIssueByIDBadRequestError - The server could not understand the request due to invalid syntax.
type IssuesGetIssueByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesGetIssueByIDBadRequestError{}

func (e *IssuesGetIssueByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
