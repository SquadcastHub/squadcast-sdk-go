// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IssuesCreateIssueGatewayTimeoutError - Server error
type IssuesCreateIssueGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueGatewayTimeoutError{}

func (e *IssuesCreateIssueGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueServiceUnavailableError - Service unavailable.
type IssuesCreateIssueServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueServiceUnavailableError{}

func (e *IssuesCreateIssueServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueBadGatewayError - Server error
type IssuesCreateIssueBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueBadGatewayError{}

func (e *IssuesCreateIssueBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueInternalServerError - Server error
type IssuesCreateIssueInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueInternalServerError{}

func (e *IssuesCreateIssueInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueUnprocessableEntityError - Client error
type IssuesCreateIssueUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueUnprocessableEntityError{}

func (e *IssuesCreateIssueUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueConflictError - The request conflicts with the current state of the server.
type IssuesCreateIssueConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueConflictError{}

func (e *IssuesCreateIssueConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueNotFoundError - The server cannot find the requested resource.
type IssuesCreateIssueNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueNotFoundError{}

func (e *IssuesCreateIssueNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueForbiddenError - Access is forbidden.
type IssuesCreateIssueForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueForbiddenError{}

func (e *IssuesCreateIssueForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssuePaymentRequiredError - Client error
type IssuesCreateIssuePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssuePaymentRequiredError{}

func (e *IssuesCreateIssuePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueUnauthorizedError - Access is unauthorized.
type IssuesCreateIssueUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueUnauthorizedError{}

func (e *IssuesCreateIssueUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesCreateIssueBadRequestError - The server could not understand the request due to invalid syntax.
type IssuesCreateIssueBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesCreateIssueBadRequestError{}

func (e *IssuesCreateIssueBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
