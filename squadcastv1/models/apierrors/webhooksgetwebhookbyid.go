// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// WebhooksGetWebhookByIDGatewayTimeoutError - Server error
type WebhooksGetWebhookByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDGatewayTimeoutError{}

func (e *WebhooksGetWebhookByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDServiceUnavailableError - Service unavailable.
type WebhooksGetWebhookByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDServiceUnavailableError{}

func (e *WebhooksGetWebhookByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDBadGatewayError - Server error
type WebhooksGetWebhookByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDBadGatewayError{}

func (e *WebhooksGetWebhookByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDInternalServerError - Server error
type WebhooksGetWebhookByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDInternalServerError{}

func (e *WebhooksGetWebhookByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDUnprocessableEntityError - Client error
type WebhooksGetWebhookByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDUnprocessableEntityError{}

func (e *WebhooksGetWebhookByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDConflictError - The request conflicts with the current state of the server.
type WebhooksGetWebhookByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDConflictError{}

func (e *WebhooksGetWebhookByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDNotFoundError - The server cannot find the requested resource.
type WebhooksGetWebhookByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDNotFoundError{}

func (e *WebhooksGetWebhookByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDForbiddenError - Access is forbidden.
type WebhooksGetWebhookByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDForbiddenError{}

func (e *WebhooksGetWebhookByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDPaymentRequiredError - Client error
type WebhooksGetWebhookByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDPaymentRequiredError{}

func (e *WebhooksGetWebhookByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDUnauthorizedError - Access is unauthorized.
type WebhooksGetWebhookByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDUnauthorizedError{}

func (e *WebhooksGetWebhookByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// WebhooksGetWebhookByIDBadRequestError - The server could not understand the request due to invalid syntax.
type WebhooksGetWebhookByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &WebhooksGetWebhookByIDBadRequestError{}

func (e *WebhooksGetWebhookByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
