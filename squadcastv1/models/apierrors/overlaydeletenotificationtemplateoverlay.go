// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// OverlayDeleteNotificationTemplateOverlayGatewayTimeoutError - Server error
type OverlayDeleteNotificationTemplateOverlayGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayGatewayTimeoutError{}

func (e *OverlayDeleteNotificationTemplateOverlayGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayServiceUnavailableError - Service unavailable.
type OverlayDeleteNotificationTemplateOverlayServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayServiceUnavailableError{}

func (e *OverlayDeleteNotificationTemplateOverlayServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayBadGatewayError - Server error
type OverlayDeleteNotificationTemplateOverlayBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayBadGatewayError{}

func (e *OverlayDeleteNotificationTemplateOverlayBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayInternalServerError - Server error
type OverlayDeleteNotificationTemplateOverlayInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayInternalServerError{}

func (e *OverlayDeleteNotificationTemplateOverlayInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayUnprocessableEntityError - Client error
type OverlayDeleteNotificationTemplateOverlayUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayUnprocessableEntityError{}

func (e *OverlayDeleteNotificationTemplateOverlayUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayConflictError - The request conflicts with the current state of the server.
type OverlayDeleteNotificationTemplateOverlayConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayConflictError{}

func (e *OverlayDeleteNotificationTemplateOverlayConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayNotFoundError - The server cannot find the requested resource.
type OverlayDeleteNotificationTemplateOverlayNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayNotFoundError{}

func (e *OverlayDeleteNotificationTemplateOverlayNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayForbiddenError - Access is forbidden.
type OverlayDeleteNotificationTemplateOverlayForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayForbiddenError{}

func (e *OverlayDeleteNotificationTemplateOverlayForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayPaymentRequiredError - Client error
type OverlayDeleteNotificationTemplateOverlayPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayPaymentRequiredError{}

func (e *OverlayDeleteNotificationTemplateOverlayPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayUnauthorizedError - Access is unauthorized.
type OverlayDeleteNotificationTemplateOverlayUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayUnauthorizedError{}

func (e *OverlayDeleteNotificationTemplateOverlayUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayDeleteNotificationTemplateOverlayBadRequestError - The server could not understand the request due to invalid syntax.
type OverlayDeleteNotificationTemplateOverlayBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayDeleteNotificationTemplateOverlayBadRequestError{}

func (e *OverlayDeleteNotificationTemplateOverlayBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
