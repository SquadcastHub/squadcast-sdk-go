// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// EscalationPoliciesUpdateEscalationPolicyGatewayTimeoutError - Server error
type EscalationPoliciesUpdateEscalationPolicyGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyGatewayTimeoutError{}

func (e *EscalationPoliciesUpdateEscalationPolicyGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyServiceUnavailableError - Service unavailable.
type EscalationPoliciesUpdateEscalationPolicyServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyServiceUnavailableError{}

func (e *EscalationPoliciesUpdateEscalationPolicyServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyBadGatewayError - Server error
type EscalationPoliciesUpdateEscalationPolicyBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyBadGatewayError{}

func (e *EscalationPoliciesUpdateEscalationPolicyBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyInternalServerError - Server error
type EscalationPoliciesUpdateEscalationPolicyInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyInternalServerError{}

func (e *EscalationPoliciesUpdateEscalationPolicyInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyUnprocessableEntityError - Client error
type EscalationPoliciesUpdateEscalationPolicyUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyUnprocessableEntityError{}

func (e *EscalationPoliciesUpdateEscalationPolicyUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyConflictError - The request conflicts with the current state of the server.
type EscalationPoliciesUpdateEscalationPolicyConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyConflictError{}

func (e *EscalationPoliciesUpdateEscalationPolicyConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyNotFoundError - The server cannot find the requested resource.
type EscalationPoliciesUpdateEscalationPolicyNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyNotFoundError{}

func (e *EscalationPoliciesUpdateEscalationPolicyNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyForbiddenError - Access is forbidden.
type EscalationPoliciesUpdateEscalationPolicyForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyForbiddenError{}

func (e *EscalationPoliciesUpdateEscalationPolicyForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyPaymentRequiredError - Client error
type EscalationPoliciesUpdateEscalationPolicyPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyPaymentRequiredError{}

func (e *EscalationPoliciesUpdateEscalationPolicyPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyUnauthorizedError - Access is unauthorized.
type EscalationPoliciesUpdateEscalationPolicyUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyUnauthorizedError{}

func (e *EscalationPoliciesUpdateEscalationPolicyUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesUpdateEscalationPolicyBadRequestError - The server could not understand the request due to invalid syntax.
type EscalationPoliciesUpdateEscalationPolicyBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesUpdateEscalationPolicyBadRequestError{}

func (e *EscalationPoliciesUpdateEscalationPolicyBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
