// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IncidentsBulkResolveIncidentsGatewayTimeoutError - Server error
type IncidentsBulkResolveIncidentsGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsGatewayTimeoutError{}

func (e *IncidentsBulkResolveIncidentsGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsServiceUnavailableError - Service unavailable.
type IncidentsBulkResolveIncidentsServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsServiceUnavailableError{}

func (e *IncidentsBulkResolveIncidentsServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsBadGatewayError - Server error
type IncidentsBulkResolveIncidentsBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsBadGatewayError{}

func (e *IncidentsBulkResolveIncidentsBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsInternalServerError - Server error
type IncidentsBulkResolveIncidentsInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsInternalServerError{}

func (e *IncidentsBulkResolveIncidentsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsUnprocessableEntityError - Client error
type IncidentsBulkResolveIncidentsUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsUnprocessableEntityError{}

func (e *IncidentsBulkResolveIncidentsUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsConflictError - The request conflicts with the current state of the server.
type IncidentsBulkResolveIncidentsConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsConflictError{}

func (e *IncidentsBulkResolveIncidentsConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsNotFoundError - The server cannot find the requested resource.
type IncidentsBulkResolveIncidentsNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsNotFoundError{}

func (e *IncidentsBulkResolveIncidentsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsForbiddenError - Access is forbidden.
type IncidentsBulkResolveIncidentsForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsForbiddenError{}

func (e *IncidentsBulkResolveIncidentsForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsPaymentRequiredError - Client error
type IncidentsBulkResolveIncidentsPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsPaymentRequiredError{}

func (e *IncidentsBulkResolveIncidentsPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsUnauthorizedError - Access is unauthorized.
type IncidentsBulkResolveIncidentsUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsUnauthorizedError{}

func (e *IncidentsBulkResolveIncidentsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IncidentsBulkResolveIncidentsBadRequestError - The server could not understand the request due to invalid syntax.
type IncidentsBulkResolveIncidentsBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IncidentsBulkResolveIncidentsBadRequestError{}

func (e *IncidentsBulkResolveIncidentsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
