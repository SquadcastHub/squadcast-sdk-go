// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// ComponentGroupsDeleteComponentGroupByIDGatewayTimeoutError - Server error
type ComponentGroupsDeleteComponentGroupByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDGatewayTimeoutError{}

func (e *ComponentGroupsDeleteComponentGroupByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDServiceUnavailableError - Service unavailable.
type ComponentGroupsDeleteComponentGroupByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDServiceUnavailableError{}

func (e *ComponentGroupsDeleteComponentGroupByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDBadGatewayError - Server error
type ComponentGroupsDeleteComponentGroupByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDBadGatewayError{}

func (e *ComponentGroupsDeleteComponentGroupByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDInternalServerError - Server error
type ComponentGroupsDeleteComponentGroupByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDInternalServerError{}

func (e *ComponentGroupsDeleteComponentGroupByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDUnprocessableEntityError - Client error
type ComponentGroupsDeleteComponentGroupByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDUnprocessableEntityError{}

func (e *ComponentGroupsDeleteComponentGroupByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDConflictError - The request conflicts with the current state of the server.
type ComponentGroupsDeleteComponentGroupByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDConflictError{}

func (e *ComponentGroupsDeleteComponentGroupByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDNotFoundError - The server cannot find the requested resource.
type ComponentGroupsDeleteComponentGroupByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDNotFoundError{}

func (e *ComponentGroupsDeleteComponentGroupByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDForbiddenError - Access is forbidden.
type ComponentGroupsDeleteComponentGroupByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDForbiddenError{}

func (e *ComponentGroupsDeleteComponentGroupByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDPaymentRequiredError - Client error
type ComponentGroupsDeleteComponentGroupByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDPaymentRequiredError{}

func (e *ComponentGroupsDeleteComponentGroupByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDUnauthorizedError - Access is unauthorized.
type ComponentGroupsDeleteComponentGroupByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDUnauthorizedError{}

func (e *ComponentGroupsDeleteComponentGroupByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentGroupsDeleteComponentGroupByIDBadRequestError - The server could not understand the request due to invalid syntax.
type ComponentGroupsDeleteComponentGroupByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentGroupsDeleteComponentGroupByIDBadRequestError{}

func (e *ComponentGroupsDeleteComponentGroupByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
