// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// OverlayGetOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError - Server error
type OverlayGetOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError - Service unavailable.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceBadGatewayError - Server error
type OverlayGetOptinForKeyBasedDeduplicationForAServiceBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceBadGatewayError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceInternalServerError - Server error
type OverlayGetOptinForKeyBasedDeduplicationForAServiceInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceInternalServerError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError - Client error
type OverlayGetOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceConflictError - The request conflicts with the current state of the server.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceConflictError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceNotFoundError - The server cannot find the requested resource.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceNotFoundError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceForbiddenError - Access is forbidden.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceForbiddenError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServicePaymentRequiredError - Client error
type OverlayGetOptinForKeyBasedDeduplicationForAServicePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServicePaymentRequiredError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServicePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceUnauthorizedError - Access is unauthorized.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceUnauthorizedError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceBadRequestError - The server could not understand the request due to invalid syntax.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetOptinForKeyBasedDeduplicationForAServiceBadRequestError{}

func (e *OverlayGetOptinForKeyBasedDeduplicationForAServiceBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
