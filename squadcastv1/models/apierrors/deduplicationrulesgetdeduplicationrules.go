// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// DeduplicationRulesGetDeduplicationRulesGatewayTimeoutError - Server error
type DeduplicationRulesGetDeduplicationRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesGatewayTimeoutError{}

func (e *DeduplicationRulesGetDeduplicationRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesServiceUnavailableError - Service unavailable.
type DeduplicationRulesGetDeduplicationRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesServiceUnavailableError{}

func (e *DeduplicationRulesGetDeduplicationRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesBadGatewayError - Server error
type DeduplicationRulesGetDeduplicationRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesBadGatewayError{}

func (e *DeduplicationRulesGetDeduplicationRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesInternalServerError - Server error
type DeduplicationRulesGetDeduplicationRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesInternalServerError{}

func (e *DeduplicationRulesGetDeduplicationRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesUnprocessableEntityError - Client error
type DeduplicationRulesGetDeduplicationRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesUnprocessableEntityError{}

func (e *DeduplicationRulesGetDeduplicationRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesConflictError - The request conflicts with the current state of the server.
type DeduplicationRulesGetDeduplicationRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesConflictError{}

func (e *DeduplicationRulesGetDeduplicationRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesNotFoundError - The server cannot find the requested resource.
type DeduplicationRulesGetDeduplicationRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesNotFoundError{}

func (e *DeduplicationRulesGetDeduplicationRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesForbiddenError - Access is forbidden.
type DeduplicationRulesGetDeduplicationRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesForbiddenError{}

func (e *DeduplicationRulesGetDeduplicationRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesPaymentRequiredError - Client error
type DeduplicationRulesGetDeduplicationRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesPaymentRequiredError{}

func (e *DeduplicationRulesGetDeduplicationRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesUnauthorizedError - Access is unauthorized.
type DeduplicationRulesGetDeduplicationRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesUnauthorizedError{}

func (e *DeduplicationRulesGetDeduplicationRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesGetDeduplicationRulesBadRequestError - The server could not understand the request due to invalid syntax.
type DeduplicationRulesGetDeduplicationRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesGetDeduplicationRulesBadRequestError{}

func (e *DeduplicationRulesGetDeduplicationRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
