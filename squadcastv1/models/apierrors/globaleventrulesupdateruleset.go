// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// GlobalEventRulesUpdateRulesetGatewayTimeoutError - Server error
type GlobalEventRulesUpdateRulesetGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetGatewayTimeoutError{}

func (e *GlobalEventRulesUpdateRulesetGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetServiceUnavailableError - Service unavailable.
type GlobalEventRulesUpdateRulesetServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetServiceUnavailableError{}

func (e *GlobalEventRulesUpdateRulesetServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetBadGatewayError - Server error
type GlobalEventRulesUpdateRulesetBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetBadGatewayError{}

func (e *GlobalEventRulesUpdateRulesetBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetInternalServerError - Server error
type GlobalEventRulesUpdateRulesetInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetInternalServerError{}

func (e *GlobalEventRulesUpdateRulesetInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetUnprocessableEntityError - Client error
type GlobalEventRulesUpdateRulesetUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetUnprocessableEntityError{}

func (e *GlobalEventRulesUpdateRulesetUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesUpdateRulesetConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetConflictError{}

func (e *GlobalEventRulesUpdateRulesetConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesUpdateRulesetNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetNotFoundError{}

func (e *GlobalEventRulesUpdateRulesetNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetForbiddenError - Access is forbidden.
type GlobalEventRulesUpdateRulesetForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetForbiddenError{}

func (e *GlobalEventRulesUpdateRulesetForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetPaymentRequiredError - Client error
type GlobalEventRulesUpdateRulesetPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetPaymentRequiredError{}

func (e *GlobalEventRulesUpdateRulesetPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetUnauthorizedError - Access is unauthorized.
type GlobalEventRulesUpdateRulesetUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetUnauthorizedError{}

func (e *GlobalEventRulesUpdateRulesetUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesUpdateRulesetBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesUpdateRulesetBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesUpdateRulesetBadRequestError{}

func (e *GlobalEventRulesUpdateRulesetBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
