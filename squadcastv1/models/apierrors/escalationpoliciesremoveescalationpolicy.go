// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// EscalationPoliciesRemoveEscalationPolicyGatewayTimeoutError - Server error
type EscalationPoliciesRemoveEscalationPolicyGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyGatewayTimeoutError{}

func (e *EscalationPoliciesRemoveEscalationPolicyGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyServiceUnavailableError - Service unavailable.
type EscalationPoliciesRemoveEscalationPolicyServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyServiceUnavailableError{}

func (e *EscalationPoliciesRemoveEscalationPolicyServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyBadGatewayError - Server error
type EscalationPoliciesRemoveEscalationPolicyBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyBadGatewayError{}

func (e *EscalationPoliciesRemoveEscalationPolicyBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyInternalServerError - Server error
type EscalationPoliciesRemoveEscalationPolicyInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyInternalServerError{}

func (e *EscalationPoliciesRemoveEscalationPolicyInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyUnprocessableEntityError - Client error
type EscalationPoliciesRemoveEscalationPolicyUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyUnprocessableEntityError{}

func (e *EscalationPoliciesRemoveEscalationPolicyUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyConflictError - The request conflicts with the current state of the server.
type EscalationPoliciesRemoveEscalationPolicyConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyConflictError{}

func (e *EscalationPoliciesRemoveEscalationPolicyConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyNotFoundError - The server cannot find the requested resource.
type EscalationPoliciesRemoveEscalationPolicyNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyNotFoundError{}

func (e *EscalationPoliciesRemoveEscalationPolicyNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyForbiddenError - Access is forbidden.
type EscalationPoliciesRemoveEscalationPolicyForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyForbiddenError{}

func (e *EscalationPoliciesRemoveEscalationPolicyForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyPaymentRequiredError - Client error
type EscalationPoliciesRemoveEscalationPolicyPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyPaymentRequiredError{}

func (e *EscalationPoliciesRemoveEscalationPolicyPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyUnauthorizedError - Access is unauthorized.
type EscalationPoliciesRemoveEscalationPolicyUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyUnauthorizedError{}

func (e *EscalationPoliciesRemoveEscalationPolicyUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesRemoveEscalationPolicyBadRequestError - The server could not understand the request due to invalid syntax.
type EscalationPoliciesRemoveEscalationPolicyBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesRemoveEscalationPolicyBadRequestError{}

func (e *EscalationPoliciesRemoveEscalationPolicyBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
