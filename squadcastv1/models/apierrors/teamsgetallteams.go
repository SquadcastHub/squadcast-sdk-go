// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// TeamsGetAllTeamsGatewayTimeoutError - Server error
type TeamsGetAllTeamsGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsGatewayTimeoutError{}

func (e *TeamsGetAllTeamsGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsServiceUnavailableError - Service unavailable.
type TeamsGetAllTeamsServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsServiceUnavailableError{}

func (e *TeamsGetAllTeamsServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsBadGatewayError - Server error
type TeamsGetAllTeamsBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsBadGatewayError{}

func (e *TeamsGetAllTeamsBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsInternalServerError - Server error
type TeamsGetAllTeamsInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsInternalServerError{}

func (e *TeamsGetAllTeamsInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsUnprocessableEntityError - Client error
type TeamsGetAllTeamsUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsUnprocessableEntityError{}

func (e *TeamsGetAllTeamsUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsConflictError - The request conflicts with the current state of the server.
type TeamsGetAllTeamsConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsConflictError{}

func (e *TeamsGetAllTeamsConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsNotFoundError - The server cannot find the requested resource.
type TeamsGetAllTeamsNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsNotFoundError{}

func (e *TeamsGetAllTeamsNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsForbiddenError - Access is forbidden.
type TeamsGetAllTeamsForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsForbiddenError{}

func (e *TeamsGetAllTeamsForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsPaymentRequiredError - Client error
type TeamsGetAllTeamsPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsPaymentRequiredError{}

func (e *TeamsGetAllTeamsPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsUnauthorizedError - Access is unauthorized.
type TeamsGetAllTeamsUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsUnauthorizedError{}

func (e *TeamsGetAllTeamsUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TeamsGetAllTeamsBadRequestError - The server could not understand the request due to invalid syntax.
type TeamsGetAllTeamsBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TeamsGetAllTeamsBadRequestError{}

func (e *TeamsGetAllTeamsBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
