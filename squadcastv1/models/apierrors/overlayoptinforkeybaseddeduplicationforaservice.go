// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// OverlayOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError - Server error
type OverlayOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError - Service unavailable.
type OverlayOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceBadGatewayError - Server error
type OverlayOptinForKeyBasedDeduplicationForAServiceBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceBadGatewayError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceInternalServerError - Server error
type OverlayOptinForKeyBasedDeduplicationForAServiceInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceInternalServerError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError - Client error
type OverlayOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceConflictError - The request conflicts with the current state of the server.
type OverlayOptinForKeyBasedDeduplicationForAServiceConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceConflictError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceNotFoundError - The server cannot find the requested resource.
type OverlayOptinForKeyBasedDeduplicationForAServiceNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceNotFoundError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceForbiddenError - Access is forbidden.
type OverlayOptinForKeyBasedDeduplicationForAServiceForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceForbiddenError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServicePaymentRequiredError - Client error
type OverlayOptinForKeyBasedDeduplicationForAServicePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServicePaymentRequiredError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServicePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceUnauthorizedError - Access is unauthorized.
type OverlayOptinForKeyBasedDeduplicationForAServiceUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceUnauthorizedError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayOptinForKeyBasedDeduplicationForAServiceBadRequestError - The server could not understand the request due to invalid syntax.
type OverlayOptinForKeyBasedDeduplicationForAServiceBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayOptinForKeyBasedDeduplicationForAServiceBadRequestError{}

func (e *OverlayOptinForKeyBasedDeduplicationForAServiceBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
