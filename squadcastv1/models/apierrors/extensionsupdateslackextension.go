// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// ExtensionsUpdateSlackExtensionGatewayTimeoutError - Server error
type ExtensionsUpdateSlackExtensionGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionGatewayTimeoutError{}

func (e *ExtensionsUpdateSlackExtensionGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionServiceUnavailableError - Service unavailable.
type ExtensionsUpdateSlackExtensionServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionServiceUnavailableError{}

func (e *ExtensionsUpdateSlackExtensionServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionBadGatewayError - Server error
type ExtensionsUpdateSlackExtensionBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionBadGatewayError{}

func (e *ExtensionsUpdateSlackExtensionBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionInternalServerError - Server error
type ExtensionsUpdateSlackExtensionInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionInternalServerError{}

func (e *ExtensionsUpdateSlackExtensionInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionUnprocessableEntityError - Client error
type ExtensionsUpdateSlackExtensionUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionUnprocessableEntityError{}

func (e *ExtensionsUpdateSlackExtensionUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionConflictError - The request conflicts with the current state of the server.
type ExtensionsUpdateSlackExtensionConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionConflictError{}

func (e *ExtensionsUpdateSlackExtensionConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionNotFoundError - The server cannot find the requested resource.
type ExtensionsUpdateSlackExtensionNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionNotFoundError{}

func (e *ExtensionsUpdateSlackExtensionNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionForbiddenError - Access is forbidden.
type ExtensionsUpdateSlackExtensionForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionForbiddenError{}

func (e *ExtensionsUpdateSlackExtensionForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionPaymentRequiredError - Client error
type ExtensionsUpdateSlackExtensionPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionPaymentRequiredError{}

func (e *ExtensionsUpdateSlackExtensionPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionUnauthorizedError - Access is unauthorized.
type ExtensionsUpdateSlackExtensionUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionUnauthorizedError{}

func (e *ExtensionsUpdateSlackExtensionUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ExtensionsUpdateSlackExtensionBadRequestError - The server could not understand the request due to invalid syntax.
type ExtensionsUpdateSlackExtensionBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ExtensionsUpdateSlackExtensionBadRequestError{}

func (e *ExtensionsUpdateSlackExtensionBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
