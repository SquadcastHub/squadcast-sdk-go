// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// TaggingRulesGetTaggingRulesGatewayTimeoutError - Server error
type TaggingRulesGetTaggingRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesGatewayTimeoutError{}

func (e *TaggingRulesGetTaggingRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesServiceUnavailableError - Service unavailable.
type TaggingRulesGetTaggingRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesServiceUnavailableError{}

func (e *TaggingRulesGetTaggingRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesBadGatewayError - Server error
type TaggingRulesGetTaggingRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesBadGatewayError{}

func (e *TaggingRulesGetTaggingRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesInternalServerError - Server error
type TaggingRulesGetTaggingRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesInternalServerError{}

func (e *TaggingRulesGetTaggingRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesUnprocessableEntityError - Client error
type TaggingRulesGetTaggingRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesUnprocessableEntityError{}

func (e *TaggingRulesGetTaggingRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesConflictError - The request conflicts with the current state of the server.
type TaggingRulesGetTaggingRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesConflictError{}

func (e *TaggingRulesGetTaggingRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesNotFoundError - The server cannot find the requested resource.
type TaggingRulesGetTaggingRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesNotFoundError{}

func (e *TaggingRulesGetTaggingRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesForbiddenError - Access is forbidden.
type TaggingRulesGetTaggingRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesForbiddenError{}

func (e *TaggingRulesGetTaggingRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesPaymentRequiredError - Client error
type TaggingRulesGetTaggingRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesPaymentRequiredError{}

func (e *TaggingRulesGetTaggingRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesUnauthorizedError - Access is unauthorized.
type TaggingRulesGetTaggingRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesUnauthorizedError{}

func (e *TaggingRulesGetTaggingRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// TaggingRulesGetTaggingRulesBadRequestError - The server could not understand the request due to invalid syntax.
type TaggingRulesGetTaggingRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &TaggingRulesGetTaggingRulesBadRequestError{}

func (e *TaggingRulesGetTaggingRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
