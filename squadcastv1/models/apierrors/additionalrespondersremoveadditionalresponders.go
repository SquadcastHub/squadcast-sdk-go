// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// AdditionalRespondersRemoveAdditionalRespondersGatewayTimeoutError - Server error
type AdditionalRespondersRemoveAdditionalRespondersGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersGatewayTimeoutError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersServiceUnavailableError - Service unavailable.
type AdditionalRespondersRemoveAdditionalRespondersServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersServiceUnavailableError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersBadGatewayError - Server error
type AdditionalRespondersRemoveAdditionalRespondersBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersBadGatewayError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersInternalServerError - Server error
type AdditionalRespondersRemoveAdditionalRespondersInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersInternalServerError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersUnprocessableEntityError - Client error
type AdditionalRespondersRemoveAdditionalRespondersUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersUnprocessableEntityError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersConflictError - The request conflicts with the current state of the server.
type AdditionalRespondersRemoveAdditionalRespondersConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersConflictError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersNotFoundError - The server cannot find the requested resource.
type AdditionalRespondersRemoveAdditionalRespondersNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersNotFoundError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersForbiddenError - Access is forbidden.
type AdditionalRespondersRemoveAdditionalRespondersForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersForbiddenError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersPaymentRequiredError - Client error
type AdditionalRespondersRemoveAdditionalRespondersPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersPaymentRequiredError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersUnauthorizedError - Access is unauthorized.
type AdditionalRespondersRemoveAdditionalRespondersUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersUnauthorizedError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersRemoveAdditionalRespondersBadRequestError - The server could not understand the request due to invalid syntax.
type AdditionalRespondersRemoveAdditionalRespondersBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersRemoveAdditionalRespondersBadRequestError{}

func (e *AdditionalRespondersRemoveAdditionalRespondersBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
