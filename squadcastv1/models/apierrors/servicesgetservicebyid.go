// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// ServicesGetServiceByIDGatewayTimeoutError - Server error
type ServicesGetServiceByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDGatewayTimeoutError{}

func (e *ServicesGetServiceByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDServiceUnavailableError - Service unavailable.
type ServicesGetServiceByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDServiceUnavailableError{}

func (e *ServicesGetServiceByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDBadGatewayError - Server error
type ServicesGetServiceByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDBadGatewayError{}

func (e *ServicesGetServiceByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDInternalServerError - Server error
type ServicesGetServiceByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDInternalServerError{}

func (e *ServicesGetServiceByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDUnprocessableEntityError - Client error
type ServicesGetServiceByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDUnprocessableEntityError{}

func (e *ServicesGetServiceByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDConflictError - The request conflicts with the current state of the server.
type ServicesGetServiceByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDConflictError{}

func (e *ServicesGetServiceByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDNotFoundError - The server cannot find the requested resource.
type ServicesGetServiceByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDNotFoundError{}

func (e *ServicesGetServiceByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDForbiddenError - Access is forbidden.
type ServicesGetServiceByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDForbiddenError{}

func (e *ServicesGetServiceByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDPaymentRequiredError - Client error
type ServicesGetServiceByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDPaymentRequiredError{}

func (e *ServicesGetServiceByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDUnauthorizedError - Access is unauthorized.
type ServicesGetServiceByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDUnauthorizedError{}

func (e *ServicesGetServiceByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServiceByIDBadRequestError - The server could not understand the request due to invalid syntax.
type ServicesGetServiceByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServiceByIDBadRequestError{}

func (e *ServicesGetServiceByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
