// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// CommunicationCardsUpdateCommunicationCardGatewayTimeoutError - Server error
type CommunicationCardsUpdateCommunicationCardGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardGatewayTimeoutError{}

func (e *CommunicationCardsUpdateCommunicationCardGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardServiceUnavailableError - Service unavailable.
type CommunicationCardsUpdateCommunicationCardServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardServiceUnavailableError{}

func (e *CommunicationCardsUpdateCommunicationCardServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardBadGatewayError - Server error
type CommunicationCardsUpdateCommunicationCardBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardBadGatewayError{}

func (e *CommunicationCardsUpdateCommunicationCardBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardInternalServerError - Server error
type CommunicationCardsUpdateCommunicationCardInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardInternalServerError{}

func (e *CommunicationCardsUpdateCommunicationCardInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardUnprocessableEntityError - Client error
type CommunicationCardsUpdateCommunicationCardUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardUnprocessableEntityError{}

func (e *CommunicationCardsUpdateCommunicationCardUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardConflictError - The request conflicts with the current state of the server.
type CommunicationCardsUpdateCommunicationCardConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardConflictError{}

func (e *CommunicationCardsUpdateCommunicationCardConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardNotFoundError - The server cannot find the requested resource.
type CommunicationCardsUpdateCommunicationCardNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardNotFoundError{}

func (e *CommunicationCardsUpdateCommunicationCardNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardForbiddenError - Access is forbidden.
type CommunicationCardsUpdateCommunicationCardForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardForbiddenError{}

func (e *CommunicationCardsUpdateCommunicationCardForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardPaymentRequiredError - Client error
type CommunicationCardsUpdateCommunicationCardPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardPaymentRequiredError{}

func (e *CommunicationCardsUpdateCommunicationCardPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardUnauthorizedError - Access is unauthorized.
type CommunicationCardsUpdateCommunicationCardUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardUnauthorizedError{}

func (e *CommunicationCardsUpdateCommunicationCardUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsUpdateCommunicationCardBadRequestError - The server could not understand the request due to invalid syntax.
type CommunicationCardsUpdateCommunicationCardBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsUpdateCommunicationCardBadRequestError{}

func (e *CommunicationCardsUpdateCommunicationCardBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
