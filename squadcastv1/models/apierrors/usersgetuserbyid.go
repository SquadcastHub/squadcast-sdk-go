// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// UsersGetUserByIDGatewayTimeoutError - Server error
type UsersGetUserByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDGatewayTimeoutError{}

func (e *UsersGetUserByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDServiceUnavailableError - Service unavailable.
type UsersGetUserByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDServiceUnavailableError{}

func (e *UsersGetUserByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDBadGatewayError - Server error
type UsersGetUserByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDBadGatewayError{}

func (e *UsersGetUserByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDInternalServerError - Server error
type UsersGetUserByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDInternalServerError{}

func (e *UsersGetUserByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDUnprocessableEntityError - Client error
type UsersGetUserByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDUnprocessableEntityError{}

func (e *UsersGetUserByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDConflictError - The request conflicts with the current state of the server.
type UsersGetUserByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDConflictError{}

func (e *UsersGetUserByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDNotFoundError - The server cannot find the requested resource.
type UsersGetUserByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDNotFoundError{}

func (e *UsersGetUserByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDForbiddenError - Access is forbidden.
type UsersGetUserByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDForbiddenError{}

func (e *UsersGetUserByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDPaymentRequiredError - Client error
type UsersGetUserByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDPaymentRequiredError{}

func (e *UsersGetUserByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDUnauthorizedError - Access is unauthorized.
type UsersGetUserByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDUnauthorizedError{}

func (e *UsersGetUserByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// UsersGetUserByIDBadRequestError - The server could not understand the request due to invalid syntax.
type UsersGetUserByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &UsersGetUserByIDBadRequestError{}

func (e *UsersGetUserByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
