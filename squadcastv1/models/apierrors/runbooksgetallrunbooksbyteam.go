// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// RunbooksGetAllRunbooksByTeamGatewayTimeoutError - Server error
type RunbooksGetAllRunbooksByTeamGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamGatewayTimeoutError{}

func (e *RunbooksGetAllRunbooksByTeamGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamServiceUnavailableError - Service unavailable.
type RunbooksGetAllRunbooksByTeamServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamServiceUnavailableError{}

func (e *RunbooksGetAllRunbooksByTeamServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamBadGatewayError - Server error
type RunbooksGetAllRunbooksByTeamBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamBadGatewayError{}

func (e *RunbooksGetAllRunbooksByTeamBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamInternalServerError - Server error
type RunbooksGetAllRunbooksByTeamInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamInternalServerError{}

func (e *RunbooksGetAllRunbooksByTeamInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamUnprocessableEntityError - Client error
type RunbooksGetAllRunbooksByTeamUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamUnprocessableEntityError{}

func (e *RunbooksGetAllRunbooksByTeamUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamConflictError - The request conflicts with the current state of the server.
type RunbooksGetAllRunbooksByTeamConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamConflictError{}

func (e *RunbooksGetAllRunbooksByTeamConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamNotFoundError - The server cannot find the requested resource.
type RunbooksGetAllRunbooksByTeamNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamNotFoundError{}

func (e *RunbooksGetAllRunbooksByTeamNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamForbiddenError - Access is forbidden.
type RunbooksGetAllRunbooksByTeamForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamForbiddenError{}

func (e *RunbooksGetAllRunbooksByTeamForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamPaymentRequiredError - Client error
type RunbooksGetAllRunbooksByTeamPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamPaymentRequiredError{}

func (e *RunbooksGetAllRunbooksByTeamPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamUnauthorizedError - Access is unauthorized.
type RunbooksGetAllRunbooksByTeamUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamUnauthorizedError{}

func (e *RunbooksGetAllRunbooksByTeamUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// RunbooksGetAllRunbooksByTeamBadRequestError - The server could not understand the request due to invalid syntax.
type RunbooksGetAllRunbooksByTeamBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &RunbooksGetAllRunbooksByTeamBadRequestError{}

func (e *RunbooksGetAllRunbooksByTeamBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
