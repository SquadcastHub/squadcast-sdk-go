// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// ServicesGetServicesByNameGatewayTimeoutError - Server error
type ServicesGetServicesByNameGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameGatewayTimeoutError{}

func (e *ServicesGetServicesByNameGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameServiceUnavailableError - Service unavailable.
type ServicesGetServicesByNameServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameServiceUnavailableError{}

func (e *ServicesGetServicesByNameServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameBadGatewayError - Server error
type ServicesGetServicesByNameBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameBadGatewayError{}

func (e *ServicesGetServicesByNameBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameInternalServerError - Server error
type ServicesGetServicesByNameInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameInternalServerError{}

func (e *ServicesGetServicesByNameInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameUnprocessableEntityError - Client error
type ServicesGetServicesByNameUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameUnprocessableEntityError{}

func (e *ServicesGetServicesByNameUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameConflictError - The request conflicts with the current state of the server.
type ServicesGetServicesByNameConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameConflictError{}

func (e *ServicesGetServicesByNameConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameNotFoundError - The server cannot find the requested resource.
type ServicesGetServicesByNameNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameNotFoundError{}

func (e *ServicesGetServicesByNameNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameForbiddenError - Access is forbidden.
type ServicesGetServicesByNameForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameForbiddenError{}

func (e *ServicesGetServicesByNameForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNamePaymentRequiredError - Client error
type ServicesGetServicesByNamePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNamePaymentRequiredError{}

func (e *ServicesGetServicesByNamePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameUnauthorizedError - Access is unauthorized.
type ServicesGetServicesByNameUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameUnauthorizedError{}

func (e *ServicesGetServicesByNameUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ServicesGetServicesByNameBadRequestError - The server could not understand the request due to invalid syntax.
type ServicesGetServicesByNameBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ServicesGetServicesByNameBadRequestError{}

func (e *ServicesGetServicesByNameBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
