// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// SquadsGetSquadByIDGatewayTimeoutError - Server error
type SquadsGetSquadByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDGatewayTimeoutError{}

func (e *SquadsGetSquadByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDServiceUnavailableError - Service unavailable.
type SquadsGetSquadByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDServiceUnavailableError{}

func (e *SquadsGetSquadByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDBadGatewayError - Server error
type SquadsGetSquadByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDBadGatewayError{}

func (e *SquadsGetSquadByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDInternalServerError - Server error
type SquadsGetSquadByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDInternalServerError{}

func (e *SquadsGetSquadByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDUnprocessableEntityError - Client error
type SquadsGetSquadByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDUnprocessableEntityError{}

func (e *SquadsGetSquadByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDConflictError - The request conflicts with the current state of the server.
type SquadsGetSquadByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDConflictError{}

func (e *SquadsGetSquadByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDNotFoundError - The server cannot find the requested resource.
type SquadsGetSquadByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDNotFoundError{}

func (e *SquadsGetSquadByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDForbiddenError - Access is forbidden.
type SquadsGetSquadByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDForbiddenError{}

func (e *SquadsGetSquadByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDPaymentRequiredError - Client error
type SquadsGetSquadByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDPaymentRequiredError{}

func (e *SquadsGetSquadByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDUnauthorizedError - Access is unauthorized.
type SquadsGetSquadByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDUnauthorizedError{}

func (e *SquadsGetSquadByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// SquadsGetSquadByIDBadRequestError - The server could not understand the request due to invalid syntax.
type SquadsGetSquadByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &SquadsGetSquadByIDBadRequestError{}

func (e *SquadsGetSquadByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
