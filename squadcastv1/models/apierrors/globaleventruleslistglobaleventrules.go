// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// GlobalEventRulesListGlobalEventRulesGatewayTimeoutError - Server error
type GlobalEventRulesListGlobalEventRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesGatewayTimeoutError{}

func (e *GlobalEventRulesListGlobalEventRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesServiceUnavailableError - Service unavailable.
type GlobalEventRulesListGlobalEventRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesServiceUnavailableError{}

func (e *GlobalEventRulesListGlobalEventRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesBadGatewayError - Server error
type GlobalEventRulesListGlobalEventRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesBadGatewayError{}

func (e *GlobalEventRulesListGlobalEventRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesInternalServerError - Server error
type GlobalEventRulesListGlobalEventRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesInternalServerError{}

func (e *GlobalEventRulesListGlobalEventRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesUnprocessableEntityError - Client error
type GlobalEventRulesListGlobalEventRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesUnprocessableEntityError{}

func (e *GlobalEventRulesListGlobalEventRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesListGlobalEventRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesConflictError{}

func (e *GlobalEventRulesListGlobalEventRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesListGlobalEventRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesNotFoundError{}

func (e *GlobalEventRulesListGlobalEventRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesForbiddenError - Access is forbidden.
type GlobalEventRulesListGlobalEventRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesForbiddenError{}

func (e *GlobalEventRulesListGlobalEventRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesPaymentRequiredError - Client error
type GlobalEventRulesListGlobalEventRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesPaymentRequiredError{}

func (e *GlobalEventRulesListGlobalEventRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesUnauthorizedError - Access is unauthorized.
type GlobalEventRulesListGlobalEventRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesUnauthorizedError{}

func (e *GlobalEventRulesListGlobalEventRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesListGlobalEventRulesBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesListGlobalEventRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesListGlobalEventRulesBadRequestError{}

func (e *GlobalEventRulesListGlobalEventRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
