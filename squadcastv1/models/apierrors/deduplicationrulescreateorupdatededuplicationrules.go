// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// DeduplicationRulesCreateOrUpdateDeduplicationRulesGatewayTimeoutError - Server error
type DeduplicationRulesCreateOrUpdateDeduplicationRulesGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesGatewayTimeoutError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesServiceUnavailableError - Service unavailable.
type DeduplicationRulesCreateOrUpdateDeduplicationRulesServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesServiceUnavailableError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesBadGatewayError - Server error
type DeduplicationRulesCreateOrUpdateDeduplicationRulesBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesBadGatewayError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesInternalServerError - Server error
type DeduplicationRulesCreateOrUpdateDeduplicationRulesInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesInternalServerError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesUnprocessableEntityError - Client error
type DeduplicationRulesCreateOrUpdateDeduplicationRulesUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesUnprocessableEntityError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesConflictError - The request conflicts with the current state of the server.
type DeduplicationRulesCreateOrUpdateDeduplicationRulesConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesConflictError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesNotFoundError - The server cannot find the requested resource.
type DeduplicationRulesCreateOrUpdateDeduplicationRulesNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesNotFoundError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesForbiddenError - Access is forbidden.
type DeduplicationRulesCreateOrUpdateDeduplicationRulesForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesForbiddenError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesPaymentRequiredError - Client error
type DeduplicationRulesCreateOrUpdateDeduplicationRulesPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesPaymentRequiredError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesUnauthorizedError - Access is unauthorized.
type DeduplicationRulesCreateOrUpdateDeduplicationRulesUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesUnauthorizedError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// DeduplicationRulesCreateOrUpdateDeduplicationRulesBadRequestError - The server could not understand the request due to invalid syntax.
type DeduplicationRulesCreateOrUpdateDeduplicationRulesBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &DeduplicationRulesCreateOrUpdateDeduplicationRulesBadRequestError{}

func (e *DeduplicationRulesCreateOrUpdateDeduplicationRulesBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
