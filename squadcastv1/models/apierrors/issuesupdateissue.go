// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// IssuesUpdateIssueGatewayTimeoutError - Server error
type IssuesUpdateIssueGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueGatewayTimeoutError{}

func (e *IssuesUpdateIssueGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueServiceUnavailableError - Service unavailable.
type IssuesUpdateIssueServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueServiceUnavailableError{}

func (e *IssuesUpdateIssueServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueBadGatewayError - Server error
type IssuesUpdateIssueBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueBadGatewayError{}

func (e *IssuesUpdateIssueBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueInternalServerError - Server error
type IssuesUpdateIssueInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueInternalServerError{}

func (e *IssuesUpdateIssueInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueUnprocessableEntityError - Client error
type IssuesUpdateIssueUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueUnprocessableEntityError{}

func (e *IssuesUpdateIssueUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueConflictError - The request conflicts with the current state of the server.
type IssuesUpdateIssueConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueConflictError{}

func (e *IssuesUpdateIssueConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueNotFoundError - The server cannot find the requested resource.
type IssuesUpdateIssueNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueNotFoundError{}

func (e *IssuesUpdateIssueNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueForbiddenError - Access is forbidden.
type IssuesUpdateIssueForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueForbiddenError{}

func (e *IssuesUpdateIssueForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssuePaymentRequiredError - Client error
type IssuesUpdateIssuePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssuePaymentRequiredError{}

func (e *IssuesUpdateIssuePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueUnauthorizedError - Access is unauthorized.
type IssuesUpdateIssueUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueUnauthorizedError{}

func (e *IssuesUpdateIssueUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesUpdateIssueBadRequestError - The server could not understand the request due to invalid syntax.
type IssuesUpdateIssueBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesUpdateIssueBadRequestError{}

func (e *IssuesUpdateIssueBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
