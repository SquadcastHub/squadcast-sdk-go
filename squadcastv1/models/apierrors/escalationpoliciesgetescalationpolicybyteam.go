// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// EscalationPoliciesGetEscalationPolicyByTeamGatewayTimeoutError - Server error
type EscalationPoliciesGetEscalationPolicyByTeamGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamGatewayTimeoutError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamServiceUnavailableError - Service unavailable.
type EscalationPoliciesGetEscalationPolicyByTeamServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamServiceUnavailableError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamBadGatewayError - Server error
type EscalationPoliciesGetEscalationPolicyByTeamBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamBadGatewayError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamInternalServerError - Server error
type EscalationPoliciesGetEscalationPolicyByTeamInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamInternalServerError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamUnprocessableEntityError - Client error
type EscalationPoliciesGetEscalationPolicyByTeamUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamUnprocessableEntityError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamConflictError - The request conflicts with the current state of the server.
type EscalationPoliciesGetEscalationPolicyByTeamConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamConflictError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamNotFoundError - The server cannot find the requested resource.
type EscalationPoliciesGetEscalationPolicyByTeamNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamNotFoundError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamForbiddenError - Access is forbidden.
type EscalationPoliciesGetEscalationPolicyByTeamForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamForbiddenError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamPaymentRequiredError - Client error
type EscalationPoliciesGetEscalationPolicyByTeamPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamPaymentRequiredError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamUnauthorizedError - Access is unauthorized.
type EscalationPoliciesGetEscalationPolicyByTeamUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamUnauthorizedError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// EscalationPoliciesGetEscalationPolicyByTeamBadRequestError - The server could not understand the request due to invalid syntax.
type EscalationPoliciesGetEscalationPolicyByTeamBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &EscalationPoliciesGetEscalationPolicyByTeamBadRequestError{}

func (e *EscalationPoliciesGetEscalationPolicyByTeamBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
