// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// IssuesDeleteIssueByIDGatewayTimeoutError - Server error
type IssuesDeleteIssueByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDGatewayTimeoutError{}

func (e *IssuesDeleteIssueByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDServiceUnavailableError - Service unavailable.
type IssuesDeleteIssueByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDServiceUnavailableError{}

func (e *IssuesDeleteIssueByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDBadGatewayError - Server error
type IssuesDeleteIssueByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDBadGatewayError{}

func (e *IssuesDeleteIssueByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDInternalServerError - Server error
type IssuesDeleteIssueByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDInternalServerError{}

func (e *IssuesDeleteIssueByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDUnprocessableEntityError - Client error
type IssuesDeleteIssueByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDUnprocessableEntityError{}

func (e *IssuesDeleteIssueByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDConflictError - The request conflicts with the current state of the server.
type IssuesDeleteIssueByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDConflictError{}

func (e *IssuesDeleteIssueByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDNotFoundError - The server cannot find the requested resource.
type IssuesDeleteIssueByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDNotFoundError{}

func (e *IssuesDeleteIssueByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDForbiddenError - Access is forbidden.
type IssuesDeleteIssueByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDForbiddenError{}

func (e *IssuesDeleteIssueByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDPaymentRequiredError - Client error
type IssuesDeleteIssueByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDPaymentRequiredError{}

func (e *IssuesDeleteIssueByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDUnauthorizedError - Access is unauthorized.
type IssuesDeleteIssueByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDUnauthorizedError{}

func (e *IssuesDeleteIssueByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// IssuesDeleteIssueByIDBadRequestError - The server could not understand the request due to invalid syntax.
type IssuesDeleteIssueByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &IssuesDeleteIssueByIDBadRequestError{}

func (e *IssuesDeleteIssueByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
