// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// CommunicationCardsCreateCommunicationCardGatewayTimeoutError - Server error
type CommunicationCardsCreateCommunicationCardGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardGatewayTimeoutError{}

func (e *CommunicationCardsCreateCommunicationCardGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardServiceUnavailableError - Service unavailable.
type CommunicationCardsCreateCommunicationCardServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardServiceUnavailableError{}

func (e *CommunicationCardsCreateCommunicationCardServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardBadGatewayError - Server error
type CommunicationCardsCreateCommunicationCardBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardBadGatewayError{}

func (e *CommunicationCardsCreateCommunicationCardBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardInternalServerError - Server error
type CommunicationCardsCreateCommunicationCardInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardInternalServerError{}

func (e *CommunicationCardsCreateCommunicationCardInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardUnprocessableEntityError - Client error
type CommunicationCardsCreateCommunicationCardUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardUnprocessableEntityError{}

func (e *CommunicationCardsCreateCommunicationCardUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardConflictError - The request conflicts with the current state of the server.
type CommunicationCardsCreateCommunicationCardConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardConflictError{}

func (e *CommunicationCardsCreateCommunicationCardConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardNotFoundError - The server cannot find the requested resource.
type CommunicationCardsCreateCommunicationCardNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardNotFoundError{}

func (e *CommunicationCardsCreateCommunicationCardNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardForbiddenError - Access is forbidden.
type CommunicationCardsCreateCommunicationCardForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardForbiddenError{}

func (e *CommunicationCardsCreateCommunicationCardForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardPaymentRequiredError - Client error
type CommunicationCardsCreateCommunicationCardPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardPaymentRequiredError{}

func (e *CommunicationCardsCreateCommunicationCardPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardUnauthorizedError - Access is unauthorized.
type CommunicationCardsCreateCommunicationCardUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardUnauthorizedError{}

func (e *CommunicationCardsCreateCommunicationCardUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// CommunicationCardsCreateCommunicationCardBadRequestError - The server could not understand the request due to invalid syntax.
type CommunicationCardsCreateCommunicationCardBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &CommunicationCardsCreateCommunicationCardBadRequestError{}

func (e *CommunicationCardsCreateCommunicationCardBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
