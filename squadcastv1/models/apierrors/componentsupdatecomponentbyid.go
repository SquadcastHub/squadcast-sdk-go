// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// ComponentsUpdateComponentByIDGatewayTimeoutError - Server error
type ComponentsUpdateComponentByIDGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDGatewayTimeoutError{}

func (e *ComponentsUpdateComponentByIDGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDServiceUnavailableError - Service unavailable.
type ComponentsUpdateComponentByIDServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDServiceUnavailableError{}

func (e *ComponentsUpdateComponentByIDServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDBadGatewayError - Server error
type ComponentsUpdateComponentByIDBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDBadGatewayError{}

func (e *ComponentsUpdateComponentByIDBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDInternalServerError - Server error
type ComponentsUpdateComponentByIDInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDInternalServerError{}

func (e *ComponentsUpdateComponentByIDInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDUnprocessableEntityError - Client error
type ComponentsUpdateComponentByIDUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDUnprocessableEntityError{}

func (e *ComponentsUpdateComponentByIDUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDConflictError - The request conflicts with the current state of the server.
type ComponentsUpdateComponentByIDConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDConflictError{}

func (e *ComponentsUpdateComponentByIDConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDNotFoundError - The server cannot find the requested resource.
type ComponentsUpdateComponentByIDNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDNotFoundError{}

func (e *ComponentsUpdateComponentByIDNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDForbiddenError - Access is forbidden.
type ComponentsUpdateComponentByIDForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDForbiddenError{}

func (e *ComponentsUpdateComponentByIDForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDPaymentRequiredError - Client error
type ComponentsUpdateComponentByIDPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDPaymentRequiredError{}

func (e *ComponentsUpdateComponentByIDPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDUnauthorizedError - Access is unauthorized.
type ComponentsUpdateComponentByIDUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDUnauthorizedError{}

func (e *ComponentsUpdateComponentByIDUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// ComponentsUpdateComponentByIDBadRequestError - The server could not understand the request due to invalid syntax.
type ComponentsUpdateComponentByIDBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &ComponentsUpdateComponentByIDBadRequestError{}

func (e *ComponentsUpdateComponentByIDBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
