// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// GlobalEventRulesCreateRuleGatewayTimeoutError - Server error
type GlobalEventRulesCreateRuleGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleGatewayTimeoutError{}

func (e *GlobalEventRulesCreateRuleGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleServiceUnavailableError - Service unavailable.
type GlobalEventRulesCreateRuleServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleServiceUnavailableError{}

func (e *GlobalEventRulesCreateRuleServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleBadGatewayError - Server error
type GlobalEventRulesCreateRuleBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleBadGatewayError{}

func (e *GlobalEventRulesCreateRuleBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleInternalServerError - Server error
type GlobalEventRulesCreateRuleInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleInternalServerError{}

func (e *GlobalEventRulesCreateRuleInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleUnprocessableEntityError - Client error
type GlobalEventRulesCreateRuleUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleUnprocessableEntityError{}

func (e *GlobalEventRulesCreateRuleUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleConflictError - The request conflicts with the current state of the server.
type GlobalEventRulesCreateRuleConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleConflictError{}

func (e *GlobalEventRulesCreateRuleConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleNotFoundError - The server cannot find the requested resource.
type GlobalEventRulesCreateRuleNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleNotFoundError{}

func (e *GlobalEventRulesCreateRuleNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleForbiddenError - Access is forbidden.
type GlobalEventRulesCreateRuleForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleForbiddenError{}

func (e *GlobalEventRulesCreateRuleForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRulePaymentRequiredError - Client error
type GlobalEventRulesCreateRulePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRulePaymentRequiredError{}

func (e *GlobalEventRulesCreateRulePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleUnauthorizedError - Access is unauthorized.
type GlobalEventRulesCreateRuleUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleUnauthorizedError{}

func (e *GlobalEventRulesCreateRuleUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// GlobalEventRulesCreateRuleBadRequestError - The server could not understand the request due to invalid syntax.
type GlobalEventRulesCreateRuleBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &GlobalEventRulesCreateRuleBadRequestError{}

func (e *GlobalEventRulesCreateRuleBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
