// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/squadcastv1/models/components"
)

// OverlayGetDedupKeyOverlayForAlertSourceGatewayTimeoutError - Server error
type OverlayGetDedupKeyOverlayForAlertSourceGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceGatewayTimeoutError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceServiceUnavailableError - Service unavailable.
type OverlayGetDedupKeyOverlayForAlertSourceServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceServiceUnavailableError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceBadGatewayError - Server error
type OverlayGetDedupKeyOverlayForAlertSourceBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceBadGatewayError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceInternalServerError - Server error
type OverlayGetDedupKeyOverlayForAlertSourceInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceInternalServerError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceUnprocessableEntityError - Client error
type OverlayGetDedupKeyOverlayForAlertSourceUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceUnprocessableEntityError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceConflictError - The request conflicts with the current state of the server.
type OverlayGetDedupKeyOverlayForAlertSourceConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceConflictError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceNotFoundError - The server cannot find the requested resource.
type OverlayGetDedupKeyOverlayForAlertSourceNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceNotFoundError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceForbiddenError - Access is forbidden.
type OverlayGetDedupKeyOverlayForAlertSourceForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceForbiddenError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourcePaymentRequiredError - Client error
type OverlayGetDedupKeyOverlayForAlertSourcePaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourcePaymentRequiredError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourcePaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceUnauthorizedError - Access is unauthorized.
type OverlayGetDedupKeyOverlayForAlertSourceUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceUnauthorizedError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// OverlayGetDedupKeyOverlayForAlertSourceBadRequestError - The server could not understand the request due to invalid syntax.
type OverlayGetDedupKeyOverlayForAlertSourceBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &OverlayGetDedupKeyOverlayForAlertSourceBadRequestError{}

func (e *OverlayGetDedupKeyOverlayForAlertSourceBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
