// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// MSTeamsGetMsteamsConfigGatewayTimeoutError - Server error
type MSTeamsGetMsteamsConfigGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigGatewayTimeoutError{}

func (e *MSTeamsGetMsteamsConfigGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigServiceUnavailableError - Service unavailable.
type MSTeamsGetMsteamsConfigServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigServiceUnavailableError{}

func (e *MSTeamsGetMsteamsConfigServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigBadGatewayError - Server error
type MSTeamsGetMsteamsConfigBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigBadGatewayError{}

func (e *MSTeamsGetMsteamsConfigBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigInternalServerError - Server error
type MSTeamsGetMsteamsConfigInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigInternalServerError{}

func (e *MSTeamsGetMsteamsConfigInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigUnprocessableEntityError - Client error
type MSTeamsGetMsteamsConfigUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigUnprocessableEntityError{}

func (e *MSTeamsGetMsteamsConfigUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigConflictError - The request conflicts with the current state of the server.
type MSTeamsGetMsteamsConfigConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigConflictError{}

func (e *MSTeamsGetMsteamsConfigConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigNotFoundError - The server cannot find the requested resource.
type MSTeamsGetMsteamsConfigNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigNotFoundError{}

func (e *MSTeamsGetMsteamsConfigNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigForbiddenError - Access is forbidden.
type MSTeamsGetMsteamsConfigForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigForbiddenError{}

func (e *MSTeamsGetMsteamsConfigForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigPaymentRequiredError - Client error
type MSTeamsGetMsteamsConfigPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigPaymentRequiredError{}

func (e *MSTeamsGetMsteamsConfigPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigUnauthorizedError - Access is unauthorized.
type MSTeamsGetMsteamsConfigUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigUnauthorizedError{}

func (e *MSTeamsGetMsteamsConfigUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// MSTeamsGetMsteamsConfigBadRequestError - The server could not understand the request due to invalid syntax.
type MSTeamsGetMsteamsConfigBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &MSTeamsGetMsteamsConfigBadRequestError{}

func (e *MSTeamsGetMsteamsConfigBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
