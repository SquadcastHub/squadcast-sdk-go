// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

// AdditionalRespondersGetAdditionalRespondersGatewayTimeoutError - Server error
type AdditionalRespondersGetAdditionalRespondersGatewayTimeoutError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersGatewayTimeoutError{}

func (e *AdditionalRespondersGetAdditionalRespondersGatewayTimeoutError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersServiceUnavailableError - Service unavailable.
type AdditionalRespondersGetAdditionalRespondersServiceUnavailableError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersServiceUnavailableError{}

func (e *AdditionalRespondersGetAdditionalRespondersServiceUnavailableError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersBadGatewayError - Server error
type AdditionalRespondersGetAdditionalRespondersBadGatewayError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersBadGatewayError{}

func (e *AdditionalRespondersGetAdditionalRespondersBadGatewayError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersInternalServerError - Server error
type AdditionalRespondersGetAdditionalRespondersInternalServerError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersInternalServerError{}

func (e *AdditionalRespondersGetAdditionalRespondersInternalServerError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersUnprocessableEntityError - Client error
type AdditionalRespondersGetAdditionalRespondersUnprocessableEntityError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersUnprocessableEntityError{}

func (e *AdditionalRespondersGetAdditionalRespondersUnprocessableEntityError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersConflictError - The request conflicts with the current state of the server.
type AdditionalRespondersGetAdditionalRespondersConflictError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersConflictError{}

func (e *AdditionalRespondersGetAdditionalRespondersConflictError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersNotFoundError - The server cannot find the requested resource.
type AdditionalRespondersGetAdditionalRespondersNotFoundError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersNotFoundError{}

func (e *AdditionalRespondersGetAdditionalRespondersNotFoundError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersForbiddenError - Access is forbidden.
type AdditionalRespondersGetAdditionalRespondersForbiddenError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersForbiddenError{}

func (e *AdditionalRespondersGetAdditionalRespondersForbiddenError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersPaymentRequiredError - Client error
type AdditionalRespondersGetAdditionalRespondersPaymentRequiredError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersPaymentRequiredError{}

func (e *AdditionalRespondersGetAdditionalRespondersPaymentRequiredError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersUnauthorizedError - Access is unauthorized.
type AdditionalRespondersGetAdditionalRespondersUnauthorizedError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersUnauthorizedError{}

func (e *AdditionalRespondersGetAdditionalRespondersUnauthorizedError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

// AdditionalRespondersGetAdditionalRespondersBadRequestError - The server could not understand the request due to invalid syntax.
type AdditionalRespondersGetAdditionalRespondersBadRequestError struct {
	// Represents a single response containing data of type T.
	Meta     components.CommonV3ErrorMeta `json:"meta"`
	HTTPMeta components.HTTPMetadata      `json:"-"`
}

var _ error = &AdditionalRespondersGetAdditionalRespondersBadRequestError{}

func (e *AdditionalRespondersGetAdditionalRespondersBadRequestError) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
