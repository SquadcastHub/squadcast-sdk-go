// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// V3EscalationPoliciesEscalationPolicyRule - Represents a rule within an escalation policy.
type V3EscalationPoliciesEscalationPolicyRule struct {
	// The time in minutes to wait before this rule is triggered.
	EscalationTime int `json:"escalationTime"`
	// The notification methods to use for this rule.
	Via []string `json:"via"`
	// Indicates if round-robin is enabled for the entities in this rule.
	RoundrobinEnabled bool `json:"roundrobin_enabled"`
	// The index of the next entity to be notified in a round-robin setup.
	RoundrobinNextIndex int `json:"roundrobin_next_index"`
	// The entities to be notified in this rule.
	Entities []V3EscalationPoliciesEscalationEntity `json:"entities"`
	// Indicates if escalation should happen within the round-robin rotation.
	EscalateWithinRoundrobin bool `json:"escalate_within_roundrobin"`
	// The number of times this specific rule should be repeated.
	Repetition int `json:"repetition"`
	// The time in minutes after which this rule should be repeated.
	RepeatAfter int `json:"repeat_after"`
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetEscalationTime() int {
	if v == nil {
		return 0
	}
	return v.EscalationTime
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetVia() []string {
	if v == nil {
		return []string{}
	}
	return v.Via
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetRoundrobinEnabled() bool {
	if v == nil {
		return false
	}
	return v.RoundrobinEnabled
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetRoundrobinNextIndex() int {
	if v == nil {
		return 0
	}
	return v.RoundrobinNextIndex
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetEntities() []V3EscalationPoliciesEscalationEntity {
	if v == nil {
		return []V3EscalationPoliciesEscalationEntity{}
	}
	return v.Entities
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetEscalateWithinRoundrobin() bool {
	if v == nil {
		return false
	}
	return v.EscalateWithinRoundrobin
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetRepetition() int {
	if v == nil {
		return 0
	}
	return v.Repetition
}

func (v *V3EscalationPoliciesEscalationPolicyRule) GetRepeatAfter() int {
	if v == nil {
		return 0
	}
	return v.RepeatAfter
}
