// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/internal/utils"
	"time"
)

type V3IncidentsTagsSnoozeDetails struct {
	IsSnoozed       bool       `json:"is_snoozed"`
	StartTime       *time.Time `json:"start_time"`
	EndTime         *time.Time `json:"end_time"`
	TotalTimeInMins int64      `json:"total_time_in_mins"`
}

func (v V3IncidentsTagsSnoozeDetails) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3IncidentsTagsSnoozeDetails) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"is_snoozed", "total_time_in_mins"}); err != nil {
		return err
	}
	return nil
}

func (v *V3IncidentsTagsSnoozeDetails) GetIsSnoozed() bool {
	if v == nil {
		return false
	}
	return v.IsSnoozed
}

func (v *V3IncidentsTagsSnoozeDetails) GetStartTime() *time.Time {
	if v == nil {
		return nil
	}
	return v.StartTime
}

func (v *V3IncidentsTagsSnoozeDetails) GetEndTime() *time.Time {
	if v == nil {
		return nil
	}
	return v.EndTime
}

func (v *V3IncidentsTagsSnoozeDetails) GetTotalTimeInMins() int64 {
	if v == nil {
		return 0
	}
	return v.TotalTimeInMins
}
