// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type V3ServicesTaggingRulesTagRule struct {
	Expression *string `json:"expression,omitempty"`
	// The 'tags' field cannot be empty unless the 'expression' or 'basic_expression' explicitly uses 'addTag' or 'addTags' functions.
	Tags            *V3ServicesTaggingRulesTagsObject        `json:"tags,omitempty"`
	IsBasic         *bool                                    `json:"is_basic,omitempty"`
	BasicExpression []V3ServicesTaggingRulesExpressionBranch `json:"basic_expression,omitempty"`
}

func (v *V3ServicesTaggingRulesTagRule) GetExpression() *string {
	if v == nil {
		return nil
	}
	return v.Expression
}

func (v *V3ServicesTaggingRulesTagRule) GetTags() *V3ServicesTaggingRulesTagsObject {
	if v == nil {
		return nil
	}
	return v.Tags
}

func (v *V3ServicesTaggingRulesTagRule) GetIsBasic() *bool {
	if v == nil {
		return nil
	}
	return v.IsBasic
}

func (v *V3ServicesTaggingRulesTagRule) GetBasicExpression() []V3ServicesTaggingRulesExpressionBranch {
	if v == nil {
		return nil
	}
	return v.BasicExpression
}
