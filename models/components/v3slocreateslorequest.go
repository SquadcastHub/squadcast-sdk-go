// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V3SLOCreateSLORequestTags struct {
}

type V3SLOCreateSLORequest struct {
	Name                string                     `json:"name"`
	Description         *string                    `json:"description,omitempty"`
	TimeIntervalType    V3SLOTimeIntervalType      `json:"time_interval_type"`
	ServiceIds          []string                   `json:"service_ids"`
	Slis                []string                   `json:"slis"`
	TargetSlo           float32                    `json:"target_slo"`
	StartTime           time.Time                  `json:"start_time"`
	EndTime             time.Time                  `json:"end_time"`
	DurationInDays      int64                      `json:"duration_in_days"`
	Tags                *V3SLOCreateSLORequestTags `json:"tags,omitempty"`
	SloMonitoringChecks []V3SLOSLOMonitoringCheck  `json:"slo_monitoring_checks,omitempty"`
	SloActions          []V3SLOSLOAction           `json:"slo_actions,omitempty"`
	OwnerType           string                     `json:"owner_type"`
	OwnerID             string                     `json:"owner_id"`
	SloOwnerID          string                     `json:"slo_owner_id"`
	SloOwnerType        V3SLOSLOOwnerType          `json:"slo_owner_type"`
}

func (v V3SLOCreateSLORequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3SLOCreateSLORequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name", "time_interval_type", "service_ids", "slis", "target_slo", "start_time", "end_time", "duration_in_days", "owner_type", "owner_id", "slo_owner_id", "slo_owner_type"}); err != nil {
		return err
	}
	return nil
}

func (v *V3SLOCreateSLORequest) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V3SLOCreateSLORequest) GetDescription() *string {
	if v == nil {
		return nil
	}
	return v.Description
}

func (v *V3SLOCreateSLORequest) GetTimeIntervalType() V3SLOTimeIntervalType {
	if v == nil {
		return V3SLOTimeIntervalType("")
	}
	return v.TimeIntervalType
}

func (v *V3SLOCreateSLORequest) GetServiceIds() []string {
	if v == nil {
		return []string{}
	}
	return v.ServiceIds
}

func (v *V3SLOCreateSLORequest) GetSlis() []string {
	if v == nil {
		return []string{}
	}
	return v.Slis
}

func (v *V3SLOCreateSLORequest) GetTargetSlo() float32 {
	if v == nil {
		return 0.0
	}
	return v.TargetSlo
}

func (v *V3SLOCreateSLORequest) GetStartTime() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.StartTime
}

func (v *V3SLOCreateSLORequest) GetEndTime() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.EndTime
}

func (v *V3SLOCreateSLORequest) GetDurationInDays() int64 {
	if v == nil {
		return 0
	}
	return v.DurationInDays
}

func (v *V3SLOCreateSLORequest) GetTags() *V3SLOCreateSLORequestTags {
	if v == nil {
		return nil
	}
	return v.Tags
}

func (v *V3SLOCreateSLORequest) GetSloMonitoringChecks() []V3SLOSLOMonitoringCheck {
	if v == nil {
		return nil
	}
	return v.SloMonitoringChecks
}

func (v *V3SLOCreateSLORequest) GetSloActions() []V3SLOSLOAction {
	if v == nil {
		return nil
	}
	return v.SloActions
}

func (v *V3SLOCreateSLORequest) GetOwnerType() string {
	if v == nil {
		return ""
	}
	return v.OwnerType
}

func (v *V3SLOCreateSLORequest) GetOwnerID() string {
	if v == nil {
		return ""
	}
	return v.OwnerID
}

func (v *V3SLOCreateSLORequest) GetSloOwnerID() string {
	if v == nil {
		return ""
	}
	return v.SloOwnerID
}

func (v *V3SLOCreateSLORequest) GetSloOwnerType() V3SLOSLOOwnerType {
	if v == nil {
		return V3SLOSLOOwnerType("")
	}
	return v.SloOwnerType
}
