// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// V3IncidentsPostmortemsPostmortemStatus - Represents the status of a postmortem.
type V3IncidentsPostmortemsPostmortemStatus string

const (
	V3IncidentsPostmortemsPostmortemStatusInProgress  V3IncidentsPostmortemsPostmortemStatus = "in_progress"
	V3IncidentsPostmortemsPostmortemStatusUnderReview V3IncidentsPostmortemsPostmortemStatus = "under_review"
	V3IncidentsPostmortemsPostmortemStatusPublished   V3IncidentsPostmortemsPostmortemStatus = "published"
)

func (e V3IncidentsPostmortemsPostmortemStatus) ToPointer() *V3IncidentsPostmortemsPostmortemStatus {
	return &e
}
func (e *V3IncidentsPostmortemsPostmortemStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "in_progress":
		fallthrough
	case "under_review":
		fallthrough
	case "published":
		*e = V3IncidentsPostmortemsPostmortemStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3IncidentsPostmortemsPostmortemStatus: %v", v)
	}
}
