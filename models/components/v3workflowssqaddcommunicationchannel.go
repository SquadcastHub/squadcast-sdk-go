// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
)

type V3WorkflowsSqAddCommunicationChannelName string

const (
	V3WorkflowsSqAddCommunicationChannelNameSqAddCommunicationChannel V3WorkflowsSqAddCommunicationChannelName = "sq_add_communication_channel"
)

func (e V3WorkflowsSqAddCommunicationChannelName) ToPointer() *V3WorkflowsSqAddCommunicationChannelName {
	return &e
}
func (e *V3WorkflowsSqAddCommunicationChannelName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sq_add_communication_channel":
		*e = V3WorkflowsSqAddCommunicationChannelName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSqAddCommunicationChannelName: %v", v)
	}
}

type V3WorkflowsSqAddCommunicationChannelData struct {
	Channels []V3WorkflowsCommunicationChannel `json:"channels"`
}

func (v V3WorkflowsSqAddCommunicationChannelData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqAddCommunicationChannelData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"channels"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSqAddCommunicationChannelData) GetChannels() []V3WorkflowsCommunicationChannel {
	if v == nil {
		return []V3WorkflowsCommunicationChannel{}
	}
	return v.Channels
}

type V3WorkflowsSqAddCommunicationChannel struct {
	Name V3WorkflowsSqAddCommunicationChannelName `json:"name"`
	Data V3WorkflowsSqAddCommunicationChannelData `json:"data"`
}

func (v V3WorkflowsSqAddCommunicationChannel) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqAddCommunicationChannel) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name", "data"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSqAddCommunicationChannel) GetName() V3WorkflowsSqAddCommunicationChannelName {
	if v == nil {
		return V3WorkflowsSqAddCommunicationChannelName("")
	}
	return v.Name
}

func (v *V3WorkflowsSqAddCommunicationChannel) GetData() V3WorkflowsSqAddCommunicationChannelData {
	if v == nil {
		return V3WorkflowsSqAddCommunicationChannelData{}
	}
	return v.Data
}
