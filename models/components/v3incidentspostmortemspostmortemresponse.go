// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type V3IncidentsPostmortemsPostmortemResponseIncident struct {
	Message        string `json:"message"`
	TimeOfCreation string `json:"time_of_creation"`
}

func (v *V3IncidentsPostmortemsPostmortemResponseIncident) GetMessage() string {
	if v == nil {
		return ""
	}
	return v.Message
}

func (v *V3IncidentsPostmortemsPostmortemResponseIncident) GetTimeOfCreation() string {
	if v == nil {
		return ""
	}
	return v.TimeOfCreation
}

// V3IncidentsPostmortemsPostmortemResponse - Represents a Postmortem in the system.
type V3IncidentsPostmortemsPostmortemResponse struct {
	ID             string                                     `json:"id"`
	OrganizationID string                                     `json:"organization_id"`
	IncidentID     string                                     `json:"incident_id"`
	Postmortem     string                                     `json:"postmortem"`
	FollowUps      []V3IncidentsPostmortemsPostmortemFollowUp `json:"follow_ups"`
	CreatedAt      string                                     `json:"created_at"`
	Title          string                                     `json:"title"`
	// Represents the status of a postmortem.
	Status V3IncidentsPostmortemsPostmortemStatus `json:"status"`
	// Represents the RBAC owner of an entity.
	Owner         CommonV3RBACOwner                                 `json:"owner"`
	AccessControl []CommonV3RBACEntityPermission                    `json:"access_control"`
	Attachments   []string                                          `json:"attachments,omitempty"`
	Incident      *V3IncidentsPostmortemsPostmortemResponseIncident `json:"incident,omitempty"`
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetID() string {
	if v == nil {
		return ""
	}
	return v.ID
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetOrganizationID() string {
	if v == nil {
		return ""
	}
	return v.OrganizationID
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetIncidentID() string {
	if v == nil {
		return ""
	}
	return v.IncidentID
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetPostmortem() string {
	if v == nil {
		return ""
	}
	return v.Postmortem
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetFollowUps() []V3IncidentsPostmortemsPostmortemFollowUp {
	if v == nil {
		return nil
	}
	return v.FollowUps
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetCreatedAt() string {
	if v == nil {
		return ""
	}
	return v.CreatedAt
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetTitle() string {
	if v == nil {
		return ""
	}
	return v.Title
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetStatus() V3IncidentsPostmortemsPostmortemStatus {
	if v == nil {
		return V3IncidentsPostmortemsPostmortemStatus("")
	}
	return v.Status
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetOwner() CommonV3RBACOwner {
	if v == nil {
		return CommonV3RBACOwner{}
	}
	return v.Owner
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetAccessControl() []CommonV3RBACEntityPermission {
	if v == nil {
		return []CommonV3RBACEntityPermission{}
	}
	return v.AccessControl
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetAttachments() []string {
	if v == nil {
		return nil
	}
	return v.Attachments
}

func (v *V3IncidentsPostmortemsPostmortemResponse) GetIncident() *V3IncidentsPostmortemsPostmortemResponseIncident {
	if v == nil {
		return nil
	}
	return v.Incident
}
