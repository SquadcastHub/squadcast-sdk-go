// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/internal/utils"
	"time"
)

type V4StatusPagesIssuesGetIssueByIDResponse struct {
	ID                int64                                     `json:"id"`
	Title             string                                    `json:"title"`
	LastUpdatedAt     time.Time                                 `json:"lastUpdatedAt"`
	Components        []V4StatusPagesIssuesIssueComponentDetail `json:"components"`
	Issues            []V4StatusPagesIssuesIssueDetail          `json:"issues"`
	CurrentIssueState V4StatusPagesIssuesComponentStatus        `json:"currentIssueState"`
	PageStatus        V4StatusPagesIssuesComponentStatus        `json:"pageStatus"`
	UnderMaintenance  bool                                      `json:"underMaintenance"`
	StatusMaintenance V4StatusPagesIssuesComponentStatus        `json:"statusMaintenance"`
	PageID            int64                                     `json:"pageID"`
	IsMigrated        bool                                      `json:"isMigrated"`
}

func (v V4StatusPagesIssuesGetIssueByIDResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"id", "title", "lastUpdatedAt", "components", "issues", "currentIssueState", "pageStatus", "underMaintenance", "statusMaintenance", "pageID", "isMigrated"}); err != nil {
		return err
	}
	return nil
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetID() int64 {
	if v == nil {
		return 0
	}
	return v.ID
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetTitle() string {
	if v == nil {
		return ""
	}
	return v.Title
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetLastUpdatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.LastUpdatedAt
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetComponents() []V4StatusPagesIssuesIssueComponentDetail {
	if v == nil {
		return []V4StatusPagesIssuesIssueComponentDetail{}
	}
	return v.Components
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetIssues() []V4StatusPagesIssuesIssueDetail {
	if v == nil {
		return []V4StatusPagesIssuesIssueDetail{}
	}
	return v.Issues
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetCurrentIssueState() V4StatusPagesIssuesComponentStatus {
	if v == nil {
		return V4StatusPagesIssuesComponentStatus{}
	}
	return v.CurrentIssueState
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetPageStatus() V4StatusPagesIssuesComponentStatus {
	if v == nil {
		return V4StatusPagesIssuesComponentStatus{}
	}
	return v.PageStatus
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetUnderMaintenance() bool {
	if v == nil {
		return false
	}
	return v.UnderMaintenance
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetStatusMaintenance() V4StatusPagesIssuesComponentStatus {
	if v == nil {
		return V4StatusPagesIssuesComponentStatus{}
	}
	return v.StatusMaintenance
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetPageID() int64 {
	if v == nil {
		return 0
	}
	return v.PageID
}

func (v *V4StatusPagesIssuesGetIssueByIDResponse) GetIsMigrated() bool {
	if v == nil {
		return false
	}
	return v.IsMigrated
}
