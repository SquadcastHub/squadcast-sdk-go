// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
)

type V3WorkflowsSqSendEmailUpdateName string

const (
	V3WorkflowsSqSendEmailUpdateNameSqSendEmail V3WorkflowsSqSendEmailUpdateName = "sq_send_email"
)

func (e V3WorkflowsSqSendEmailUpdateName) ToPointer() *V3WorkflowsSqSendEmailUpdateName {
	return &e
}
func (e *V3WorkflowsSqSendEmailUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sq_send_email":
		*e = V3WorkflowsSqSendEmailUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSqSendEmailUpdateName: %v", v)
	}
}

type V3WorkflowsSqSendEmailUpdateData struct {
	To      []string `json:"to,omitempty"`
	Subject *string  `json:"subject,omitempty"`
	Body    *string  `json:"body,omitempty"`
}

func (v V3WorkflowsSqSendEmailUpdateData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqSendEmailUpdateData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSqSendEmailUpdateData) GetTo() []string {
	if v == nil {
		return nil
	}
	return v.To
}

func (v *V3WorkflowsSqSendEmailUpdateData) GetSubject() *string {
	if v == nil {
		return nil
	}
	return v.Subject
}

func (v *V3WorkflowsSqSendEmailUpdateData) GetBody() *string {
	if v == nil {
		return nil
	}
	return v.Body
}

type V3WorkflowsSqSendEmailUpdate struct {
	Name V3WorkflowsSqSendEmailUpdateName  `json:"name"`
	Data *V3WorkflowsSqSendEmailUpdateData `json:"data,omitempty"`
}

func (v V3WorkflowsSqSendEmailUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSqSendEmailUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSqSendEmailUpdate) GetName() V3WorkflowsSqSendEmailUpdateName {
	if v == nil {
		return V3WorkflowsSqSendEmailUpdateName("")
	}
	return v.Name
}

func (v *V3WorkflowsSqSendEmailUpdate) GetData() *V3WorkflowsSqSendEmailUpdateData {
	if v == nil {
		return nil
	}
	return v.Data
}
