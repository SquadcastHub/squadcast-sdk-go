// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
	"time"
)

type V4StatusPagesMaintenancesGetMaintenanceByIDResponse struct {
	ID              int64      `json:"ID"`
	PageID          int64      `json:"PageID"`
	ComponentIDList []int64    `json:"ComponentIDList,omitempty"`
	Title           string     `json:"Title"`
	Note            string     `json:"Note"`
	StartTime       time.Time  `json:"StartTime"`
	EndTime         time.Time  `json:"EndTime"`
	CreatedAt       time.Time  `json:"createdAt"`
	UpdatedAt       time.Time  `json:"updatedAt"`
	DeletedAt       *time.Time `json:"deletedAt"`
}

func (v V4StatusPagesMaintenancesGetMaintenanceByIDResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"ID", "PageID", "Title", "Note", "StartTime", "EndTime", "createdAt", "updatedAt"}); err != nil {
		return err
	}
	return nil
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetID() int64 {
	if v == nil {
		return 0
	}
	return v.ID
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetPageID() int64 {
	if v == nil {
		return 0
	}
	return v.PageID
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetComponentIDList() []int64 {
	if v == nil {
		return nil
	}
	return v.ComponentIDList
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetTitle() string {
	if v == nil {
		return ""
	}
	return v.Title
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetNote() string {
	if v == nil {
		return ""
	}
	return v.Note
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetStartTime() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.StartTime
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetEndTime() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.EndTime
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetCreatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.CreatedAt
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetUpdatedAt() time.Time {
	if v == nil {
		return time.Time{}
	}
	return v.UpdatedAt
}

func (v *V4StatusPagesMaintenancesGetMaintenanceByIDResponse) GetDeletedAt() *time.Time {
	if v == nil {
		return nil
	}
	return v.DeletedAt
}
