// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V4ScheduleResponseOwnerType string

const (
	V4ScheduleResponseOwnerTypeUser  V4ScheduleResponseOwnerType = "user"
	V4ScheduleResponseOwnerTypeSquad V4ScheduleResponseOwnerType = "squad"
)

func (e V4ScheduleResponseOwnerType) ToPointer() *V4ScheduleResponseOwnerType {
	return &e
}
func (e *V4ScheduleResponseOwnerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		fallthrough
	case "squad":
		*e = V4ScheduleResponseOwnerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V4ScheduleResponseOwnerType: %v", v)
	}
}

type V4ScheduleResponse struct {
	ID          int64                       `json:"id"`
	Name        string                      `json:"name"`
	Description string                      `json:"description"`
	OrgID       string                      `json:"orgID"`
	TeamID      string                      `json:"teamID"`
	TimeZone    string                      `json:"timeZone"`
	Paused      bool                        `json:"paused"`
	OwnerID     string                      `json:"ownerID"`
	OwnerType   V4ScheduleResponseOwnerType `json:"ownerType"`
	Tags        []V4Tag                     `json:"tags"`
	CreatedAt   string                      `json:"createdAt"`
	UpdatedAt   string                      `json:"updatedAt"`
}

func (v *V4ScheduleResponse) GetID() int64 {
	if v == nil {
		return 0
	}
	return v.ID
}

func (v *V4ScheduleResponse) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V4ScheduleResponse) GetDescription() string {
	if v == nil {
		return ""
	}
	return v.Description
}

func (v *V4ScheduleResponse) GetOrgID() string {
	if v == nil {
		return ""
	}
	return v.OrgID
}

func (v *V4ScheduleResponse) GetTeamID() string {
	if v == nil {
		return ""
	}
	return v.TeamID
}

func (v *V4ScheduleResponse) GetTimeZone() string {
	if v == nil {
		return ""
	}
	return v.TimeZone
}

func (v *V4ScheduleResponse) GetPaused() bool {
	if v == nil {
		return false
	}
	return v.Paused
}

func (v *V4ScheduleResponse) GetOwnerID() string {
	if v == nil {
		return ""
	}
	return v.OwnerID
}

func (v *V4ScheduleResponse) GetOwnerType() V4ScheduleResponseOwnerType {
	if v == nil {
		return V4ScheduleResponseOwnerType("")
	}
	return v.OwnerType
}

func (v *V4ScheduleResponse) GetTags() []V4Tag {
	if v == nil {
		return nil
	}
	return v.Tags
}

func (v *V4ScheduleResponse) GetCreatedAt() string {
	if v == nil {
		return ""
	}
	return v.CreatedAt
}

func (v *V4ScheduleResponse) GetUpdatedAt() string {
	if v == nil {
		return ""
	}
	return v.UpdatedAt
}
