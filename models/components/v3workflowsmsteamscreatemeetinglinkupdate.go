// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/internal/utils"
)

type V3WorkflowsMsTeamsCreateMeetingLinkUpdateName string

const (
	V3WorkflowsMsTeamsCreateMeetingLinkUpdateNameMsteamsCreateMeetingLink V3WorkflowsMsTeamsCreateMeetingLinkUpdateName = "msteams_create_meeting_link"
)

func (e V3WorkflowsMsTeamsCreateMeetingLinkUpdateName) ToPointer() *V3WorkflowsMsTeamsCreateMeetingLinkUpdateName {
	return &e
}
func (e *V3WorkflowsMsTeamsCreateMeetingLinkUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "msteams_create_meeting_link":
		*e = V3WorkflowsMsTeamsCreateMeetingLinkUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsMsTeamsCreateMeetingLinkUpdateName: %v", v)
	}
}

type V3WorkflowsMsTeamsCreateMeetingLinkUpdate struct {
	Name V3WorkflowsMsTeamsCreateMeetingLinkUpdateName `json:"name"`
}

func (v V3WorkflowsMsTeamsCreateMeetingLinkUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsMsTeamsCreateMeetingLinkUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsMsTeamsCreateMeetingLinkUpdate) GetName() V3WorkflowsMsTeamsCreateMeetingLinkUpdateName {
	if v == nil {
		return V3WorkflowsMsTeamsCreateMeetingLinkUpdateName("")
	}
	return v.Name
}
