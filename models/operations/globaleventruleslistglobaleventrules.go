// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type GlobalEventRulesListGlobalEventRulesRequest struct {
	OwnerID        string   `queryParam:"style=form,explode=true,name=owner_id"`
	PageSize       *int64   `queryParam:"style=form,explode=true,name=page_size"`
	PageNumber     *int64   `queryParam:"style=form,explode=true,name=page_number"`
	FiltersOwnerID []string `queryParam:"style=form,explode=true,name=filters.owner_id[]"`
	FiltersSearch  *string  `queryParam:"style=form,explode=true,name=filters.search"`
}

func (g *GlobalEventRulesListGlobalEventRulesRequest) GetOwnerID() string {
	if g == nil {
		return ""
	}
	return g.OwnerID
}

func (g *GlobalEventRulesListGlobalEventRulesRequest) GetPageSize() *int64 {
	if g == nil {
		return nil
	}
	return g.PageSize
}

func (g *GlobalEventRulesListGlobalEventRulesRequest) GetPageNumber() *int64 {
	if g == nil {
		return nil
	}
	return g.PageNumber
}

func (g *GlobalEventRulesListGlobalEventRulesRequest) GetFiltersOwnerID() []string {
	if g == nil {
		return nil
	}
	return g.FiltersOwnerID
}

func (g *GlobalEventRulesListGlobalEventRulesRequest) GetFiltersSearch() *string {
	if g == nil {
		return nil
	}
	return g.FiltersSearch
}

type GlobalEventRulesListGlobalEventRulesMeta struct {
	TotalCount int64 `json:"total_count"`
}

func (g *GlobalEventRulesListGlobalEventRulesMeta) GetTotalCount() int64 {
	if g == nil {
		return 0
	}
	return g.TotalCount
}

// GlobalEventRulesListGlobalEventRulesResponseBody - The request has succeeded.
type GlobalEventRulesListGlobalEventRulesResponseBody struct {
	Data []components.V3GlobalEventRulesGlobalEventRuleInList `json:"data"`
	Meta GlobalEventRulesListGlobalEventRulesMeta             `json:"meta"`
}

func (g *GlobalEventRulesListGlobalEventRulesResponseBody) GetData() []components.V3GlobalEventRulesGlobalEventRuleInList {
	if g == nil {
		return []components.V3GlobalEventRulesGlobalEventRuleInList{}
	}
	return g.Data
}

func (g *GlobalEventRulesListGlobalEventRulesResponseBody) GetMeta() GlobalEventRulesListGlobalEventRulesMeta {
	if g == nil {
		return GlobalEventRulesListGlobalEventRulesMeta{}
	}
	return g.Meta
}

type GlobalEventRulesListGlobalEventRulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesListGlobalEventRulesResponseBody

	Next func() (*GlobalEventRulesListGlobalEventRulesResponse, error)
}

func (g *GlobalEventRulesListGlobalEventRulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GlobalEventRulesListGlobalEventRulesResponse) GetObject() *GlobalEventRulesListGlobalEventRulesResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
