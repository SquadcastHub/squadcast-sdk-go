// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type SchedulesListSchedulesRequest struct {
	TeamID                  string   `queryParam:"style=form,explode=false,name=teamID"`
	ScheduleIDs             []int64  `queryParam:"style=form,explode=false,name=scheduleIDs"`
	Participants            []string `queryParam:"style=form,explode=false,name=participants"`
	ScheduleName            *string  `queryParam:"style=form,explode=false,name=scheduleName"`
	MyOnCall                *bool    `queryParam:"style=form,explode=false,name=myOnCall"`
	YouAndYourSquads        *bool    `queryParam:"style=form,explode=false,name=youAndYourSquads"`
	Search                  *string  `queryParam:"style=form,explode=false,name=search"`
	HidePaused              *bool    `queryParam:"style=form,explode=false,name=hidePaused"`
	OwnerID                 *string  `queryParam:"style=form,explode=false,name=ownerID"`
	EscalationPolicies      []string `queryParam:"style=form,explode=false,name=escalationPolicies"`
	WithoutEscalationPolicy *bool    `queryParam:"style=form,explode=false,name=withoutEscalationPolicy"`
	PageSize                *int64   `queryParam:"style=form,explode=false,name=pageSize"`
	Cursor                  *string  `queryParam:"style=form,explode=false,name=cursor"`
}

func (s *SchedulesListSchedulesRequest) GetTeamID() string {
	if s == nil {
		return ""
	}
	return s.TeamID
}

func (s *SchedulesListSchedulesRequest) GetScheduleIDs() []int64 {
	if s == nil {
		return nil
	}
	return s.ScheduleIDs
}

func (s *SchedulesListSchedulesRequest) GetParticipants() []string {
	if s == nil {
		return nil
	}
	return s.Participants
}

func (s *SchedulesListSchedulesRequest) GetScheduleName() *string {
	if s == nil {
		return nil
	}
	return s.ScheduleName
}

func (s *SchedulesListSchedulesRequest) GetMyOnCall() *bool {
	if s == nil {
		return nil
	}
	return s.MyOnCall
}

func (s *SchedulesListSchedulesRequest) GetYouAndYourSquads() *bool {
	if s == nil {
		return nil
	}
	return s.YouAndYourSquads
}

func (s *SchedulesListSchedulesRequest) GetSearch() *string {
	if s == nil {
		return nil
	}
	return s.Search
}

func (s *SchedulesListSchedulesRequest) GetHidePaused() *bool {
	if s == nil {
		return nil
	}
	return s.HidePaused
}

func (s *SchedulesListSchedulesRequest) GetOwnerID() *string {
	if s == nil {
		return nil
	}
	return s.OwnerID
}

func (s *SchedulesListSchedulesRequest) GetEscalationPolicies() []string {
	if s == nil {
		return nil
	}
	return s.EscalationPolicies
}

func (s *SchedulesListSchedulesRequest) GetWithoutEscalationPolicy() *bool {
	if s == nil {
		return nil
	}
	return s.WithoutEscalationPolicy
}

func (s *SchedulesListSchedulesRequest) GetPageSize() *int64 {
	if s == nil {
		return nil
	}
	return s.PageSize
}

func (s *SchedulesListSchedulesRequest) GetCursor() *string {
	if s == nil {
		return nil
	}
	return s.Cursor
}

// SchedulesListSchedulesResponseBody - The request has succeeded.
type SchedulesListSchedulesResponseBody struct {
	Data     []components.V4ScheduleResponse `json:"data"`
	PageInfo components.CommonV4PageInfo     `json:"pageInfo"`
}

func (s *SchedulesListSchedulesResponseBody) GetData() []components.V4ScheduleResponse {
	if s == nil {
		return []components.V4ScheduleResponse{}
	}
	return s.Data
}

func (s *SchedulesListSchedulesResponseBody) GetPageInfo() components.CommonV4PageInfo {
	if s == nil {
		return components.CommonV4PageInfo{}
	}
	return s.PageInfo
}

type SchedulesListSchedulesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *SchedulesListSchedulesResponseBody

	Next func() (*SchedulesListSchedulesResponse, error)
}

func (s *SchedulesListSchedulesResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *SchedulesListSchedulesResponse) GetObject() *SchedulesListSchedulesResponseBody {
	if s == nil {
		return nil
	}
	return s.Object
}
