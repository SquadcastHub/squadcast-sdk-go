// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type GlobalEventRulesUpdateRulesetRequest struct {
	GerID                                  int64                                             `pathParam:"style=simple,explode=false,name=ger_id"`
	AlertSourceVersion                     string                                            `pathParam:"style=simple,explode=false,name=alert_source_version"`
	AlertSourceShortname                   string                                            `pathParam:"style=simple,explode=false,name=alert_source_shortname"`
	V3GlobalEventRulesUpdateRulesetRequest components.V3GlobalEventRulesUpdateRulesetRequest `request:"mediaType=application/json"`
}

func (g *GlobalEventRulesUpdateRulesetRequest) GetGerID() int64 {
	if g == nil {
		return 0
	}
	return g.GerID
}

func (g *GlobalEventRulesUpdateRulesetRequest) GetAlertSourceVersion() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceVersion
}

func (g *GlobalEventRulesUpdateRulesetRequest) GetAlertSourceShortname() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceShortname
}

func (g *GlobalEventRulesUpdateRulesetRequest) GetV3GlobalEventRulesUpdateRulesetRequest() components.V3GlobalEventRulesUpdateRulesetRequest {
	if g == nil {
		return components.V3GlobalEventRulesUpdateRulesetRequest{}
	}
	return g.V3GlobalEventRulesUpdateRulesetRequest
}

// GlobalEventRulesUpdateRulesetResponseBody - The request has succeeded.
type GlobalEventRulesUpdateRulesetResponseBody struct {
	Data components.V3GlobalEventRulesRulesetResponse `json:"data"`
}

func (g *GlobalEventRulesUpdateRulesetResponseBody) GetData() components.V3GlobalEventRulesRulesetResponse {
	if g == nil {
		return components.V3GlobalEventRulesRulesetResponse{}
	}
	return g.Data
}

type GlobalEventRulesUpdateRulesetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *GlobalEventRulesUpdateRulesetResponseBody
}

func (g *GlobalEventRulesUpdateRulesetResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GlobalEventRulesUpdateRulesetResponse) GetObject() *GlobalEventRulesUpdateRulesetResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
