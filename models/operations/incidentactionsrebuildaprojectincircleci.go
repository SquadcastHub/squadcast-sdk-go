// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type IncidentActionsRebuildAProjectInCircleciRequest struct {
	IncidentID                                              string                                                             `pathParam:"style=simple,explode=false,name=incidentID"`
	BuildNumber                                             string                                                             `pathParam:"style=simple,explode=false,name=buildNumber"`
	V3IncidentsIncidentActionsRebuildCircleCIProjectRequest components.V3IncidentsIncidentActionsRebuildCircleCIProjectRequest `request:"mediaType=application/json"`
}

func (i *IncidentActionsRebuildAProjectInCircleciRequest) GetIncidentID() string {
	if i == nil {
		return ""
	}
	return i.IncidentID
}

func (i *IncidentActionsRebuildAProjectInCircleciRequest) GetBuildNumber() string {
	if i == nil {
		return ""
	}
	return i.BuildNumber
}

func (i *IncidentActionsRebuildAProjectInCircleciRequest) GetV3IncidentsIncidentActionsRebuildCircleCIProjectRequest() components.V3IncidentsIncidentActionsRebuildCircleCIProjectRequest {
	if i == nil {
		return components.V3IncidentsIncidentActionsRebuildCircleCIProjectRequest{}
	}
	return i.V3IncidentsIncidentActionsRebuildCircleCIProjectRequest
}

type IncidentActionsRebuildAProjectInCircleciMeta struct {
	StatusCode int64 `json:"status_code"`
}

func (i *IncidentActionsRebuildAProjectInCircleciMeta) GetStatusCode() int64 {
	if i == nil {
		return 0
	}
	return i.StatusCode
}

// IncidentActionsRebuildAProjectInCircleciResponseBody - The request has succeeded.
type IncidentActionsRebuildAProjectInCircleciResponseBody struct {
	// Represents the response structure for rebuilding a project in CircleCI.
	Data components.V3IncidentsIncidentActionsCircleCIRebuildResponse `json:"data"`
	Meta *IncidentActionsRebuildAProjectInCircleciMeta                `json:"meta,omitempty"`
}

func (i *IncidentActionsRebuildAProjectInCircleciResponseBody) GetData() components.V3IncidentsIncidentActionsCircleCIRebuildResponse {
	if i == nil {
		return components.V3IncidentsIncidentActionsCircleCIRebuildResponse{}
	}
	return i.Data
}

func (i *IncidentActionsRebuildAProjectInCircleciResponseBody) GetMeta() *IncidentActionsRebuildAProjectInCircleciMeta {
	if i == nil {
		return nil
	}
	return i.Meta
}

type IncidentActionsRebuildAProjectInCircleciResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *IncidentActionsRebuildAProjectInCircleciResponseBody
}

func (i *IncidentActionsRebuildAProjectInCircleciResponse) GetHTTPMeta() components.HTTPMetadata {
	if i == nil {
		return components.HTTPMetadata{}
	}
	return i.HTTPMeta
}

func (i *IncidentActionsRebuildAProjectInCircleciResponse) GetObject() *IncidentActionsRebuildAProjectInCircleciResponseBody {
	if i == nil {
		return nil
	}
	return i.Object
}
