// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type EscalationPoliciesGetEscalationPolicyByTeamRequest struct {
	// here owner_id represents team_id, if  team_id is not provided, it will return escalation policies of all teams.
	OwnerID    string `queryParam:"style=form,explode=true,name=owner_id"`
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page_number"`
	PageSize   *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamRequest) GetOwnerID() string {
	if e == nil {
		return ""
	}
	return e.OwnerID
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamRequest) GetPageNumber() *int64 {
	if e == nil {
		return nil
	}
	return e.PageNumber
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamRequest) GetPageSize() *int64 {
	if e == nil {
		return nil
	}
	return e.PageSize
}

type EscalationPoliciesGetEscalationPolicyByTeamMeta struct {
	TotalCount int `json:"total_count"`
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamMeta) GetTotalCount() int {
	if e == nil {
		return 0
	}
	return e.TotalCount
}

// EscalationPoliciesGetEscalationPolicyByTeamResponseBody - The request has succeeded.
type EscalationPoliciesGetEscalationPolicyByTeamResponseBody struct {
	Data []components.V3EscalationPoliciesEscalationPolicyResponse `json:"data"`
	Meta EscalationPoliciesGetEscalationPolicyByTeamMeta           `json:"meta"`
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamResponseBody) GetData() []components.V3EscalationPoliciesEscalationPolicyResponse {
	if e == nil {
		return []components.V3EscalationPoliciesEscalationPolicyResponse{}
	}
	return e.Data
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamResponseBody) GetMeta() EscalationPoliciesGetEscalationPolicyByTeamMeta {
	if e == nil {
		return EscalationPoliciesGetEscalationPolicyByTeamMeta{}
	}
	return e.Meta
}

type EscalationPoliciesGetEscalationPolicyByTeamResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *EscalationPoliciesGetEscalationPolicyByTeamResponseBody

	Next func() (*EscalationPoliciesGetEscalationPolicyByTeamResponse, error)
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamResponse) GetHTTPMeta() components.HTTPMetadata {
	if e == nil {
		return components.HTTPMetadata{}
	}
	return e.HTTPMeta
}

func (e *EscalationPoliciesGetEscalationPolicyByTeamResponse) GetObject() *EscalationPoliciesGetEscalationPolicyByTeamResponseBody {
	if e == nil {
		return nil
	}
	return e.Object
}
