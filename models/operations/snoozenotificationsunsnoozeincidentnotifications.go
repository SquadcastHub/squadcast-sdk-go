// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type SnoozeNotificationsUnsnoozeIncidentNotificationsRequest struct {
	IncidentID                                            string                                                           `pathParam:"style=simple,explode=false,name=incidentID"`
	V3IncidentsSnoozeNotificationsUnsnoozeIncidentRequest components.V3IncidentsSnoozeNotificationsUnsnoozeIncidentRequest `request:"mediaType=application/json"`
}

func (s *SnoozeNotificationsUnsnoozeIncidentNotificationsRequest) GetIncidentID() string {
	if s == nil {
		return ""
	}
	return s.IncidentID
}

func (s *SnoozeNotificationsUnsnoozeIncidentNotificationsRequest) GetV3IncidentsSnoozeNotificationsUnsnoozeIncidentRequest() components.V3IncidentsSnoozeNotificationsUnsnoozeIncidentRequest {
	if s == nil {
		return components.V3IncidentsSnoozeNotificationsUnsnoozeIncidentRequest{}
	}
	return s.V3IncidentsSnoozeNotificationsUnsnoozeIncidentRequest
}

// SnoozeNotificationsUnsnoozeIncidentNotificationsResponseBody - The request has succeeded.
type SnoozeNotificationsUnsnoozeIncidentNotificationsResponseBody struct {
	Data components.V3IncidentsSnoozeNotificationsUnsnoozeIncidentResponse `json:"data"`
}

func (s *SnoozeNotificationsUnsnoozeIncidentNotificationsResponseBody) GetData() components.V3IncidentsSnoozeNotificationsUnsnoozeIncidentResponse {
	if s == nil {
		return components.V3IncidentsSnoozeNotificationsUnsnoozeIncidentResponse{}
	}
	return s.Data
}

type SnoozeNotificationsUnsnoozeIncidentNotificationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *SnoozeNotificationsUnsnoozeIncidentNotificationsResponseBody
}

func (s *SnoozeNotificationsUnsnoozeIncidentNotificationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *SnoozeNotificationsUnsnoozeIncidentNotificationsResponse) GetObject() *SnoozeNotificationsUnsnoozeIncidentNotificationsResponseBody {
	if s == nil {
		return nil
	}
	return s.Object
}
