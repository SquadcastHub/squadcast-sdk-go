// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type NotesGetAllNotesRequest struct {
	IncidentID string `pathParam:"style=simple,explode=false,name=IncidentId"`
}

func (n *NotesGetAllNotesRequest) GetIncidentID() string {
	if n == nil {
		return ""
	}
	return n.IncidentID
}

// NotesGetAllNotesResponseBody - The request has succeeded.
type NotesGetAllNotesResponseBody struct {
	Data []components.V3IncidentsNotesNoteResponse `json:"data"`
}

func (n *NotesGetAllNotesResponseBody) GetData() []components.V3IncidentsNotesNoteResponse {
	if n == nil {
		return []components.V3IncidentsNotesNoteResponse{}
	}
	return n.Data
}

type NotesGetAllNotesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *NotesGetAllNotesResponseBody
}

func (n *NotesGetAllNotesResponse) GetHTTPMeta() components.HTTPMetadata {
	if n == nil {
		return components.HTTPMetadata{}
	}
	return n.HTTPMeta
}

func (n *NotesGetAllNotesResponse) GetObject() *NotesGetAllNotesResponseBody {
	if n == nil {
		return nil
	}
	return n.Object
}
