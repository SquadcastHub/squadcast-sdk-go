// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type WorkflowsUpdateWorkflowRequest struct {
	WorkflowID                             string                                            `pathParam:"style=simple,explode=false,name=workflowID"`
	V3WorkflowsCreateWorkflowRequestUpdate components.V3WorkflowsCreateWorkflowRequestUpdate `request:"mediaType=application/json"`
}

func (w *WorkflowsUpdateWorkflowRequest) GetWorkflowID() string {
	if w == nil {
		return ""
	}
	return w.WorkflowID
}

func (w *WorkflowsUpdateWorkflowRequest) GetV3WorkflowsCreateWorkflowRequestUpdate() components.V3WorkflowsCreateWorkflowRequestUpdate {
	if w == nil {
		return components.V3WorkflowsCreateWorkflowRequestUpdate{}
	}
	return w.V3WorkflowsCreateWorkflowRequestUpdate
}

// WorkflowsUpdateWorkflowResponseBody - The request has succeeded.
type WorkflowsUpdateWorkflowResponseBody struct {
	Data components.V3WorkflowsUpdateWorkflowAPIResponse `json:"data"`
}

func (w *WorkflowsUpdateWorkflowResponseBody) GetData() components.V3WorkflowsUpdateWorkflowAPIResponse {
	if w == nil {
		return components.V3WorkflowsUpdateWorkflowAPIResponse{}
	}
	return w.Data
}

type WorkflowsUpdateWorkflowResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *WorkflowsUpdateWorkflowResponseBody
}

func (w *WorkflowsUpdateWorkflowResponse) GetHTTPMeta() components.HTTPMetadata {
	if w == nil {
		return components.HTTPMetadata{}
	}
	return w.HTTPMeta
}

func (w *WorkflowsUpdateWorkflowResponse) GetObject() *WorkflowsUpdateWorkflowResponseBody {
	if w == nil {
		return nil
	}
	return w.Object
}
