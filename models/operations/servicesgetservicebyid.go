// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type ServicesGetServiceByIDRequest struct {
	ServiceID string `pathParam:"style=simple,explode=false,name=serviceID"`
}

func (s *ServicesGetServiceByIDRequest) GetServiceID() string {
	if s == nil {
		return ""
	}
	return s.ServiceID
}

// ServicesGetServiceByIDResponseBody - The request has succeeded.
type ServicesGetServiceByIDResponseBody struct {
	Data components.V3ServicesServiceResponse `json:"data"`
}

func (s *ServicesGetServiceByIDResponseBody) GetData() components.V3ServicesServiceResponse {
	if s == nil {
		return components.V3ServicesServiceResponse{}
	}
	return s.Data
}

type ServicesGetServiceByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *ServicesGetServiceByIDResponseBody
}

func (s *ServicesGetServiceByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *ServicesGetServiceByIDResponse) GetObject() *ServicesGetServiceByIDResponseBody {
	if s == nil {
		return nil
	}
	return s.Object
}
