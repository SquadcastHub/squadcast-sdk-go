// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type ServicesGetServicesByNameRequest struct {
	Name    string `queryParam:"style=form,explode=false,name=name"`
	OwnerID string `queryParam:"style=form,explode=false,name=owner_id"`
}

func (s *ServicesGetServicesByNameRequest) GetName() string {
	if s == nil {
		return ""
	}
	return s.Name
}

func (s *ServicesGetServicesByNameRequest) GetOwnerID() string {
	if s == nil {
		return ""
	}
	return s.OwnerID
}

// ServicesGetServicesByNameResponseBody - The request has succeeded.
type ServicesGetServicesByNameResponseBody struct {
	Data components.V3ServicesServiceResponse `json:"data"`
}

func (s *ServicesGetServicesByNameResponseBody) GetData() components.V3ServicesServiceResponse {
	if s == nil {
		return components.V3ServicesServiceResponse{}
	}
	return s.Data
}

type ServicesGetServicesByNameResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *ServicesGetServicesByNameResponseBody
}

func (s *ServicesGetServicesByNameResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *ServicesGetServicesByNameResponse) GetObject() *ServicesGetServicesByNameResponseBody {
	if s == nil {
		return nil
	}
	return s.Object
}
