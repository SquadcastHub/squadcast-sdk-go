// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/models/components"
)

type RunbooksUpdateRunbookRequest struct {
	RunbookID                      string                                    `pathParam:"style=simple,explode=false,name=runbookID"`
	V3RunbooksUpdateRunbookRequest components.V3RunbooksUpdateRunbookRequest `request:"mediaType=application/json"`
}

func (r *RunbooksUpdateRunbookRequest) GetRunbookID() string {
	if r == nil {
		return ""
	}
	return r.RunbookID
}

func (r *RunbooksUpdateRunbookRequest) GetV3RunbooksUpdateRunbookRequest() components.V3RunbooksUpdateRunbookRequest {
	if r == nil {
		return components.V3RunbooksUpdateRunbookRequest{}
	}
	return r.V3RunbooksUpdateRunbookRequest
}

// RunbooksUpdateRunbookResponseBody - The request has succeeded.
type RunbooksUpdateRunbookResponseBody struct {
	Data components.V3RunbooksRunbookResponse `json:"data"`
}

func (r *RunbooksUpdateRunbookResponseBody) GetData() components.V3RunbooksRunbookResponse {
	if r == nil {
		return components.V3RunbooksRunbookResponse{}
	}
	return r.Data
}

type RunbooksUpdateRunbookResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *RunbooksUpdateRunbookResponseBody
}

func (r *RunbooksUpdateRunbookResponse) GetHTTPMeta() components.HTTPMetadata {
	if r == nil {
		return components.HTTPMetadata{}
	}
	return r.HTTPMeta
}

func (r *RunbooksUpdateRunbookResponse) GetObject() *RunbooksUpdateRunbookResponseBody {
	if r == nil {
		return nil
	}
	return r.Object
}
