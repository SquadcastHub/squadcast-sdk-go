// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type PostmortemsGetAllPostmortemsRequest struct {
	// Provide date in RFC3339 format
	FromDate string `queryParam:"style=form,explode=true,name=fromDate"`
	// Provide date in RFC3339 format
	ToDate string `queryParam:"style=form,explode=true,name=toDate"`
	// Here owner_id represents team_id
	OwnerID string `queryParam:"style=form,explode=true,name=owner_id"`
	Limit   int64  `queryParam:"style=form,explode=true,name=limit"`
}

func (p *PostmortemsGetAllPostmortemsRequest) GetFromDate() string {
	if p == nil {
		return ""
	}
	return p.FromDate
}

func (p *PostmortemsGetAllPostmortemsRequest) GetToDate() string {
	if p == nil {
		return ""
	}
	return p.ToDate
}

func (p *PostmortemsGetAllPostmortemsRequest) GetOwnerID() string {
	if p == nil {
		return ""
	}
	return p.OwnerID
}

func (p *PostmortemsGetAllPostmortemsRequest) GetLimit() int64 {
	if p == nil {
		return 0
	}
	return p.Limit
}

type PostmortemsGetAllPostmortemsData struct {
	Result     []components.V3IncidentsPostmortemsPostmortemListResult `json:"result"`
	TotalCount []components.V3IncidentsPostmortemsTotalPostmortemCount `json:"total_count"`
}

func (p *PostmortemsGetAllPostmortemsData) GetResult() []components.V3IncidentsPostmortemsPostmortemListResult {
	if p == nil {
		return []components.V3IncidentsPostmortemsPostmortemListResult{}
	}
	return p.Result
}

func (p *PostmortemsGetAllPostmortemsData) GetTotalCount() []components.V3IncidentsPostmortemsTotalPostmortemCount {
	if p == nil {
		return []components.V3IncidentsPostmortemsTotalPostmortemCount{}
	}
	return p.TotalCount
}

// PostmortemsGetAllPostmortemsResponseBody - The request has succeeded.
type PostmortemsGetAllPostmortemsResponseBody struct {
	Data []PostmortemsGetAllPostmortemsData `json:"data"`
}

func (p *PostmortemsGetAllPostmortemsResponseBody) GetData() []PostmortemsGetAllPostmortemsData {
	if p == nil {
		return []PostmortemsGetAllPostmortemsData{}
	}
	return p.Data
}

type PostmortemsGetAllPostmortemsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *PostmortemsGetAllPostmortemsResponseBody
}

func (p *PostmortemsGetAllPostmortemsResponse) GetHTTPMeta() components.HTTPMetadata {
	if p == nil {
		return components.HTTPMetadata{}
	}
	return p.HTTPMeta
}

func (p *PostmortemsGetAllPostmortemsResponse) GetObject() *PostmortemsGetAllPostmortemsResponseBody {
	if p == nil {
		return nil
	}
	return p.Object
}
