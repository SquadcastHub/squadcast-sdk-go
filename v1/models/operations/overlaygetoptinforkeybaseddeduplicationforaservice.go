// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type OverlayGetOptinForKeyBasedDeduplicationForAServiceRequest struct {
	ServiceID string `pathParam:"style=simple,explode=false,name=serviceID"`
}

func (o *OverlayGetOptinForKeyBasedDeduplicationForAServiceRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

type OverlayGetOptinForKeyBasedDeduplicationForAServiceData struct {
	DedupKeyEnabled bool `json:"dedup_key_enabled"`
}

func (o *OverlayGetOptinForKeyBasedDeduplicationForAServiceData) GetDedupKeyEnabled() bool {
	if o == nil {
		return false
	}
	return o.DedupKeyEnabled
}

// OverlayGetOptinForKeyBasedDeduplicationForAServiceResponseBody - The request has succeeded.
type OverlayGetOptinForKeyBasedDeduplicationForAServiceResponseBody struct {
	Data OverlayGetOptinForKeyBasedDeduplicationForAServiceData `json:"data"`
}

func (o *OverlayGetOptinForKeyBasedDeduplicationForAServiceResponseBody) GetData() OverlayGetOptinForKeyBasedDeduplicationForAServiceData {
	if o == nil {
		return OverlayGetOptinForKeyBasedDeduplicationForAServiceData{}
	}
	return o.Data
}

type OverlayGetOptinForKeyBasedDeduplicationForAServiceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *OverlayGetOptinForKeyBasedDeduplicationForAServiceResponseBody
}

func (o *OverlayGetOptinForKeyBasedDeduplicationForAServiceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *OverlayGetOptinForKeyBasedDeduplicationForAServiceResponse) GetObject() *OverlayGetOptinForKeyBasedDeduplicationForAServiceResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
