// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type OverlayGetAllDedupKeyOverlayByServiceRequest struct {
	ServiceID string `pathParam:"style=simple,explode=false,name=serviceID"`
}

func (o *OverlayGetAllDedupKeyOverlayByServiceRequest) GetServiceID() string {
	if o == nil {
		return ""
	}
	return o.ServiceID
}

// OverlayGetAllDedupKeyOverlayByServiceResponseBody - The request has succeeded.
type OverlayGetAllDedupKeyOverlayByServiceResponseBody struct {
	Data []components.V3ServicesOverlayOverlayResponse `json:"data"`
}

func (o *OverlayGetAllDedupKeyOverlayByServiceResponseBody) GetData() []components.V3ServicesOverlayOverlayResponse {
	if o == nil {
		return []components.V3ServicesOverlayOverlayResponse{}
	}
	return o.Data
}

type OverlayGetAllDedupKeyOverlayByServiceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *OverlayGetAllDedupKeyOverlayByServiceResponseBody
}

func (o *OverlayGetAllDedupKeyOverlayByServiceResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *OverlayGetAllDedupKeyOverlayByServiceResponse) GetObject() *OverlayGetAllDedupKeyOverlayByServiceResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
