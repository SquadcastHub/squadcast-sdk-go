// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type ServicesUpdateServiceRequest struct {
	ServiceID                      string                                    `pathParam:"style=simple,explode=false,name=serviceID"`
	V3ServicesUpdateServiceRequest components.V3ServicesUpdateServiceRequest `request:"mediaType=application/json"`
}

func (s *ServicesUpdateServiceRequest) GetServiceID() string {
	if s == nil {
		return ""
	}
	return s.ServiceID
}

func (s *ServicesUpdateServiceRequest) GetV3ServicesUpdateServiceRequest() components.V3ServicesUpdateServiceRequest {
	if s == nil {
		return components.V3ServicesUpdateServiceRequest{}
	}
	return s.V3ServicesUpdateServiceRequest
}

// ServicesUpdateServiceResponseBody - The request has succeeded.
type ServicesUpdateServiceResponseBody struct {
	Data components.V3ServicesServiceResponse `json:"data"`
}

func (s *ServicesUpdateServiceResponseBody) GetData() components.V3ServicesServiceResponse {
	if s == nil {
		return components.V3ServicesServiceResponse{}
	}
	return s.Data
}

type ServicesUpdateServiceResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *ServicesUpdateServiceResponseBody
}

func (s *ServicesUpdateServiceResponse) GetHTTPMeta() components.HTTPMetadata {
	if s == nil {
		return components.HTTPMetadata{}
	}
	return s.HTTPMeta
}

func (s *ServicesUpdateServiceResponse) GetObject() *ServicesUpdateServiceResponseBody {
	if s == nil {
		return nil
	}
	return s.Object
}
