// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type GlobalEventRulesCreateRuleRequest struct {
	GerID                                       int64                                                  `pathParam:"style=simple,explode=false,name=ger_id"`
	AlertSourceVersion                          string                                                 `pathParam:"style=simple,explode=false,name=alert_source_version"`
	AlertSourceShortname                        string                                                 `pathParam:"style=simple,explode=false,name=alert_source_shortname"`
	V3GlobalEventRulesCreateOrUpdateRuleRequest components.V3GlobalEventRulesCreateOrUpdateRuleRequest `request:"mediaType=application/json"`
}

func (g *GlobalEventRulesCreateRuleRequest) GetGerID() int64 {
	if g == nil {
		return 0
	}
	return g.GerID
}

func (g *GlobalEventRulesCreateRuleRequest) GetAlertSourceVersion() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceVersion
}

func (g *GlobalEventRulesCreateRuleRequest) GetAlertSourceShortname() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceShortname
}

func (g *GlobalEventRulesCreateRuleRequest) GetV3GlobalEventRulesCreateOrUpdateRuleRequest() components.V3GlobalEventRulesCreateOrUpdateRuleRequest {
	if g == nil {
		return components.V3GlobalEventRulesCreateOrUpdateRuleRequest{}
	}
	return g.V3GlobalEventRulesCreateOrUpdateRuleRequest
}

// GlobalEventRulesCreateRuleResponseBody - The request has succeeded and a new resource has been created as a result.
type GlobalEventRulesCreateRuleResponseBody struct {
	Data components.V3GlobalEventRulesRulesetRuleResponse `json:"data"`
}

func (g *GlobalEventRulesCreateRuleResponseBody) GetData() components.V3GlobalEventRulesRulesetRuleResponse {
	if g == nil {
		return components.V3GlobalEventRulesRulesetRuleResponse{}
	}
	return g.Data
}

type GlobalEventRulesCreateRuleResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded and a new resource has been created as a result.
	Object *GlobalEventRulesCreateRuleResponseBody
}

func (g *GlobalEventRulesCreateRuleResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GlobalEventRulesCreateRuleResponse) GetObject() *GlobalEventRulesCreateRuleResponseBody {
	if g == nil {
		return nil
	}
	return g.Object
}
