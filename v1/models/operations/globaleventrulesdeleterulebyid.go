// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type GlobalEventRulesDeleteRuleByIDRequest struct {
	GerID                int64  `pathParam:"style=simple,explode=false,name=ger_id"`
	AlertSourceVersion   string `pathParam:"style=simple,explode=false,name=alert_source_version"`
	AlertSourceShortname string `pathParam:"style=simple,explode=false,name=alert_source_shortname"`
	RuleID               string `pathParam:"style=simple,explode=false,name=rule_id"`
}

func (g *GlobalEventRulesDeleteRuleByIDRequest) GetGerID() int64 {
	if g == nil {
		return 0
	}
	return g.GerID
}

func (g *GlobalEventRulesDeleteRuleByIDRequest) GetAlertSourceVersion() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceVersion
}

func (g *GlobalEventRulesDeleteRuleByIDRequest) GetAlertSourceShortname() string {
	if g == nil {
		return ""
	}
	return g.AlertSourceShortname
}

func (g *GlobalEventRulesDeleteRuleByIDRequest) GetRuleID() string {
	if g == nil {
		return ""
	}
	return g.RuleID
}

// GlobalEventRulesDeleteRuleByIDResponseBody - There is no content to send for this request, but the headers may be useful.
type GlobalEventRulesDeleteRuleByIDResponseBody struct {
}

type GlobalEventRulesDeleteRuleByIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	Body     []byte
}

func (g *GlobalEventRulesDeleteRuleByIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if g == nil {
		return components.HTTPMetadata{}
	}
	return g.HTTPMeta
}

func (g *GlobalEventRulesDeleteRuleByIDResponse) GetBody() []byte {
	if g == nil {
		return nil
	}
	return g.Body
}
