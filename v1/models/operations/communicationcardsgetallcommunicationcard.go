// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type CommunicationCardsGetAllCommunicationCardRequest struct {
	IncidentID string `pathParam:"style=simple,explode=false,name=IncidentId"`
}

func (c *CommunicationCardsGetAllCommunicationCardRequest) GetIncidentID() string {
	if c == nil {
		return ""
	}
	return c.IncidentID
}

// CommunicationCardsGetAllCommunicationCardResponseBody - The request has succeeded.
type CommunicationCardsGetAllCommunicationCardResponseBody struct {
	Data []components.V3IncidentsCommunicationCardsCommunicationCardResponse `json:"data"`
}

func (c *CommunicationCardsGetAllCommunicationCardResponseBody) GetData() []components.V3IncidentsCommunicationCardsCommunicationCardResponse {
	if c == nil {
		return []components.V3IncidentsCommunicationCardsCommunicationCardResponse{}
	}
	return c.Data
}

type CommunicationCardsGetAllCommunicationCardResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *CommunicationCardsGetAllCommunicationCardResponseBody
}

func (c *CommunicationCardsGetAllCommunicationCardResponse) GetHTTPMeta() components.HTTPMetadata {
	if c == nil {
		return components.HTTPMetadata{}
	}
	return c.HTTPMeta
}

func (c *CommunicationCardsGetAllCommunicationCardResponse) GetObject() *CommunicationCardsGetAllCommunicationCardResponseBody {
	if c == nil {
		return nil
	}
	return c.Object
}
