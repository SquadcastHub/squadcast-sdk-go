// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/SquadcastHub/squadcast-sdk-go/v1/models/components"
)

type IncidentsResolveIncidentRequest struct {
	IncidentID                        string                                       `pathParam:"style=simple,explode=false,name=incidentID"`
	V3IncidentsResolveIncidentRequest components.V3IncidentsResolveIncidentRequest `request:"mediaType=application/json"`
}

func (i *IncidentsResolveIncidentRequest) GetIncidentID() string {
	if i == nil {
		return ""
	}
	return i.IncidentID
}

func (i *IncidentsResolveIncidentRequest) GetV3IncidentsResolveIncidentRequest() components.V3IncidentsResolveIncidentRequest {
	if i == nil {
		return components.V3IncidentsResolveIncidentRequest{}
	}
	return i.V3IncidentsResolveIncidentRequest
}

// IncidentsResolveIncidentResponseBody - The request has succeeded.
type IncidentsResolveIncidentResponseBody struct {
	Data string `json:"data"`
}

func (i *IncidentsResolveIncidentResponseBody) GetData() string {
	if i == nil {
		return ""
	}
	return i.Data
}

type IncidentsResolveIncidentResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The request has succeeded.
	Object *IncidentsResolveIncidentResponseBody
}

func (i *IncidentsResolveIncidentResponse) GetHTTPMeta() components.HTTPMetadata {
	if i == nil {
		return components.HTTPMetadata{}
	}
	return i.HTTPMeta
}

func (i *IncidentsResolveIncidentResponse) GetObject() *IncidentsResolveIncidentResponseBody {
	if i == nil {
		return nil
	}
	return i.Object
}
