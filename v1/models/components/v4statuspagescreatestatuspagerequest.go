// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type V4StatusPagesCreateStatusPageRequestOwnerType string

const (
	V4StatusPagesCreateStatusPageRequestOwnerTypeTeam  V4StatusPagesCreateStatusPageRequestOwnerType = "team"
	V4StatusPagesCreateStatusPageRequestOwnerTypeUser  V4StatusPagesCreateStatusPageRequestOwnerType = "user"
	V4StatusPagesCreateStatusPageRequestOwnerTypeSquad V4StatusPagesCreateStatusPageRequestOwnerType = "squad"
)

func (e V4StatusPagesCreateStatusPageRequestOwnerType) ToPointer() *V4StatusPagesCreateStatusPageRequestOwnerType {
	return &e
}
func (e *V4StatusPagesCreateStatusPageRequestOwnerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "team":
		fallthrough
	case "user":
		fallthrough
	case "squad":
		*e = V4StatusPagesCreateStatusPageRequestOwnerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V4StatusPagesCreateStatusPageRequestOwnerType: %v", v)
	}
}

type V4StatusPagesCreateStatusPageRequest struct {
	Name                         string                                        `json:"name"`
	Description                  *string                                       `json:"description,omitempty"`
	IsPublic                     *bool                                         `json:"isPublic,omitempty"`
	DomainName                   string                                        `json:"domainName"`
	CustomDomainName             *string                                       `json:"customDomainName,omitempty"`
	LogoURL                      string                                        `json:"logoUrl"`
	Timezone                     string                                        `json:"timezone"`
	TeamID                       string                                        `json:"teamID"`
	ThemeColor                   *V4StatusPagesNewStatusPageThemeColor         `json:"themeColor,omitempty"`
	Components                   []V4StatusPagesNewStatusPageComponentList     `json:"components,omitempty"`
	ContactEmail                 string                                        `json:"contactEmail"`
	AllowWebhookSubscription     *bool                                         `json:"allowWebhookSubscription,omitempty"`
	AllowComponentsSubscription  *bool                                         `json:"allowComponentsSubscription,omitempty"`
	AllowMaintenanceSubscription *bool                                         `json:"allowMaintenanceSubscription,omitempty"`
	OwnerType                    V4StatusPagesCreateStatusPageRequestOwnerType `json:"ownerType"`
	OwnerID                      string                                        `json:"ownerID"`
}

func (v *V4StatusPagesCreateStatusPageRequest) GetName() string {
	if v == nil {
		return ""
	}
	return v.Name
}

func (v *V4StatusPagesCreateStatusPageRequest) GetDescription() *string {
	if v == nil {
		return nil
	}
	return v.Description
}

func (v *V4StatusPagesCreateStatusPageRequest) GetIsPublic() *bool {
	if v == nil {
		return nil
	}
	return v.IsPublic
}

func (v *V4StatusPagesCreateStatusPageRequest) GetDomainName() string {
	if v == nil {
		return ""
	}
	return v.DomainName
}

func (v *V4StatusPagesCreateStatusPageRequest) GetCustomDomainName() *string {
	if v == nil {
		return nil
	}
	return v.CustomDomainName
}

func (v *V4StatusPagesCreateStatusPageRequest) GetLogoURL() string {
	if v == nil {
		return ""
	}
	return v.LogoURL
}

func (v *V4StatusPagesCreateStatusPageRequest) GetTimezone() string {
	if v == nil {
		return ""
	}
	return v.Timezone
}

func (v *V4StatusPagesCreateStatusPageRequest) GetTeamID() string {
	if v == nil {
		return ""
	}
	return v.TeamID
}

func (v *V4StatusPagesCreateStatusPageRequest) GetThemeColor() *V4StatusPagesNewStatusPageThemeColor {
	if v == nil {
		return nil
	}
	return v.ThemeColor
}

func (v *V4StatusPagesCreateStatusPageRequest) GetComponents() []V4StatusPagesNewStatusPageComponentList {
	if v == nil {
		return nil
	}
	return v.Components
}

func (v *V4StatusPagesCreateStatusPageRequest) GetContactEmail() string {
	if v == nil {
		return ""
	}
	return v.ContactEmail
}

func (v *V4StatusPagesCreateStatusPageRequest) GetAllowWebhookSubscription() *bool {
	if v == nil {
		return nil
	}
	return v.AllowWebhookSubscription
}

func (v *V4StatusPagesCreateStatusPageRequest) GetAllowComponentsSubscription() *bool {
	if v == nil {
		return nil
	}
	return v.AllowComponentsSubscription
}

func (v *V4StatusPagesCreateStatusPageRequest) GetAllowMaintenanceSubscription() *bool {
	if v == nil {
		return nil
	}
	return v.AllowMaintenanceSubscription
}

func (v *V4StatusPagesCreateStatusPageRequest) GetOwnerType() V4StatusPagesCreateStatusPageRequestOwnerType {
	if v == nil {
		return V4StatusPagesCreateStatusPageRequestOwnerType("")
	}
	return v.OwnerType
}

func (v *V4StatusPagesCreateStatusPageRequest) GetOwnerID() string {
	if v == nil {
		return ""
	}
	return v.OwnerID
}
