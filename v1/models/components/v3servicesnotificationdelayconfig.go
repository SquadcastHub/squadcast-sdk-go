// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type V3ServicesNotificationDelayConfigFixedTimeslotConfig struct {
	StartTime  *string `json:"start_time,omitempty"`
	EndTime    *string `json:"end_time,omitempty"`
	RepeatDays []int   `json:"repeat_days,omitempty"`
}

func (v *V3ServicesNotificationDelayConfigFixedTimeslotConfig) GetStartTime() *string {
	if v == nil {
		return nil
	}
	return v.StartTime
}

func (v *V3ServicesNotificationDelayConfigFixedTimeslotConfig) GetEndTime() *string {
	if v == nil {
		return nil
	}
	return v.EndTime
}

func (v *V3ServicesNotificationDelayConfigFixedTimeslotConfig) GetRepeatDays() []int {
	if v == nil {
		return nil
	}
	return v.RepeatDays
}

type V3ServicesNotificationDelayConfigCustomTimeslots struct {
}

type V3ServicesNotificationDelayConfigAssignedTo struct {
	ID   *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

func (v *V3ServicesNotificationDelayConfigAssignedTo) GetID() *string {
	if v == nil {
		return nil
	}
	return v.ID
}

func (v *V3ServicesNotificationDelayConfigAssignedTo) GetType() *string {
	if v == nil {
		return nil
	}
	return v.Type
}

type V3ServicesNotificationDelayConfig struct {
	IsEnabled              bool                                                  `json:"is_enabled"`
	Timezone               *string                                               `json:"timezone,omitempty"`
	FixedTimeslotConfig    *V3ServicesNotificationDelayConfigFixedTimeslotConfig `json:"fixed_timeslot_config,omitempty"`
	CustomTimeslotsEnabled *bool                                                 `json:"custom_timeslots_enabled,omitempty"`
	CustomTimeslots        *V3ServicesNotificationDelayConfigCustomTimeslots     `json:"custom_timeslots,omitempty"`
	AssignedTo             *V3ServicesNotificationDelayConfigAssignedTo          `json:"assigned_to,omitempty"`
}

func (v *V3ServicesNotificationDelayConfig) GetIsEnabled() bool {
	if v == nil {
		return false
	}
	return v.IsEnabled
}

func (v *V3ServicesNotificationDelayConfig) GetTimezone() *string {
	if v == nil {
		return nil
	}
	return v.Timezone
}

func (v *V3ServicesNotificationDelayConfig) GetFixedTimeslotConfig() *V3ServicesNotificationDelayConfigFixedTimeslotConfig {
	if v == nil {
		return nil
	}
	return v.FixedTimeslotConfig
}

func (v *V3ServicesNotificationDelayConfig) GetCustomTimeslotsEnabled() *bool {
	if v == nil {
		return nil
	}
	return v.CustomTimeslotsEnabled
}

func (v *V3ServicesNotificationDelayConfig) GetCustomTimeslots() *V3ServicesNotificationDelayConfigCustomTimeslots {
	if v == nil {
		return nil
	}
	return v.CustomTimeslots
}

func (v *V3ServicesNotificationDelayConfig) GetAssignedTo() *V3ServicesNotificationDelayConfigAssignedTo {
	if v == nil {
		return nil
	}
	return v.AssignedTo
}
