// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/v1/internal/utils"
)

type V3WorkflowsMsTeamsMessageChannelUpdateName string

const (
	V3WorkflowsMsTeamsMessageChannelUpdateNameMsteamsMessageChannel V3WorkflowsMsTeamsMessageChannelUpdateName = "msteams_message_channel"
)

func (e V3WorkflowsMsTeamsMessageChannelUpdateName) ToPointer() *V3WorkflowsMsTeamsMessageChannelUpdateName {
	return &e
}
func (e *V3WorkflowsMsTeamsMessageChannelUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "msteams_message_channel":
		*e = V3WorkflowsMsTeamsMessageChannelUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsMsTeamsMessageChannelUpdateName: %v", v)
	}
}

type V3WorkflowsMsTeamsMessageChannelUpdateData struct {
	ChannelID *string `json:"channel_id,omitempty"`
	Message   *string `json:"message,omitempty"`
}

func (v V3WorkflowsMsTeamsMessageChannelUpdateData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsMsTeamsMessageChannelUpdateData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsMsTeamsMessageChannelUpdateData) GetChannelID() *string {
	if v == nil {
		return nil
	}
	return v.ChannelID
}

func (v *V3WorkflowsMsTeamsMessageChannelUpdateData) GetMessage() *string {
	if v == nil {
		return nil
	}
	return v.Message
}

type V3WorkflowsMsTeamsMessageChannelUpdate struct {
	Name V3WorkflowsMsTeamsMessageChannelUpdateName  `json:"name"`
	Data *V3WorkflowsMsTeamsMessageChannelUpdateData `json:"data,omitempty"`
}

func (v V3WorkflowsMsTeamsMessageChannelUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsMsTeamsMessageChannelUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsMsTeamsMessageChannelUpdate) GetName() V3WorkflowsMsTeamsMessageChannelUpdateName {
	if v == nil {
		return V3WorkflowsMsTeamsMessageChannelUpdateName("")
	}
	return v.Name
}

func (v *V3WorkflowsMsTeamsMessageChannelUpdate) GetData() *V3WorkflowsMsTeamsMessageChannelUpdateData {
	if v == nil {
		return nil
	}
	return v.Data
}
