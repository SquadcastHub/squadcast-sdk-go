// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/SquadcastHub/squadcast-sdk-go/v1/internal/utils"
)

type V3WorkflowsSlackMessageChannelUpdateName string

const (
	V3WorkflowsSlackMessageChannelUpdateNameSlackMessageChannel V3WorkflowsSlackMessageChannelUpdateName = "slack_message_channel"
)

func (e V3WorkflowsSlackMessageChannelUpdateName) ToPointer() *V3WorkflowsSlackMessageChannelUpdateName {
	return &e
}
func (e *V3WorkflowsSlackMessageChannelUpdateName) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "slack_message_channel":
		*e = V3WorkflowsSlackMessageChannelUpdateName(v)
		return nil
	default:
		return fmt.Errorf("invalid value for V3WorkflowsSlackMessageChannelUpdateName: %v", v)
	}
}

type V3WorkflowsSlackMessageChannelUpdateData struct {
	ChannelID   *string `json:"channel_id,omitempty"`
	ChannelName *string `json:"channel_name,omitempty"`
	Message     *string `json:"message,omitempty"`
}

func (v V3WorkflowsSlackMessageChannelUpdateData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSlackMessageChannelUpdateData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSlackMessageChannelUpdateData) GetChannelID() *string {
	if v == nil {
		return nil
	}
	return v.ChannelID
}

func (v *V3WorkflowsSlackMessageChannelUpdateData) GetChannelName() *string {
	if v == nil {
		return nil
	}
	return v.ChannelName
}

func (v *V3WorkflowsSlackMessageChannelUpdateData) GetMessage() *string {
	if v == nil {
		return nil
	}
	return v.Message
}

type V3WorkflowsSlackMessageChannelUpdate struct {
	Name V3WorkflowsSlackMessageChannelUpdateName  `json:"name"`
	Data *V3WorkflowsSlackMessageChannelUpdateData `json:"data,omitempty"`
}

func (v V3WorkflowsSlackMessageChannelUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V3WorkflowsSlackMessageChannelUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (v *V3WorkflowsSlackMessageChannelUpdate) GetName() V3WorkflowsSlackMessageChannelUpdateName {
	if v == nil {
		return V3WorkflowsSlackMessageChannelUpdateName("")
	}
	return v.Name
}

func (v *V3WorkflowsSlackMessageChannelUpdate) GetData() *V3WorkflowsSlackMessageChannelUpdateData {
	if v == nil {
		return nil
	}
	return v.Data
}
